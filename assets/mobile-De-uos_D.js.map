{"version":3,"file":"mobile-De-uos_D.js","sources":["../../../src/components/search-mobile/component.ts","../../../src/components/themes-mobile/component.ts","../../../src/components/offline/component.ts","../../../src/main.mobile.ts"],"sourcesContent":["import SearchComponent from '../search/component';\n\nclass MobileSearchComponent extends SearchComponent {\n  templateUrl = './template.html';\n  styleUrl = './style.css';\n}\n\nexport default MobileSearchComponent;\n","import Basemap from '../../models/basemap';\nimport ShareManager from '../../tools/share/sharemanager';\nimport Layer from '../../models/layers/layer';\nimport GirafeHTMLElement from '../../base/GirafeHTMLElement';\nimport MapManager from '../../tools/state/mapManager';\nimport ThemeLayer from '../../models/layers/themelayer';\nimport LayerManager from '../../tools/layermanager';\nimport BaseLayer from '../../models/layers/baselayer';\n\nclass MobileThemeComponent extends GirafeHTMLElement {\n  templateUrl = './template.html';\n  styleUrl = './style.css';\n\n  public showBasemaps: boolean = true;\n  public menuOpen: boolean = false;\n  private preventBlur: boolean = false;\n\n  constructor() {\n    super('themes-mobile');\n\n    this.configManager.loadConfig().then(() => {\n      this.showBasemaps = this.configManager.Config.basemaps.show;\n    });\n  }\n\n  toggleThemesList() {\n    this.menuOpen = !this.menuOpen;\n    super.render();\n  }\n\n  onBlur() {\n    if (!this.preventBlur) {\n      this.menuOpen = false;\n      super.render();\n    }\n  }\n\n  mouseUp() {\n    this.preventBlur = false;\n  }\n\n  onThemeChanged(theme: ThemeLayer) {\n    this.preventBlur = true;\n    this.state.themes.lastSelectedTheme = theme;\n\n    if (theme.location != null || theme.zoom != null) {\n      const view = MapManager.getInstance().getMap().getView();\n      view.animate({\n        center: theme.location ?? view.getCenter(),\n        zoom: theme.zoom ?? view.getZoom(),\n        duration: 1000\n      });\n    }\n  }\n\n  onLayerSelected(layer: BaseLayer) {\n    this.preventBlur = true;\n    if (layer instanceof Layer) {\n      LayerManager.getInstance().toggleLayer(layer);\n      this.render();\n    } else {\n      console.warn('This method should only be called for layers, not groups.');\n    }\n  }\n\n  onBasemapsLoaded(basemaps: { [key: number]: Basemap }) {\n    super.render();\n\n    // Configure default basemap (only if there is no sharedstate)\n    if (!ShareManager.getInstance().hasSharedState()) {\n      for (const basemap of Object.values(basemaps)) {\n        if (basemap.name === this.configManager.Config.basemaps.defaultBasemap) {\n          this.state.activeBasemap = basemap;\n          break;\n        }\n      }\n    }\n  }\n\n  changeBasemap(basemap: Basemap) {\n    this.preventBlur = true;\n    if (basemap.projection) {\n      this.state.projection = basemap.projection;\n    }\n    this.state.activeBasemap = basemap;\n  }\n\n  registerEvents() {\n    this.stateManager.subscribe('themes', () => {\n      super.render();\n      super.girafeTranslate();\n    });\n    this.stateManager.subscribe('layers.layersList', () => {\n      for (const layer of this.state.layers.layersList) {\n        LayerManager.getInstance().activateIfDefaultChecked(layer);\n      }\n      super.render();\n      super.girafeTranslate();\n    });\n\n    this.stateManager.subscribe(\n      'basemaps',\n      (_oldBasemaps: { [key: number]: Basemap }, newBasemaps: { [key: number]: Basemap }) =>\n        this.onBasemapsLoaded(newBasemaps)\n    );\n  }\n\n  connectedCallback() {\n    this.loadConfig().then(() => {\n      super.render();\n      this.registerEvents();\n    });\n  }\n}\n\nexport default MobileThemeComponent;\n","import GirafeHTMLElement from '../../base/GirafeHTMLElement';\nimport LayerWmts from '../../models/layers/layerwmts';\nimport OfflineManager from '../../tools/offline/offlinemanager';\nimport MapManager from '../../tools/state/mapManager';\n\nclass OfflineComponent extends GirafeHTMLElement {\n  templateUrl = './template.html';\n  styleUrl = './style.css';\n\n  protected downloadInProgress: boolean = false;\n  protected downloadProgressValue: number = 0;\n  protected offlineManager: OfflineManager;\n\n  protected downloadStartZoom?: number;\n  protected downloadEndZoom?: number;\n\n  constructor() {\n    super('themes-mobile');\n\n    this.offlineManager = OfflineManager.getInstance();\n    this.configManager.loadConfig().then(() => {\n      this.downloadStartZoom = this.configManager.Config.offline?.downloadStartZoom;\n    });\n  }\n\n  registerEvents() {\n    this.stateManager.subscribe('isOffline', () => {\n      super.render();\n    });\n    this.stateManager.subscribe('position', () => {\n      super.render();\n    });\n  }\n\n  exportData() {\n    const allWmtsLayers = this.getAllWmtsLayers();\n\n    const message = `This will export all the data for the layers [${allWmtsLayers.map((l) => l.name).join(', ')}].`;\n    if (confirm(message)) {\n      this.downloadInProgress = true;\n      this.downloadProgressValue = 0;\n      super.render();\n      const map = MapManager.getInstance().getMap();\n      const bbox = map.getView().calculateExtent(map.getSize());\n      this.offlineManager.exportWMTSTiles(bbox, allWmtsLayers, this.progressCallback.bind(this));\n    }\n  }\n\n  /**\n   * Gets the list of all active WMTS layers\n   */\n  private getAllWmtsLayers() {\n    const basemapLayers = (this.stateManager.state.activeBasemap?.layersList.filter((l) => l instanceof LayerWmts) ||\n      []) as LayerWmts[];\n    const activeLayers = this.state.layers.layersList.filter((l) => l instanceof LayerWmts && l.active) as LayerWmts[];\n    const allWmtsLayers = [...basemapLayers, ...activeLayers];\n    return allWmtsLayers;\n  }\n\n  progressCallback(progress: number) {\n    if (progress == 100) {\n      // Done.\n      this.downloadInProgress = false;\n    } else {\n      this.downloadProgressValue = progress;\n    }\n    super.render();\n  }\n\n  connectedCallback() {\n    this.loadConfig().then(() => {\n      super.render();\n      this.registerEvents();\n    });\n  }\n}\n\nexport default OfflineComponent;\n","import proj4 from 'proj4';\nimport { register } from 'ol/proj/proj4';\nimport State from './tools/state/state.js';\n\nimport ConfigManager from './tools/configuration/configmanager';\nimport ErrorManager from './tools/error/errormanager.js';\nimport CsvManager from './tools/export/csvmanager.js';\nimport I18nManager from './tools/i18n/i18nmanager.js';\nimport LogManager from './tools/logging/logmanager.js';\nimport OfflineManager from './tools/offline/offlinemanager';\nimport ShareManager from './tools/share/sharemanager';\nimport StateManager from './tools/state/statemanager';\nimport ThemesManager from './tools/themesmanager';\nimport WfsManager from './tools/wfs/wfsmanager.js';\n\nimport MapComponent from './components/map/component';\nimport MobileSearchComponent from './components/search-mobile/component';\nimport MobileThemeComponent from './components/themes-mobile/component';\nimport OfflineComponent from './components/offline/component';\n\n// Redirect to desktop interface if we are NOT on mobile\nif (!navigator.userAgent.includes('iPhone') && !navigator.userAgent.includes('Android')) {\n  window.location.href = 'index.html';\n}\n\n// Extend default Document and Window interfaces\ndeclare global {\n  interface Document {\n    geogirafe: {\n      state: State;\n      stateManager: StateManager;\n      shareManager: ShareManager;\n      offlineManager: OfflineManager;\n    };\n  }\n  interface Window {\n    CESIUM_BASE_URL: string;\n    Cesium: unknown;\n    cordova: unknown;\n  }\n  interface Navigator {\n    connection: Connection;\n  }\n}\n\ninterface Connection {\n  type: string;\n}\n\ndeclare const Connection: {\n  UNKNOWN: string;\n  ETHERNET: string;\n  WIFI: string;\n  CELL_2G: string;\n  CELL_3G: string;\n  CELL_4G: string;\n  CELL: string;\n  NONE: string;\n};\n\ntry {\n  // Register Service Worker for offline usage\n  const storeVersion: number = 6;\n  const dbCacheName: string = 'geogirafe-cache';\n  if (navigator?.serviceWorker) {\n    navigator.serviceWorker.register('service-worker.js').then((registration) => {\n      OfflineManager.getInstance().setServiceWorker(registration.active, storeVersion, dbCacheName);\n    });\n  }\n\n  if (window.cordova) {\n    // If this runs in Cordova, we have to wait the deviceready event to be able to use the connectivity plugin\n    document.addEventListener(\n      'deviceready',\n      () => {\n        const networkState = navigator.connection.type;\n        const isOffline = networkState === Connection.NONE;\n        OfflineManager.getInstance().initializeOfflineState(isOffline);\n      },\n      false\n    );\n  } else {\n    // Otherwise, just do it without waiting\n    OfflineManager.getInstance().initializeOfflineState(!navigator.onLine);\n  }\n\n  // Default configuration for Cesium (see https://cesium.com/learn/cesiumjs-learn/cesiumjs-quickstart/)\n  window.CESIUM_BASE_URL = 'lib/cesium/';\n\n  // Register custom EPSG\n  // https://epsg.io/21781\n  proj4.defs(\n    'EPSG:21781',\n    '+proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=600000 +y_0=200000 +ellps=bessel +towgs84=660.077,13.551,369.344,2.484,1.783,2.939,5.66 +units=m +no_defs'\n  );\n  // https://epsg.io/2056\n  proj4.defs(\n    'EPSG:2056',\n    '+proj=somerc +lat_0=46.9524055555556 +lon_0=7.43958333333333 +k_0=1 +x_0=2600000 +y_0=1200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs +type=crs'\n  );\n  register(proj4);\n\n  // Tell configManager it should load the mobile configuration as well\n  ConfigManager.getInstance().initMobile();\n\n  // Initialize the managers\n  ConfigManager.getInstance().loadConfig();\n  LogManager.getInstance()\n    .initLogging()\n    .then(() => {\n      ErrorManager.getInstance();\n      CsvManager.getInstance();\n      I18nManager.getInstance();\n      ThemesManager.getInstance();\n      WfsManager.getInstance();\n      LogManager.getInstance();\n\n      // Add the state to document, so that it will be accessible everywhere\n      document.geogirafe = {\n        state: StateManager.getInstance().state,\n        stateManager: StateManager.getInstance(),\n        shareManager: ShareManager.getInstance(),\n        offlineManager: OfflineManager.getInstance()\n      };\n\n      // Define components names\n      customElements.define('girafe-map', MapComponent);\n      customElements.define('girafe-search', MobileSearchComponent);\n      customElements.define('girafe-theme-select', MobileThemeComponent);\n      customElements.define('girafe-offline', OfflineComponent);\n    });\n} finally {\n  // To prevent the FOUC effect (flash of unstyled content),\n  // the html element is set to invisible when the application starts.\n  // When all elements have been declared, the html element is made visible\n  document.documentElement.style.opacity = '1';\n}\n"],"names":["MobileSearchComponent","SearchComponent","__publicField","uHtml","group","result","_a","MobileThemeComponent","GirafeHTMLElement","basemap","uHtmlFor","theme","baselayer","Layer","layer","view","MapManager","LayerManager","basemaps","ShareManager","_oldBasemaps","newBasemaps","OfflineComponent","OfflineManager","allWmtsLayers","message","l","map","bbox","basemapLayers","LayerWmts","activeLayers","progress","dbCacheName","registration","isOffline","proj4","register","ConfigManager","LogManager","ErrorManager","CsvManager","I18nManager","ThemesManager","WfsManager","StateManager","MapComponent"],"mappings":"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"}