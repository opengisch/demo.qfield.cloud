{"version":3,"file":"ScreenSpaceEventHandler-BV10dpGX.js","sources":["../../../node_modules/@cesium/engine/Source/DataSources/ConstantProperty.js","../../../node_modules/@cesium/engine/Source/DataSources/createPropertyDescriptor.js","../../../node_modules/@cesium/engine/Source/DataSources/BillboardGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/Property.js","../../../node_modules/@cesium/engine/Source/Core/TimeInterval.js","../../../node_modules/@cesium/engine/Source/Core/Iso8601.js","../../../node_modules/@cesium/engine/Source/DataSources/ColorMaterialProperty.js","../../../node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceVS.js","../../../node_modules/@cesium/engine/Source/Core/GeometryInstanceAttribute.js","../../../node_modules/@cesium/engine/Source/Shaders/ShadowVolumeAppearanceFS.js","../../../node_modules/@cesium/engine/Source/Scene/ShadowVolumeAppearance.js","../../../node_modules/@cesium/engine/Source/Scene/ClassificationPrimitive.js","../../../node_modules/@cesium/engine/Source/Scene/GroundPrimitive.js","../../../node_modules/@cesium/engine/Source/Core/GroundPolylineGeometry.js","../../../node_modules/@cesium/engine/Source/Shaders/PolylineShadowVolumeFS.js","../../../node_modules/@cesium/engine/Source/Shaders/PolylineShadowVolumeMorphFS.js","../../../node_modules/@cesium/engine/Source/Shaders/PolylineShadowVolumeMorphVS.js","../../../node_modules/@cesium/engine/Source/Shaders/PolylineShadowVolumeVS.js","../../../node_modules/@cesium/engine/Source/Shaders/Appearances/PolylineColorAppearanceVS.js","../../../node_modules/@cesium/engine/Source/Scene/PolylineColorAppearance.js","../../../node_modules/@cesium/engine/Source/Shaders/Appearances/PolylineMaterialAppearanceVS.js","../../../node_modules/@cesium/engine/Source/Scene/PolylineMaterialAppearance.js","../../../node_modules/@cesium/engine/Source/Scene/GroundPolylinePrimitive.js","../../../node_modules/@cesium/engine/Source/DataSources/ImageMaterialProperty.js","../../../node_modules/@cesium/engine/Source/DataSources/createMaterialPropertyDescriptor.js","../../../node_modules/@cesium/engine/Source/DataSources/BoxGraphics.js","../../../node_modules/@cesium/engine/Source/Core/ReferenceFrame.js","../../../node_modules/@cesium/engine/Source/DataSources/PositionProperty.js","../../../node_modules/@cesium/engine/Source/DataSources/ConstantPositionProperty.js","../../../node_modules/@cesium/engine/Source/DataSources/CorridorGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/createRawPropertyDescriptor.js","../../../node_modules/@cesium/engine/Source/DataSources/CylinderGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/EllipseGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/EllipsoidGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/LabelGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/NodeTransformationProperty.js","../../../node_modules/@cesium/engine/Source/DataSources/PropertyBag.js","../../../node_modules/@cesium/engine/Source/DataSources/ModelGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/Cesium3DTilesetGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/PathGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/PlaneGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/PointGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/PolygonGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/PolylineGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/PolylineVolumeGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/RectangleGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/WallGraphics.js","../../../node_modules/@cesium/engine/Source/DataSources/Entity.js","../../../node_modules/@cesium/engine/Source/DataSources/CallbackProperty.js","../../../node_modules/@cesium/engine/Source/DataSources/EntityCollection.js","../../../node_modules/@cesium/engine/Source/Core/EventHelper.js","../../../node_modules/@cesium/engine/Source/Core/TimeIntervalCollection.js","../../../node_modules/@cesium/engine/Source/DataSources/CompositeProperty.js","../../../node_modules/@cesium/engine/Source/DataSources/CompositePositionProperty.js","../../../node_modules/@cesium/engine/Source/Core/ExtrapolationType.js","../../../node_modules/@cesium/engine/Source/Core/LinearApproximation.js","../../../node_modules/@cesium/engine/Source/Core/getTimestamp.js","../../../node_modules/@cesium/engine/Source/DataSources/SampledProperty.js","../../../node_modules/@cesium/engine/Source/DataSources/SampledPositionProperty.js","../../../node_modules/@cesium/engine/Source/DataSources/ScaledPositionProperty.js","../../../node_modules/@zip.js/zip.js/lib/core/streams/codecs/deflate.js","../../../node_modules/@zip.js/zip.js/lib/core/streams/codecs/inflate.js","../../../node_modules/@zip.js/zip.js/lib/core/constants.js","../../../node_modules/@zip.js/zip.js/lib/core/streams/stream-adapter.js","../../../node_modules/@zip.js/zip.js/lib/core/configuration.js","../../../node_modules/@zip.js/zip.js/lib/core/streams/codecs/crc32.js","../../../node_modules/@zip.js/zip.js/lib/core/streams/crc32-stream.js","../../../node_modules/@zip.js/zip.js/lib/core/util/encode-text.js","../../../node_modules/@zip.js/zip.js/lib/core/streams/codecs/sjcl.js","../../../node_modules/@zip.js/zip.js/lib/core/streams/common-crypto.js","../../../node_modules/@zip.js/zip.js/lib/core/streams/aes-crypto-stream.js","../../../node_modules/@zip.js/zip.js/lib/core/streams/zip-crypto-stream.js","../../../node_modules/@zip.js/zip.js/lib/core/streams/zip-entry-stream.js","../../../node_modules/@zip.js/zip.js/lib/core/streams/codec-stream.js","../../../node_modules/@zip.js/zip.js/lib/core/codec-worker.js","../../../node_modules/@zip.js/zip.js/lib/core/codec-pool.js","../../../node_modules/@zip.js/zip.js/lib/core/io.js","../../../node_modules/@zip.js/zip.js/lib/core/util/cp437-decode.js","../../../node_modules/@zip.js/zip.js/lib/core/zip-entry.js","../../../node_modules/@zip.js/zip.js/lib/core/zip-writer.js","../../../node_modules/@zip.js/zip.js/lib/zip-no-worker.js","../../../node_modules/@cesium/engine/Source/DataSources/exportKml.js","../../../node_modules/@cesium/engine/Source/Core/KeyboardEventModifier.js","../../../node_modules/@cesium/engine/Source/Core/ScreenSpaceEventType.js","../../../node_modules/@cesium/engine/Source/Core/ScreenSpaceEventHandler.js"],"sourcesContent":["import defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\n\n/**\n * A {@link Property} whose value does not change with respect to simulation time.\n *\n * @alias ConstantProperty\n * @constructor\n *\n * @param {*} [value] The property value.\n *\n * @see ConstantPositionProperty\n */\nfunction ConstantProperty(value) {\n  this._value = undefined;\n  this._hasClone = false;\n  this._hasEquals = false;\n  this._definitionChanged = new Event();\n  this.setValue(value);\n}\n\nObject.defineProperties(ConstantProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.\n   * This property always returns <code>true</code>.\n   * @memberof ConstantProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    value: true,\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setValue is called with data different\n   * than the current value.\n   * @memberof ConstantProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n});\n\n/**\n * Gets the value of the property.\n *\n * @param {JulianDate} [time] The time for which to retrieve the value.  This parameter is unused since the value does not change with respect to time.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nConstantProperty.prototype.getValue = function (time, result) {\n  return this._hasClone ? this._value.clone(result) : this._value;\n};\n\n/**\n * Sets the value of the property.\n *\n * @param {*} value The property value.\n */\nConstantProperty.prototype.setValue = function (value) {\n  const oldValue = this._value;\n  if (oldValue !== value) {\n    const isDefined = defined(value);\n    const hasClone = isDefined && typeof value.clone === \"function\";\n    const hasEquals = isDefined && typeof value.equals === \"function\";\n\n    const changed = !hasEquals || !value.equals(oldValue);\n    if (changed) {\n      this._hasClone = hasClone;\n      this._hasEquals = hasEquals;\n      this._value = !hasClone ? value : value.clone(this._value);\n      this._definitionChanged.raiseEvent(this);\n    }\n  }\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nConstantProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof ConstantProperty && //\n      ((!this._hasEquals && this._value === other._value) || //\n        (this._hasEquals && this._value.equals(other._value))))\n  );\n};\n\n/**\n * Gets this property's value.\n *\n * @returns {*} This property's value.\n */\nConstantProperty.prototype.valueOf = function () {\n  return this._value;\n};\n\n/**\n * Creates a string representing this property's value.\n *\n * @returns {string} A string representing the property's value.\n */\nConstantProperty.prototype.toString = function () {\n  return String(this._value);\n};\nexport default ConstantProperty;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport ConstantProperty from \"./ConstantProperty.js\";\n\nfunction createProperty(\n  name,\n  privateName,\n  subscriptionName,\n  configurable,\n  createPropertyCallback\n) {\n  return {\n    configurable: configurable,\n    get: function () {\n      return this[privateName];\n    },\n    set: function (value) {\n      const oldValue = this[privateName];\n      const subscription = this[subscriptionName];\n      if (defined(subscription)) {\n        subscription();\n        this[subscriptionName] = undefined;\n      }\n\n      const hasValue = value !== undefined;\n      if (\n        hasValue &&\n        (!defined(value) || !defined(value.getValue)) &&\n        defined(createPropertyCallback)\n      ) {\n        value = createPropertyCallback(value);\n      }\n\n      if (oldValue !== value) {\n        this[privateName] = value;\n        this._definitionChanged.raiseEvent(this, name, value, oldValue);\n      }\n\n      if (defined(value) && defined(value.definitionChanged)) {\n        this[subscriptionName] = value.definitionChanged.addEventListener(\n          function () {\n            this._definitionChanged.raiseEvent(this, name, value, value);\n          },\n          this\n        );\n      }\n    },\n  };\n}\n\nfunction createConstantProperty(value) {\n  return new ConstantProperty(value);\n}\n\n/**\n * Used to consistently define all DataSources graphics objects.\n * This is broken into two functions because the Chrome profiler does a better\n * job of optimizing lookups if it notices that the string is constant throughout the function.\n * @private\n */\nfunction createPropertyDescriptor(name, configurable, createPropertyCallback) {\n  //Safari 8.0.3 has a JavaScript bug that causes it to confuse two variables and treat them as the same.\n  //The two extra toString calls work around the issue.\n  return createProperty(\n    name,\n    `_${name.toString()}`,\n    `_${name.toString()}Subscription`,\n    defaultValue(configurable, false),\n    defaultValue(createPropertyCallback, createConstantProperty)\n  );\n}\nexport default createPropertyDescriptor;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} BillboardGraphics.ConstructorOptions\n *\n * Initialization options for the BillboardGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the billboard.\n * @property {Property | string | HTMLCanvasElement} [image] A Property specifying the Image, URI, or Canvas to use for the billboard.\n * @property {Property | number} [scale=1.0] A numeric Property specifying the scale to apply to the image size.\n * @property {Property | Cartesian2} [pixelOffset=Cartesian2.ZERO] A {@link Cartesian2} Property specifying the pixel offset.\n * @property {Property | Cartesian3} [eyeOffset=Cartesian3.ZERO] A {@link Cartesian3} Property specifying the eye offset.\n * @property {Property | HorizontalOrigin} [horizontalOrigin=HorizontalOrigin.CENTER] A Property specifying the {@link HorizontalOrigin}.\n * @property {Property | VerticalOrigin} [verticalOrigin=VerticalOrigin.CENTER] A Property specifying the {@link VerticalOrigin}.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height is relative to.\n * @property {Property | Color} [color=Color.WHITE] A Property specifying the tint {@link Color} of the image.\n * @property {Property | number} [rotation=0] A numeric Property specifying the rotation about the alignedAxis.\n * @property {Property | Cartesian3} [alignedAxis=Cartesian3.ZERO] A {@link Cartesian3} Property specifying the unit vector axis of rotation.\n * @property {Property | boolean} [sizeInMeters] A boolean Property specifying whether this billboard's size should be measured in meters.\n * @property {Property | number} [width] A numeric Property specifying the width of the billboard in pixels, overriding the native size.\n * @property {Property | number} [height] A numeric Property specifying the height of the billboard in pixels, overriding the native size.\n * @property {Property | NearFarScalar} [scaleByDistance] A {@link NearFarScalar} Property used to scale the point based on distance from the camera.\n * @property {Property | NearFarScalar} [translucencyByDistance] A {@link NearFarScalar} Property used to set translucency based on distance from the camera.\n * @property {Property | NearFarScalar} [pixelOffsetScaleByDistance] A {@link NearFarScalar} Property used to set pixelOffset based on distance from the camera.\n * @property {Property | BoundingRectangle} [imageSubRegion] A Property specifying a {@link BoundingRectangle} that defines a sub-region of the image to use for the billboard, rather than the entire image, measured in pixels from the bottom-left.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this billboard will be displayed.\n * @property {Property | number} [disableDepthTestDistance] A Property specifying the distance from the camera at which to disable the depth test to.\n */\n\n/**\n * Describes a two dimensional icon located at the position of the containing {@link Entity}.\n * <p>\n * <div align='center'>\n * <img src='Images/Billboard.png' width='400' height='300' /><br />\n * Example billboards\n * </div>\n * </p>\n *\n * @alias BillboardGraphics\n * @constructor\n *\n * @param {BillboardGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Billboards.html|Cesium Sandcastle Billboard Demo}\n */\nfunction BillboardGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._image = undefined;\n  this._imageSubscription = undefined;\n  this._scale = undefined;\n  this._scaleSubscription = undefined;\n  this._pixelOffset = undefined;\n  this._pixelOffsetSubscription = undefined;\n  this._eyeOffset = undefined;\n  this._eyeOffsetSubscription = undefined;\n  this._horizontalOrigin = undefined;\n  this._horizontalOriginSubscription = undefined;\n  this._verticalOrigin = undefined;\n  this._verticalOriginSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._color = undefined;\n  this._colorSubscription = undefined;\n  this._rotation = undefined;\n  this._rotationSubscription = undefined;\n  this._alignedAxis = undefined;\n  this._alignedAxisSubscription = undefined;\n  this._sizeInMeters = undefined;\n  this._sizeInMetersSubscription = undefined;\n  this._width = undefined;\n  this._widthSubscription = undefined;\n  this._height = undefined;\n  this._heightSubscription = undefined;\n  this._scaleByDistance = undefined;\n  this._scaleByDistanceSubscription = undefined;\n  this._translucencyByDistance = undefined;\n  this._translucencyByDistanceSubscription = undefined;\n  this._pixelOffsetScaleByDistance = undefined;\n  this._pixelOffsetScaleByDistanceSubscription = undefined;\n  this._imageSubRegion = undefined;\n  this._imageSubRegionSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n  this._disableDepthTestDistance = undefined;\n  this._disableDepthTestDistanceSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(BillboardGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof BillboardGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the billboard.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the Property specifying the Image, URI, or Canvas to use for the billboard.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   */\n  image: createPropertyDescriptor(\"image\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the uniform scale to apply to the image.\n   * A scale greater than <code>1.0</code> enlarges the billboard while a scale less than <code>1.0</code> shrinks it.\n   * <p>\n   * <div align='center'>\n   * <img src='Images/Billboard.setScale.png' width='400' height='300' /><br/>\n   * From left to right in the above image, the scales are <code>0.5</code>, <code>1.0</code>, and <code>2.0</code>.\n   * </div>\n   * </p>\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  scale: createPropertyDescriptor(\"scale\"),\n\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying the billboard's pixel offset in screen space\n   * from the origin of this billboard.  This is commonly used to align multiple billboards and labels at\n   * the same position, e.g., an image and text.  The screen space origin is the top, left corner of the\n   * canvas; <code>x</code> increases from left to right, and <code>y</code> increases from top to bottom.\n   * <p>\n   * <div align='center'>\n   * <table border='0' cellpadding='5'><tr>\n   * <td align='center'><code>default</code><br/><img src='Images/Billboard.setPixelOffset.default.png' width='250' height='188' /></td>\n   * <td align='center'><code>b.pixeloffset = new Cartesian2(50, 25);</code><br/><img src='Images/Billboard.setPixelOffset.x50y-25.png' width='250' height='188' /></td>\n   * </tr></table>\n   * The billboard's origin is indicated by the yellow point.\n   * </div>\n   * </p>\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   * @default Cartesian2.ZERO\n   */\n  pixelOffset: createPropertyDescriptor(\"pixelOffset\"),\n\n  /**\n   * Gets or sets the {@link Cartesian3} Property specifying the billboard's offset in eye coordinates.\n   * Eye coordinates is a left-handed coordinate system, where <code>x</code> points towards the viewer's\n   * right, <code>y</code> points up, and <code>z</code> points into the screen.\n   * <p>\n   * An eye offset is commonly used to arrange multiple billboards or objects at the same position, e.g., to\n   * arrange a billboard above its corresponding 3D model.\n   * </p>\n   * Below, the billboard is positioned at the center of the Earth but an eye offset makes it always\n   * appear on top of the Earth regardless of the viewer's or Earth's orientation.\n   * <p>\n   * <div align='center'>\n   * <table border='0' cellpadding='5'><tr>\n   * <td align='center'><img src='Images/Billboard.setEyeOffset.one.png' width='250' height='188' /></td>\n   * <td align='center'><img src='Images/Billboard.setEyeOffset.two.png' width='250' height='188' /></td>\n   * </tr></table>\n   * <code>b.eyeOffset = new Cartesian3(0.0, 8000000.0, 0.0);</code>\n   * </div>\n   * </p>\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   * @default Cartesian3.ZERO\n   */\n  eyeOffset: createPropertyDescriptor(\"eyeOffset\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HorizontalOrigin}.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   * @default HorizontalOrigin.CENTER\n   */\n  horizontalOrigin: createPropertyDescriptor(\"horizontalOrigin\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link VerticalOrigin}.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   * @default VerticalOrigin.CENTER\n   */\n  verticalOrigin: createPropertyDescriptor(\"verticalOrigin\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} that is multiplied with the <code>image</code>.\n   * This has two common use cases.  First, the same white texture may be used by many different billboards,\n   * each with a different color, to create colored billboards. Second, the color's alpha component can be\n   * used to make the billboard translucent as shown below. An alpha of <code>0.0</code> makes the billboard\n   * transparent, and <code>1.0</code> makes the billboard opaque.\n   * <p>\n   * <div align='center'>\n   * <table border='0' cellpadding='5'><tr>\n   * <td align='center'><code>default</code><br/><img src='Images/Billboard.setColor.Alpha255.png' width='250' height='188' /></td>\n   * <td align='center'><code>alpha : 0.5</code><br/><img src='Images/Billboard.setColor.Alpha127.png' width='250' height='188' /></td>\n   * </tr></table>\n   * </div>\n   * </p>\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  color: createPropertyDescriptor(\"color\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the rotation of the image\n   * counter clockwise from the <code>alignedAxis</code>.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0\n   */\n  rotation: createPropertyDescriptor(\"rotation\"),\n\n  /**\n   * Gets or sets the {@link Cartesian3} Property specifying the unit vector axis of rotation\n   * in the fixed frame. When set to Cartesian3.ZERO the rotation is from the top of the screen.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   * @default Cartesian3.ZERO\n   */\n  alignedAxis: createPropertyDescriptor(\"alignedAxis\"),\n\n  /**\n   * Gets or sets the boolean Property specifying if this billboard's size will be measured in meters.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  sizeInMeters: createPropertyDescriptor(\"sizeInMeters\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the billboard in pixels.\n   * When undefined, the native width is used.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   */\n  width: createPropertyDescriptor(\"width\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the height of the billboard in pixels.\n   * When undefined, the native height is used.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   */\n  height: createPropertyDescriptor(\"height\"),\n\n  /**\n   * Gets or sets {@link NearFarScalar} Property specifying the scale of the billboard based on the distance from the camera.\n   * A billboard's scale will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the billboard's scale remains clamped to the nearest bound.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   */\n  scaleByDistance: createPropertyDescriptor(\"scaleByDistance\"),\n\n  /**\n   * Gets or sets {@link NearFarScalar} Property specifying the translucency of the billboard based on the distance from the camera.\n   * A billboard's translucency will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the billboard's translucency remains clamped to the nearest bound.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   */\n  translucencyByDistance: createPropertyDescriptor(\"translucencyByDistance\"),\n\n  /**\n   * Gets or sets {@link NearFarScalar} Property specifying the pixel offset of the billboard based on the distance from the camera.\n   * A billboard's pixel offset will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the billboard's pixel offset remains clamped to the nearest bound.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   */\n  pixelOffsetScaleByDistance: createPropertyDescriptor(\n    \"pixelOffsetScaleByDistance\"\n  ),\n\n  /**\n   * Gets or sets the Property specifying a {@link BoundingRectangle} that defines a\n   * sub-region of the <code>image</code> to use for the billboard, rather than the entire image,\n   * measured in pixels from the bottom-left.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   */\n  imageSubRegion: createPropertyDescriptor(\"imageSubRegion\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this billboard will be displayed.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n\n  /**\n   * Gets or sets the distance from the camera at which to disable the depth test to, for example, prevent clipping against terrain.\n   * When set to zero, the depth test is always applied. When set to Number.POSITIVE_INFINITY, the depth test is never applied.\n   * @memberof BillboardGraphics.prototype\n   * @type {Property|undefined}\n   */\n  disableDepthTestDistance: createPropertyDescriptor(\n    \"disableDepthTestDistance\"\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {BillboardGraphics} [result] The object onto which to store the result.\n * @returns {BillboardGraphics} The modified result parameter or a new instance if one was not provided.\n */\nBillboardGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new BillboardGraphics(this);\n  }\n  result.show = this._show;\n  result.image = this._image;\n  result.scale = this._scale;\n  result.pixelOffset = this._pixelOffset;\n  result.eyeOffset = this._eyeOffset;\n  result.horizontalOrigin = this._horizontalOrigin;\n  result.verticalOrigin = this._verticalOrigin;\n  result.heightReference = this._heightReference;\n  result.color = this._color;\n  result.rotation = this._rotation;\n  result.alignedAxis = this._alignedAxis;\n  result.sizeInMeters = this._sizeInMeters;\n  result.width = this._width;\n  result.height = this._height;\n  result.scaleByDistance = this._scaleByDistance;\n  result.translucencyByDistance = this._translucencyByDistance;\n  result.pixelOffsetScaleByDistance = this._pixelOffsetScaleByDistance;\n  result.imageSubRegion = this._imageSubRegion;\n  result.distanceDisplayCondition = this._distanceDisplayCondition;\n  result.disableDepthTestDistance = this._disableDepthTestDistance;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {BillboardGraphics} source The object to be merged into this object.\n */\nBillboardGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this._show, source.show);\n  this.image = defaultValue(this._image, source.image);\n  this.scale = defaultValue(this._scale, source.scale);\n  this.pixelOffset = defaultValue(this._pixelOffset, source.pixelOffset);\n  this.eyeOffset = defaultValue(this._eyeOffset, source.eyeOffset);\n  this.horizontalOrigin = defaultValue(\n    this._horizontalOrigin,\n    source.horizontalOrigin\n  );\n  this.verticalOrigin = defaultValue(\n    this._verticalOrigin,\n    source.verticalOrigin\n  );\n  this.heightReference = defaultValue(\n    this._heightReference,\n    source.heightReference\n  );\n  this.color = defaultValue(this._color, source.color);\n  this.rotation = defaultValue(this._rotation, source.rotation);\n  this.alignedAxis = defaultValue(this._alignedAxis, source.alignedAxis);\n  this.sizeInMeters = defaultValue(this._sizeInMeters, source.sizeInMeters);\n  this.width = defaultValue(this._width, source.width);\n  this.height = defaultValue(this._height, source.height);\n  this.scaleByDistance = defaultValue(\n    this._scaleByDistance,\n    source.scaleByDistance\n  );\n  this.translucencyByDistance = defaultValue(\n    this._translucencyByDistance,\n    source.translucencyByDistance\n  );\n  this.pixelOffsetScaleByDistance = defaultValue(\n    this._pixelOffsetScaleByDistance,\n    source.pixelOffsetScaleByDistance\n  );\n  this.imageSubRegion = defaultValue(\n    this._imageSubRegion,\n    source.imageSubRegion\n  );\n  this.distanceDisplayCondition = defaultValue(\n    this._distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n  this.disableDepthTestDistance = defaultValue(\n    this._disableDepthTestDistance,\n    source.disableDepthTestDistance\n  );\n};\nexport default BillboardGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * The interface for all properties, which represent a value that can optionally vary over time.\n * This type defines an interface and cannot be instantiated directly.\n *\n * @alias Property\n * @constructor\n * @abstract\n *\n * @see CompositeProperty\n * @see ConstantProperty\n * @see SampledProperty\n * @see TimeIntervalCollectionProperty\n * @see MaterialProperty\n * @see PositionProperty\n * @see ReferenceProperty\n */\nfunction Property() {\n  DeveloperError.throwInstantiationError();\n}\n\nObject.defineProperties(Property.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof Property.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: DeveloperError.throwInstantiationError,\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof Property.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: DeveloperError.throwInstantiationError,\n  },\n});\n\n/**\n * Gets the value of the property at the provided time.\n * @function\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nProperty.prototype.getValue = DeveloperError.throwInstantiationError;\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n * @function\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nProperty.prototype.equals = DeveloperError.throwInstantiationError;\n\n/**\n * @private\n */\nProperty.equals = function (left, right) {\n  return left === right || (defined(left) && left.equals(right));\n};\n\n/**\n * @private\n */\nProperty.arrayEquals = function (left, right) {\n  if (left === right) {\n    return true;\n  }\n  if (!defined(left) || !defined(right) || left.length !== right.length) {\n    return false;\n  }\n  const length = left.length;\n  for (let i = 0; i < length; i++) {\n    if (!Property.equals(left[i], right[i])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * @private\n */\nProperty.isConstant = function (property) {\n  return !defined(property) || property.isConstant;\n};\n\n/**\n * @private\n */\nProperty.getValueOrUndefined = function (property, time, result) {\n  return defined(property) ? property.getValue(time, result) : undefined;\n};\n\n/**\n * @private\n */\nProperty.getValueOrDefault = function (property, time, valueDefault, result) {\n  return defined(property)\n    ? defaultValue(property.getValue(time, result), valueDefault)\n    : valueDefault;\n};\n\n/**\n * @private\n */\nProperty.getValueOrClonedDefault = function (\n  property,\n  time,\n  valueDefault,\n  result\n) {\n  let value;\n  if (defined(property)) {\n    value = property.getValue(time, result);\n  }\n  if (!defined(value)) {\n    value = valueDefault.clone(value);\n  }\n  return value;\n};\nexport default Property;\n","import Check from \"./Check.js\";\nimport defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nimport JulianDate from \"./JulianDate.js\";\n\n/**\n * An interval defined by a start and a stop time; optionally including those times as part of the interval.\n * Arbitrary data can optionally be associated with each instance for used with {@link TimeIntervalCollection}.\n *\n * @alias TimeInterval\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {JulianDate} [options.start=new JulianDate()] The start time of the interval.\n * @param {JulianDate} [options.stop=new JulianDate()] The stop time of the interval.\n * @param {boolean} [options.isStartIncluded=true] <code>true</code> if <code>options.start</code> is included in the interval, <code>false</code> otherwise.\n * @param {boolean} [options.isStopIncluded=true] <code>true</code> if <code>options.stop</code> is included in the interval, <code>false</code> otherwise.\n * @param {object} [options.data] Arbitrary data associated with this interval.\n *\n * @example\n * // Create an instance that spans August 1st, 1980 and is associated\n * // with a Cartesian position.\n * const timeInterval = new Cesium.TimeInterval({\n *     start : Cesium.JulianDate.fromIso8601('1980-08-01T00:00:00Z'),\n *     stop : Cesium.JulianDate.fromIso8601('1980-08-02T00:00:00Z'),\n *     isStartIncluded : true,\n *     isStopIncluded : false,\n *     data : Cesium.Cartesian3.fromDegrees(39.921037, -75.170082)\n * });\n *\n * @example\n * // Create two instances from ISO 8601 intervals with associated numeric data\n * // then compute their intersection, summing the data they contain.\n * const left = Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2000/2010',\n *     data : 2\n * });\n *\n * const right = Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '1995/2005',\n *     data : 3\n * });\n *\n * //The result of the below intersection will be an interval equivalent to\n * //const intersection = Cesium.TimeInterval.fromIso8601({\n * //  iso8601 : '2000/2005',\n * //  data : 5\n * //});\n * const intersection = new Cesium.TimeInterval();\n * Cesium.TimeInterval.intersect(left, right, intersection, function(leftData, rightData) {\n *     return leftData + rightData;\n * });\n *\n * @example\n * // Check if an interval contains a specific time.\n * const dateToCheck = Cesium.JulianDate.fromIso8601('1982-09-08T11:30:00Z');\n * const containsDate = Cesium.TimeInterval.contains(timeInterval, dateToCheck);\n */\nfunction TimeInterval(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  /**\n   * Gets or sets the start time of this interval.\n   * @type {JulianDate}\n   */\n  this.start = defined(options.start)\n    ? JulianDate.clone(options.start)\n    : new JulianDate();\n\n  /**\n   * Gets or sets the stop time of this interval.\n   * @type {JulianDate}\n   */\n  this.stop = defined(options.stop)\n    ? JulianDate.clone(options.stop)\n    : new JulianDate();\n\n  /**\n   * Gets or sets the data associated with this interval.\n   * @type {*}\n   */\n  this.data = options.data;\n\n  /**\n   * Gets or sets whether or not the start time is included in this interval.\n   * @type {boolean}\n   * @default true\n   */\n  this.isStartIncluded = defaultValue(options.isStartIncluded, true);\n\n  /**\n   * Gets or sets whether or not the stop time is included in this interval.\n   * @type {boolean}\n   * @default true\n   */\n  this.isStopIncluded = defaultValue(options.isStopIncluded, true);\n}\n\nObject.defineProperties(TimeInterval.prototype, {\n  /**\n   * Gets whether or not this interval is empty.\n   * @memberof TimeInterval.prototype\n   * @type {boolean}\n   * @readonly\n   */\n  isEmpty: {\n    get: function () {\n      const stopComparedToStart = JulianDate.compare(this.stop, this.start);\n      return (\n        stopComparedToStart < 0 ||\n        (stopComparedToStart === 0 &&\n          (!this.isStartIncluded || !this.isStopIncluded))\n      );\n    },\n  },\n});\n\nconst scratchInterval = {\n  start: undefined,\n  stop: undefined,\n  isStartIncluded: undefined,\n  isStopIncluded: undefined,\n  data: undefined,\n};\n\n/**\n * Creates a new instance from a {@link http://en.wikipedia.org/wiki/ISO_8601|ISO 8601} interval.\n *\n * @throws DeveloperError if options.iso8601 does not match proper formatting.\n *\n * @param {object} options Object with the following properties:\n * @param {string} options.iso8601 An ISO 8601 interval.\n * @param {boolean} [options.isStartIncluded=true] <code>true</code> if <code>options.start</code> is included in the interval, <code>false</code> otherwise.\n * @param {boolean} [options.isStopIncluded=true] <code>true</code> if <code>options.stop</code> is included in the interval, <code>false</code> otherwise.\n * @param {object} [options.data] Arbitrary data associated with this interval.\n * @param {TimeInterval} [result] An existing instance to use for the result.\n * @returns {TimeInterval} The modified result parameter or a new instance if none was provided.\n */\nTimeInterval.fromIso8601 = function (options, result) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options\", options);\n  Check.typeOf.string(\"options.iso8601\", options.iso8601);\n  //>>includeEnd('debug');\n\n  const dates = options.iso8601.split(\"/\");\n  if (dates.length !== 2) {\n    throw new DeveloperError(\n      \"options.iso8601 is an invalid ISO 8601 interval.\"\n    );\n  }\n  const start = JulianDate.fromIso8601(dates[0]);\n  const stop = JulianDate.fromIso8601(dates[1]);\n  const isStartIncluded = defaultValue(options.isStartIncluded, true);\n  const isStopIncluded = defaultValue(options.isStopIncluded, true);\n  const data = options.data;\n\n  if (!defined(result)) {\n    scratchInterval.start = start;\n    scratchInterval.stop = stop;\n    scratchInterval.isStartIncluded = isStartIncluded;\n    scratchInterval.isStopIncluded = isStopIncluded;\n    scratchInterval.data = data;\n    return new TimeInterval(scratchInterval);\n  }\n\n  result.start = start;\n  result.stop = stop;\n  result.isStartIncluded = isStartIncluded;\n  result.isStopIncluded = isStopIncluded;\n  result.data = data;\n  return result;\n};\n\n/**\n * Creates an ISO8601 representation of the provided interval.\n *\n * @param {TimeInterval} timeInterval The interval to be converted.\n * @param {number} [precision] The number of fractional digits used to represent the seconds component.  By default, the most precise representation is used.\n * @returns {string} The ISO8601 representation of the provided interval.\n */\nTimeInterval.toIso8601 = function (timeInterval, precision) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"timeInterval\", timeInterval);\n  //>>includeEnd('debug');\n\n  return `${JulianDate.toIso8601(\n    timeInterval.start,\n    precision\n  )}/${JulianDate.toIso8601(timeInterval.stop, precision)}`;\n};\n\n/**\n * Duplicates the provided instance.\n *\n * @param {TimeInterval} [timeInterval] The instance to clone.\n * @param {TimeInterval} [result] An existing instance to use for the result.\n * @returns {TimeInterval} The modified result parameter or a new instance if none was provided.\n */\nTimeInterval.clone = function (timeInterval, result) {\n  if (!defined(timeInterval)) {\n    return undefined;\n  }\n  if (!defined(result)) {\n    return new TimeInterval(timeInterval);\n  }\n  result.start = timeInterval.start;\n  result.stop = timeInterval.stop;\n  result.isStartIncluded = timeInterval.isStartIncluded;\n  result.isStopIncluded = timeInterval.isStopIncluded;\n  result.data = timeInterval.data;\n  return result;\n};\n\n/**\n * Compares two instances and returns <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {TimeInterval} [left] The first instance.\n * @param {TimeInterval} [right] The second instance.\n * @param {TimeInterval.DataComparer} [dataComparer] A function which compares the data of the two intervals.  If omitted, reference equality is used.\n * @returns {boolean} <code>true</code> if the dates are equal; otherwise, <code>false</code>.\n */\nTimeInterval.equals = function (left, right, dataComparer) {\n  return (\n    left === right ||\n    (defined(left) &&\n      defined(right) &&\n      ((left.isEmpty && right.isEmpty) ||\n        (left.isStartIncluded === right.isStartIncluded &&\n          left.isStopIncluded === right.isStopIncluded &&\n          JulianDate.equals(left.start, right.start) &&\n          JulianDate.equals(left.stop, right.stop) &&\n          (left.data === right.data ||\n            (defined(dataComparer) && dataComparer(left.data, right.data))))))\n  );\n};\n\n/**\n * Compares two instances and returns <code>true</code> if they are within <code>epsilon</code> seconds of\n * each other.  That is, in order for the dates to be considered equal (and for\n * this function to return <code>true</code>), the absolute value of the difference between them, in\n * seconds, must be less than <code>epsilon</code>.\n *\n * @param {TimeInterval} [left] The first instance.\n * @param {TimeInterval} [right] The second instance.\n * @param {number} [epsilon=0] The maximum number of seconds that should separate the two instances.\n * @param {TimeInterval.DataComparer} [dataComparer] A function which compares the data of the two intervals.  If omitted, reference equality is used.\n * @returns {boolean} <code>true</code> if the two dates are within <code>epsilon</code> seconds of each other; otherwise <code>false</code>.\n */\nTimeInterval.equalsEpsilon = function (left, right, epsilon, dataComparer) {\n  epsilon = defaultValue(epsilon, 0);\n\n  return (\n    left === right ||\n    (defined(left) &&\n      defined(right) &&\n      ((left.isEmpty && right.isEmpty) ||\n        (left.isStartIncluded === right.isStartIncluded &&\n          left.isStopIncluded === right.isStopIncluded &&\n          JulianDate.equalsEpsilon(left.start, right.start, epsilon) &&\n          JulianDate.equalsEpsilon(left.stop, right.stop, epsilon) &&\n          (left.data === right.data ||\n            (defined(dataComparer) && dataComparer(left.data, right.data))))))\n  );\n};\n\n/**\n * Computes the intersection of two intervals, optionally merging their data.\n *\n * @param {TimeInterval} left The first interval.\n * @param {TimeInterval} [right] The second interval.\n * @param {TimeInterval} [result] An existing instance to use for the result.\n * @param {TimeInterval.MergeCallback} [mergeCallback] A function which merges the data of the two intervals. If omitted, the data from the left interval will be used.\n * @returns {TimeInterval} The modified result parameter.\n */\nTimeInterval.intersect = function (left, right, result, mergeCallback) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"left\", left);\n  //>>includeEnd('debug');\n\n  if (!defined(right)) {\n    return TimeInterval.clone(TimeInterval.EMPTY, result);\n  }\n\n  const leftStart = left.start;\n  const leftStop = left.stop;\n\n  const rightStart = right.start;\n  const rightStop = right.stop;\n\n  const intersectsStartRight =\n    JulianDate.greaterThanOrEquals(rightStart, leftStart) &&\n    JulianDate.greaterThanOrEquals(leftStop, rightStart);\n  const intersectsStartLeft =\n    !intersectsStartRight &&\n    JulianDate.lessThanOrEquals(rightStart, leftStart) &&\n    JulianDate.lessThanOrEquals(leftStart, rightStop);\n\n  if (!intersectsStartRight && !intersectsStartLeft) {\n    return TimeInterval.clone(TimeInterval.EMPTY, result);\n  }\n\n  const leftIsStartIncluded = left.isStartIncluded;\n  const leftIsStopIncluded = left.isStopIncluded;\n  const rightIsStartIncluded = right.isStartIncluded;\n  const rightIsStopIncluded = right.isStopIncluded;\n  const leftLessThanRight = JulianDate.lessThan(leftStop, rightStop);\n\n  if (!defined(result)) {\n    result = new TimeInterval();\n  }\n\n  result.start = intersectsStartRight ? rightStart : leftStart;\n  result.isStartIncluded =\n    (leftIsStartIncluded && rightIsStartIncluded) ||\n    (!JulianDate.equals(rightStart, leftStart) &&\n      ((intersectsStartRight && rightIsStartIncluded) ||\n        (intersectsStartLeft && leftIsStartIncluded)));\n  result.stop = leftLessThanRight ? leftStop : rightStop;\n  result.isStopIncluded = leftLessThanRight\n    ? leftIsStopIncluded\n    : (leftIsStopIncluded && rightIsStopIncluded) ||\n      (!JulianDate.equals(rightStop, leftStop) && rightIsStopIncluded);\n  result.data = defined(mergeCallback)\n    ? mergeCallback(left.data, right.data)\n    : left.data;\n  return result;\n};\n\n/**\n * Checks if the specified date is inside the provided interval.\n *\n * @param {TimeInterval} timeInterval The interval.\n * @param {JulianDate} julianDate The date to check.\n * @returns {boolean} <code>true</code> if the interval contains the specified date, <code>false</code> otherwise.\n */\nTimeInterval.contains = function (timeInterval, julianDate) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"timeInterval\", timeInterval);\n  Check.typeOf.object(\"julianDate\", julianDate);\n  //>>includeEnd('debug');\n\n  if (timeInterval.isEmpty) {\n    return false;\n  }\n\n  const startComparedToDate = JulianDate.compare(\n    timeInterval.start,\n    julianDate\n  );\n  if (startComparedToDate === 0) {\n    return timeInterval.isStartIncluded;\n  }\n\n  const dateComparedToStop = JulianDate.compare(julianDate, timeInterval.stop);\n  if (dateComparedToStop === 0) {\n    return timeInterval.isStopIncluded;\n  }\n\n  return startComparedToDate < 0 && dateComparedToStop < 0;\n};\n\n/**\n * Duplicates this instance.\n *\n * @param {TimeInterval} [result] An existing instance to use for the result.\n * @returns {TimeInterval} The modified result parameter or a new instance if none was provided.\n */\nTimeInterval.prototype.clone = function (result) {\n  return TimeInterval.clone(this, result);\n};\n\n/**\n * Compares this instance against the provided instance componentwise and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {TimeInterval} [right] The right hand side interval.\n * @param {TimeInterval.DataComparer} [dataComparer] A function which compares the data of the two intervals.  If omitted, reference equality is used.\n * @returns {boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\n */\nTimeInterval.prototype.equals = function (right, dataComparer) {\n  return TimeInterval.equals(this, right, dataComparer);\n};\n\n/**\n * Compares this instance against the provided instance componentwise and returns\n * <code>true</code> if they are within the provided epsilon,\n * <code>false</code> otherwise.\n *\n * @param {TimeInterval} [right] The right hand side interval.\n * @param {number} [epsilon=0] The epsilon to use for equality testing.\n * @param {TimeInterval.DataComparer} [dataComparer] A function which compares the data of the two intervals.  If omitted, reference equality is used.\n * @returns {boolean} <code>true</code> if they are within the provided epsilon, <code>false</code> otherwise.\n */\nTimeInterval.prototype.equalsEpsilon = function (right, epsilon, dataComparer) {\n  return TimeInterval.equalsEpsilon(this, right, epsilon, dataComparer);\n};\n\n/**\n * Creates a string representing this TimeInterval in ISO8601 format.\n *\n * @returns {string} A string representing this TimeInterval in ISO8601 format.\n */\nTimeInterval.prototype.toString = function () {\n  return TimeInterval.toIso8601(this);\n};\n\n/**\n * An immutable empty interval.\n *\n * @type {TimeInterval}\n * @constant\n */\nTimeInterval.EMPTY = Object.freeze(\n  new TimeInterval({\n    start: new JulianDate(),\n    stop: new JulianDate(),\n    isStartIncluded: false,\n    isStopIncluded: false,\n  })\n);\n\n/**\n * Function interface for merging interval data.\n * @callback TimeInterval.MergeCallback\n *\n * @param {*} leftData The first data instance.\n * @param {*} rightData The second data instance.\n * @returns {*} The result of merging the two data instances.\n */\n\n/**\n * Function interface for comparing interval data.\n * @callback TimeInterval.DataComparer\n * @param {*} leftData The first data instance.\n * @param {*} rightData The second data instance.\n * @returns {boolean} <code>true</code> if the provided instances are equal, <code>false</code> otherwise.\n */\nexport default TimeInterval;\n","import JulianDate from \"./JulianDate.js\";\nimport TimeInterval from \"./TimeInterval.js\";\n\nconst MINIMUM_VALUE = Object.freeze(\n  JulianDate.fromIso8601(\"0000-01-01T00:00:00Z\")\n);\nconst MAXIMUM_VALUE = Object.freeze(\n  JulianDate.fromIso8601(\"9999-12-31T24:00:00Z\")\n);\nconst MAXIMUM_INTERVAL = Object.freeze(\n  new TimeInterval({\n    start: MINIMUM_VALUE,\n    stop: MAXIMUM_VALUE,\n  })\n);\n\n/**\n * Constants related to ISO8601 support.\n *\n * @namespace\n *\n * @see {@link http://en.wikipedia.org/wiki/ISO_8601|ISO 8601 on Wikipedia}\n * @see JulianDate\n * @see TimeInterval\n */\nconst Iso8601 = {\n  /**\n   * A {@link JulianDate} representing the earliest time representable by an ISO8601 date.\n   * This is equivalent to the date string '0000-01-01T00:00:00Z'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MINIMUM_VALUE: MINIMUM_VALUE,\n\n  /**\n   * A {@link JulianDate} representing the latest time representable by an ISO8601 date.\n   * This is equivalent to the date string '9999-12-31T24:00:00Z'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MAXIMUM_VALUE: MAXIMUM_VALUE,\n\n  /**\n   * A {@link TimeInterval} representing the largest interval representable by an ISO8601 interval.\n   * This is equivalent to the interval string '0000-01-01T00:00:00Z/9999-12-31T24:00:00Z'\n   *\n   * @type {TimeInterval}\n   * @constant\n   */\n  MAXIMUM_INTERVAL: MAXIMUM_INTERVAL,\n};\nexport default Iso8601;\n","import Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link MaterialProperty} that maps to solid color {@link Material} uniforms.\n *\n * @param {Property|Color} [color=Color.WHITE] The {@link Color} Property to be used.\n *\n * @alias ColorMaterialProperty\n * @constructor\n */\nfunction ColorMaterialProperty(color) {\n  this._definitionChanged = new Event();\n  this._color = undefined;\n  this._colorSubscription = undefined;\n\n  this.color = color;\n}\n\nObject.defineProperties(ColorMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof ColorMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return Property.isConstant(this._color);\n    },\n  },\n\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof ColorMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the {@link Color} {@link Property}.\n   * @memberof ColorMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  color: createPropertyDescriptor(\"color\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nColorMaterialProperty.prototype.getType = function (time) {\n  return \"Color\";\n};\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nColorMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(result)) {\n    result = {};\n  }\n  result.color = Property.getValueOrClonedDefault(\n    this._color,\n    time,\n    Color.WHITE,\n    result.color\n  );\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nColorMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof ColorMaterialProperty && //\n      Property.equals(this._color, other._color))\n  );\n};\nexport default ColorMaterialProperty;\n","//This file is automatically rebuilt by the Cesium build process.\nexport default \"in vec3 position3DHigh;\\n\\\nin vec3 position3DLow;\\n\\\nin float batchId;\\n\\\n\\n\\\n#ifdef EXTRUDED_GEOMETRY\\n\\\nin vec3 extrudeDirection;\\n\\\n\\n\\\nuniform float u_globeMinimumAltitude;\\n\\\n#endif // EXTRUDED_GEOMETRY\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\nout vec4 v_color;\\n\\\n#endif // PER_INSTANCE_COLOR\\n\\\n\\n\\\n#ifdef TEXTURE_COORDINATES\\n\\\n#ifdef SPHERICAL\\n\\\nout vec4 v_sphericalExtents;\\n\\\n#else // SPHERICAL\\n\\\nout vec2 v_inversePlaneExtents;\\n\\\nout vec4 v_westPlane;\\n\\\nout vec4 v_southPlane;\\n\\\n#endif // SPHERICAL\\n\\\nout vec3 v_uvMinAndSphericalLongitudeRotation;\\n\\\nout vec3 v_uMaxAndInverseDistance;\\n\\\nout vec3 v_vMaxAndInverseDistance;\\n\\\n#endif // TEXTURE_COORDINATES\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n    vec4 position = czm_computePosition();\\n\\\n\\n\\\n#ifdef EXTRUDED_GEOMETRY\\n\\\n    float delta = min(u_globeMinimumAltitude, czm_geometricToleranceOverMeter * length(position.xyz));\\n\\\n    delta *= czm_sceneMode == czm_sceneMode3D ? 1.0 : 0.0;\\n\\\n\\n\\\n    //extrudeDirection is zero for the top layer\\n\\\n    position = position + vec4(extrudeDirection * delta, 0.0);\\n\\\n#endif\\n\\\n\\n\\\n#ifdef TEXTURE_COORDINATES\\n\\\n#ifdef SPHERICAL\\n\\\n    v_sphericalExtents = czm_batchTable_sphericalExtents(batchId);\\n\\\n    v_uvMinAndSphericalLongitudeRotation.z = czm_batchTable_longitudeRotation(batchId);\\n\\\n#else // SPHERICAL\\n\\\n#ifdef COLUMBUS_VIEW_2D\\n\\\n    vec4 planes2D_high = czm_batchTable_planes2D_HIGH(batchId);\\n\\\n    vec4 planes2D_low = czm_batchTable_planes2D_LOW(batchId);\\n\\\n\\n\\\n    // If the primitive is split across the IDL (planes2D_high.x > planes2D_high.w):\\n\\\n    // - If this vertex is on the east side of the IDL (position3DLow.y > 0.0, comparison with position3DHigh may produce artifacts)\\n\\\n    // - existing \\\"east\\\" is on the wrong side of the world, far away (planes2D_high/low.w)\\n\\\n    // - so set \\\"east\\\" as beyond the eastmost extent of the projection (idlSplitNewPlaneHiLow)\\n\\\n    vec2 idlSplitNewPlaneHiLow = vec2(EAST_MOST_X_HIGH - (WEST_MOST_X_HIGH - planes2D_high.w), EAST_MOST_X_LOW - (WEST_MOST_X_LOW - planes2D_low.w));\\n\\\n    bool idlSplit = planes2D_high.x > planes2D_high.w && position3DLow.y > 0.0;\\n\\\n    planes2D_high.w = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.x, planes2D_high.w);\\n\\\n    planes2D_low.w = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.y, planes2D_low.w);\\n\\\n\\n\\\n    // - else, if this vertex is on the west side of the IDL (position3DLow.y < 0.0)\\n\\\n    // - existing \\\"west\\\" is on the wrong side of the world, far away (planes2D_high/low.x)\\n\\\n    // - so set \\\"west\\\" as beyond the westmost extent of the projection (idlSplitNewPlaneHiLow)\\n\\\n    idlSplit = planes2D_high.x > planes2D_high.w && position3DLow.y < 0.0;\\n\\\n    idlSplitNewPlaneHiLow = vec2(WEST_MOST_X_HIGH - (EAST_MOST_X_HIGH - planes2D_high.x), WEST_MOST_X_LOW - (EAST_MOST_X_LOW - planes2D_low.x));\\n\\\n    planes2D_high.x = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.x, planes2D_high.x);\\n\\\n    planes2D_low.x = czm_branchFreeTernary(idlSplit, idlSplitNewPlaneHiLow.y, planes2D_low.x);\\n\\\n\\n\\\n    vec3 southWestCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, planes2D_high.xy), vec3(0.0, planes2D_low.xy))).xyz;\\n\\\n    vec3 northWestCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, planes2D_high.x, planes2D_high.z), vec3(0.0, planes2D_low.x, planes2D_low.z))).xyz;\\n\\\n    vec3 southEastCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, planes2D_high.w, planes2D_high.y), vec3(0.0, planes2D_low.w, planes2D_low.y))).xyz;\\n\\\n#else // COLUMBUS_VIEW_2D\\n\\\n    // 3D case has smaller \\\"plane extents,\\\" so planes encoded as a 64 bit position and 2 vec3s for distances/direction\\n\\\n    vec3 southWestCorner = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(czm_batchTable_southWest_HIGH(batchId), czm_batchTable_southWest_LOW(batchId))).xyz;\\n\\\n    vec3 northWestCorner = czm_normal * czm_batchTable_northward(batchId) + southWestCorner;\\n\\\n    vec3 southEastCorner = czm_normal * czm_batchTable_eastward(batchId) + southWestCorner;\\n\\\n#endif // COLUMBUS_VIEW_2D\\n\\\n\\n\\\n    vec3 eastWard = southEastCorner - southWestCorner;\\n\\\n    float eastExtent = length(eastWard);\\n\\\n    eastWard /= eastExtent;\\n\\\n\\n\\\n    vec3 northWard = northWestCorner - southWestCorner;\\n\\\n    float northExtent = length(northWard);\\n\\\n    northWard /= northExtent;\\n\\\n\\n\\\n    v_westPlane = vec4(eastWard, -dot(eastWard, southWestCorner));\\n\\\n    v_southPlane = vec4(northWard, -dot(northWard, southWestCorner));\\n\\\n    v_inversePlaneExtents = vec2(1.0 / eastExtent, 1.0 / northExtent);\\n\\\n#endif // SPHERICAL\\n\\\n    vec4 uvMinAndExtents = czm_batchTable_uvMinAndExtents(batchId);\\n\\\n    vec4 uMaxVmax = czm_batchTable_uMaxVmax(batchId);\\n\\\n\\n\\\n    v_uMaxAndInverseDistance = vec3(uMaxVmax.xy, uvMinAndExtents.z);\\n\\\n    v_vMaxAndInverseDistance = vec3(uMaxVmax.zw, uvMinAndExtents.w);\\n\\\n    v_uvMinAndSphericalLongitudeRotation.xy = uvMinAndExtents.xy;\\n\\\n#endif // TEXTURE_COORDINATES\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\n    v_color = czm_batchTable_color(batchId);\\n\\\n#endif\\n\\\n\\n\\\n    gl_Position = czm_depthClamp(czm_modelViewProjectionRelativeToEye * position);\\n\\\n}\\n\\\n\";\n","import defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * Values and type information for per-instance geometry attributes.\n *\n * @alias GeometryInstanceAttribute\n * @constructor\n *\n * @param {object} options Object with the following properties:\n * @param {ComponentDatatype} options.componentDatatype The datatype of each component in the attribute, e.g., individual elements in values.\n * @param {number} options.componentsPerAttribute A number between 1 and 4 that defines the number of components in an attributes.\n * @param {boolean} [options.normalize=false] When <code>true</code> and <code>componentDatatype</code> is an integer format, indicate that the components should be mapped to the range [0, 1] (unsigned) or [-1, 1] (signed) when they are accessed as floating-point for rendering.\n * @param {number[]} options.value The value for the attribute.\n *\n * @exception {DeveloperError} options.componentsPerAttribute must be between 1 and 4.\n *\n *\n * @example\n * const instance = new Cesium.GeometryInstance({\n *   geometry : Cesium.BoxGeometry.fromDimensions({\n *     dimensions : new Cesium.Cartesian3(1000000.0, 1000000.0, 500000.0)\n *   }),\n *   modelMatrix : Cesium.Matrix4.multiplyByTranslation(Cesium.Transforms.eastNorthUpToFixedFrame(\n *     Cesium.Cartesian3.fromDegrees(0.0, 0.0)), new Cesium.Cartesian3(0.0, 0.0, 1000000.0), new Cesium.Matrix4()),\n *   id : 'box',\n *   attributes : {\n *     color : new Cesium.GeometryInstanceAttribute({\n *       componentDatatype : Cesium.ComponentDatatype.UNSIGNED_BYTE,\n *       componentsPerAttribute : 4,\n *       normalize : true,\n *       value : [255, 255, 0, 255]\n *     })\n *   }\n * });\n *\n * @see ColorGeometryInstanceAttribute\n * @see ShowGeometryInstanceAttribute\n * @see DistanceDisplayConditionGeometryInstanceAttribute\n */\nfunction GeometryInstanceAttribute(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options.componentDatatype)) {\n    throw new DeveloperError(\"options.componentDatatype is required.\");\n  }\n  if (!defined(options.componentsPerAttribute)) {\n    throw new DeveloperError(\"options.componentsPerAttribute is required.\");\n  }\n  if (\n    options.componentsPerAttribute < 1 ||\n    options.componentsPerAttribute > 4\n  ) {\n    throw new DeveloperError(\n      \"options.componentsPerAttribute must be between 1 and 4.\"\n    );\n  }\n  if (!defined(options.value)) {\n    throw new DeveloperError(\"options.value is required.\");\n  }\n  //>>includeEnd('debug');\n\n  /**\n   * The datatype of each component in the attribute, e.g., individual elements in\n   * {@link GeometryInstanceAttribute#value}.\n   *\n   * @type ComponentDatatype\n   *\n   * @default undefined\n   */\n  this.componentDatatype = options.componentDatatype;\n\n  /**\n   * A number between 1 and 4 that defines the number of components in an attributes.\n   * For example, a position attribute with x, y, and z components would have 3 as\n   * shown in the code example.\n   *\n   * @type {number}\n   *\n   * @default undefined\n   *\n   * @example\n   * show : new Cesium.GeometryInstanceAttribute({\n   *   componentDatatype : Cesium.ComponentDatatype.UNSIGNED_BYTE,\n   *   componentsPerAttribute : 1,\n   *   normalize : true,\n   *   value : [1.0]\n   * })\n   */\n  this.componentsPerAttribute = options.componentsPerAttribute;\n\n  /**\n   * When <code>true</code> and <code>componentDatatype</code> is an integer format,\n   * indicate that the components should be mapped to the range [0, 1] (unsigned)\n   * or [-1, 1] (signed) when they are accessed as floating-point for rendering.\n   * <p>\n   * This is commonly used when storing colors using {@link ComponentDatatype.UNSIGNED_BYTE}.\n   * </p>\n   *\n   * @type {boolean}\n   *\n   * @default false\n   *\n   * @example\n   * attribute.componentDatatype = Cesium.ComponentDatatype.UNSIGNED_BYTE;\n   * attribute.componentsPerAttribute = 4;\n   * attribute.normalize = true;\n   * attribute.value = [\n   *   Cesium.Color.floatToByte(color.red),\n   *   Cesium.Color.floatToByte(color.green),\n   *   Cesium.Color.floatToByte(color.blue),\n   *   Cesium.Color.floatToByte(color.alpha)\n   * ];\n   */\n  this.normalize = defaultValue(options.normalize, false);\n\n  /**\n   * The values for the attributes stored in a typed array.  In the code example,\n   * every three elements in <code>values</code> defines one attributes since\n   * <code>componentsPerAttribute</code> is 3.\n   *\n   * @type {number[]}\n   *\n   * @default undefined\n   *\n   * @example\n   * show : new Cesium.GeometryInstanceAttribute({\n   *   componentDatatype : Cesium.ComponentDatatype.UNSIGNED_BYTE,\n   *   componentsPerAttribute : 1,\n   *   normalize : true,\n   *   value : [1.0]\n   * })\n   */\n  this.value = options.value;\n}\nexport default GeometryInstanceAttribute;\n","//This file is automatically rebuilt by the Cesium build process.\nexport default \"#ifdef TEXTURE_COORDINATES\\n\\\n#ifdef SPHERICAL\\n\\\nin vec4 v_sphericalExtents;\\n\\\n#else // SPHERICAL\\n\\\nin vec2 v_inversePlaneExtents;\\n\\\nin vec4 v_westPlane;\\n\\\nin vec4 v_southPlane;\\n\\\n#endif // SPHERICAL\\n\\\nin vec3 v_uvMinAndSphericalLongitudeRotation;\\n\\\nin vec3 v_uMaxAndInverseDistance;\\n\\\nin vec3 v_vMaxAndInverseDistance;\\n\\\n#endif // TEXTURE_COORDINATES\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\nin vec4 v_color;\\n\\\n#endif\\n\\\n\\n\\\n#ifdef NORMAL_EC\\n\\\nvec3 getEyeCoordinate3FromWindowCoordinate(vec2 fragCoord, float logDepthOrDepth) {\\n\\\n    vec4 eyeCoordinate = czm_windowToEyeCoordinates(fragCoord, logDepthOrDepth);\\n\\\n    return eyeCoordinate.xyz / eyeCoordinate.w;\\n\\\n}\\n\\\n\\n\\\nvec3 vectorFromOffset(vec4 eyeCoordinate, vec2 positiveOffset) {\\n\\\n    vec2 glFragCoordXY = gl_FragCoord.xy;\\n\\\n    // Sample depths at both offset and negative offset\\n\\\n    float upOrRightLogDepth = czm_unpackDepth(texture(czm_globeDepthTexture, (glFragCoordXY + positiveOffset) / czm_viewport.zw));\\n\\\n    float downOrLeftLogDepth = czm_unpackDepth(texture(czm_globeDepthTexture, (glFragCoordXY - positiveOffset) / czm_viewport.zw));\\n\\\n    // Explicitly evaluate both paths\\n\\\n    // Necessary for multifrustum and for edges of the screen\\n\\\n    bvec2 upOrRightInBounds = lessThan(glFragCoordXY + positiveOffset, czm_viewport.zw);\\n\\\n    float useUpOrRight = float(upOrRightLogDepth > 0.0 && upOrRightInBounds.x && upOrRightInBounds.y);\\n\\\n    float useDownOrLeft = float(useUpOrRight == 0.0);\\n\\\n    vec3 upOrRightEC = getEyeCoordinate3FromWindowCoordinate(glFragCoordXY + positiveOffset, upOrRightLogDepth);\\n\\\n    vec3 downOrLeftEC = getEyeCoordinate3FromWindowCoordinate(glFragCoordXY - positiveOffset, downOrLeftLogDepth);\\n\\\n    return (upOrRightEC - (eyeCoordinate.xyz / eyeCoordinate.w)) * useUpOrRight + ((eyeCoordinate.xyz / eyeCoordinate.w) - downOrLeftEC) * useDownOrLeft;\\n\\\n}\\n\\\n#endif // NORMAL_EC\\n\\\n\\n\\\nvoid main(void)\\n\\\n{\\n\\\n#ifdef REQUIRES_EC\\n\\\n    float logDepthOrDepth = czm_unpackDepth(texture(czm_globeDepthTexture, gl_FragCoord.xy / czm_viewport.zw));\\n\\\n    vec4 eyeCoordinate = czm_windowToEyeCoordinates(gl_FragCoord.xy, logDepthOrDepth);\\n\\\n#endif\\n\\\n\\n\\\n#ifdef REQUIRES_WC\\n\\\n    vec4 worldCoordinate4 = czm_inverseView * eyeCoordinate;\\n\\\n    vec3 worldCoordinate = worldCoordinate4.xyz / worldCoordinate4.w;\\n\\\n#endif\\n\\\n\\n\\\n#ifdef TEXTURE_COORDINATES\\n\\\n    vec2 uv;\\n\\\n#ifdef SPHERICAL\\n\\\n    // Treat world coords as a sphere normal for spherical coordinates\\n\\\n    vec2 sphericalLatLong = czm_approximateSphericalCoordinates(worldCoordinate);\\n\\\n    sphericalLatLong.y += v_uvMinAndSphericalLongitudeRotation.z;\\n\\\n    sphericalLatLong.y = czm_branchFreeTernary(sphericalLatLong.y < czm_pi, sphericalLatLong.y, sphericalLatLong.y - czm_twoPi);\\n\\\n    uv.x = (sphericalLatLong.y - v_sphericalExtents.y) * v_sphericalExtents.w;\\n\\\n    uv.y = (sphericalLatLong.x - v_sphericalExtents.x) * v_sphericalExtents.z;\\n\\\n#else // SPHERICAL\\n\\\n    // Unpack planes and transform to eye space\\n\\\n    uv.x = czm_planeDistance(v_westPlane, eyeCoordinate.xyz / eyeCoordinate.w) * v_inversePlaneExtents.x;\\n\\\n    uv.y = czm_planeDistance(v_southPlane, eyeCoordinate.xyz / eyeCoordinate.w) * v_inversePlaneExtents.y;\\n\\\n#endif // SPHERICAL\\n\\\n#endif // TEXTURE_COORDINATES\\n\\\n\\n\\\n#ifdef PICK\\n\\\n#ifdef CULL_FRAGMENTS\\n\\\n    // When classifying translucent geometry, logDepthOrDepth == 0.0\\n\\\n    // indicates a region that should not be classified, possibly due to there\\n\\\n    // being opaque pixels there in another buffer.\\n\\\n    // Check for logDepthOrDepth != 0.0 to make sure this should be classified.\\n\\\n    if (0.0 <= uv.x && uv.x <= 1.0 && 0.0 <= uv.y && uv.y <= 1.0 || logDepthOrDepth != 0.0) {\\n\\\n        out_FragColor.a = 1.0; // 0.0 alpha leads to discard from ShaderSource.createPickFragmentShaderSource\\n\\\n        czm_writeDepthClamp();\\n\\\n    }\\n\\\n#else // CULL_FRAGMENTS\\n\\\n        out_FragColor.a = 1.0;\\n\\\n#endif // CULL_FRAGMENTS\\n\\\n#else // PICK\\n\\\n\\n\\\n#ifdef CULL_FRAGMENTS\\n\\\n    // When classifying translucent geometry, logDepthOrDepth == 0.0\\n\\\n    // indicates a region that should not be classified, possibly due to there\\n\\\n    // being opaque pixels there in another buffer.\\n\\\n    if (uv.x <= 0.0 || 1.0 <= uv.x || uv.y <= 0.0 || 1.0 <= uv.y || logDepthOrDepth == 0.0) {\\n\\\n        discard;\\n\\\n    }\\n\\\n#endif\\n\\\n\\n\\\n#ifdef NORMAL_EC\\n\\\n    // Compute normal by sampling adjacent pixels in 2x2 block in screen space\\n\\\n    vec3 downUp = vectorFromOffset(eyeCoordinate, vec2(0.0, 1.0));\\n\\\n    vec3 leftRight = vectorFromOffset(eyeCoordinate, vec2(1.0, 0.0));\\n\\\n    vec3 normalEC = normalize(cross(leftRight, downUp));\\n\\\n#endif\\n\\\n\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\n\\n\\\n    vec4 color = czm_gammaCorrect(v_color);\\n\\\n#ifdef FLAT\\n\\\n    out_FragColor = color;\\n\\\n#else // FLAT\\n\\\n    czm_materialInput materialInput;\\n\\\n    materialInput.normalEC = normalEC;\\n\\\n    materialInput.positionToEyeEC = -eyeCoordinate.xyz;\\n\\\n    czm_material material = czm_getDefaultMaterial(materialInput);\\n\\\n    material.diffuse = color.rgb;\\n\\\n    material.alpha = color.a;\\n\\\n\\n\\\n    out_FragColor = czm_phong(normalize(-eyeCoordinate.xyz), material, czm_lightDirectionEC);\\n\\\n#endif // FLAT\\n\\\n\\n\\\n    // Premultiply alpha. Required for classification primitives on translucent globe.\\n\\\n    out_FragColor.rgb *= out_FragColor.a;\\n\\\n\\n\\\n#else // PER_INSTANCE_COLOR\\n\\\n\\n\\\n    // Material support.\\n\\\n    // USES_ is distinct from REQUIRES_, because some things are dependencies of each other or\\n\\\n    // dependencies for culling but might not actually be used by the material.\\n\\\n\\n\\\n    czm_materialInput materialInput;\\n\\\n\\n\\\n#ifdef USES_NORMAL_EC\\n\\\n    materialInput.normalEC = normalEC;\\n\\\n#endif\\n\\\n\\n\\\n#ifdef USES_POSITION_TO_EYE_EC\\n\\\n    materialInput.positionToEyeEC = -eyeCoordinate.xyz;\\n\\\n#endif\\n\\\n\\n\\\n#ifdef USES_TANGENT_TO_EYE\\n\\\n    materialInput.tangentToEyeMatrix = czm_eastNorthUpToEyeCoordinates(worldCoordinate, normalEC);\\n\\\n#endif\\n\\\n\\n\\\n#ifdef USES_ST\\n\\\n    // Remap texture coordinates from computed (approximately aligned with cartographic space) to the desired\\n\\\n    // texture coordinate system, which typically forms a tight oriented bounding box around the geometry.\\n\\\n    // Shader is provided a set of reference points for remapping.\\n\\\n    materialInput.st.x = czm_lineDistance(v_uvMinAndSphericalLongitudeRotation.xy, v_uMaxAndInverseDistance.xy, uv) * v_uMaxAndInverseDistance.z;\\n\\\n    materialInput.st.y = czm_lineDistance(v_uvMinAndSphericalLongitudeRotation.xy, v_vMaxAndInverseDistance.xy, uv) * v_vMaxAndInverseDistance.z;\\n\\\n#endif\\n\\\n\\n\\\n    czm_material material = czm_getMaterial(materialInput);\\n\\\n\\n\\\n#ifdef FLAT\\n\\\n    out_FragColor = vec4(material.diffuse + material.emission, material.alpha);\\n\\\n#else // FLAT\\n\\\n    out_FragColor = czm_phong(normalize(-eyeCoordinate.xyz), material, czm_lightDirectionEC);\\n\\\n#endif // FLAT\\n\\\n\\n\\\n    // Premultiply alpha. Required for classification primitives on translucent globe.\\n\\\n    out_FragColor.rgb *= out_FragColor.a;\\n\\\n\\n\\\n#endif // PER_INSTANCE_COLOR\\n\\\n    czm_writeDepthClamp();\\n\\\n#endif // PICK\\n\\\n}\\n\\\n\";\n","import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartographic from \"../Core/Cartographic.js\";\nimport Check from \"../Core/Check.js\";\nimport ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport EncodedCartesian3 from \"../Core/EncodedCartesian3.js\";\nimport GeometryInstanceAttribute from \"../Core/GeometryInstanceAttribute.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport Transforms from \"../Core/Transforms.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport PerInstanceColorAppearance from \"../Scene/PerInstanceColorAppearance.js\";\nimport ShadowVolumeAppearanceFS from \"../Shaders/ShadowVolumeAppearanceFS.js\";\n\n/**\n * Creates shaders for a ClassificationPrimitive to use a given Appearance, as well as for picking.\n *\n * @param {boolean} extentsCulling Discard fragments outside the instance's texture coordinate extents.\n * @param {boolean} planarExtents If true, texture coordinates will be computed using planes instead of spherical coordinates.\n * @param {Appearance} appearance An Appearance to be used with a ClassificationPrimitive via GroundPrimitive.\n * @private\n */\nfunction ShadowVolumeAppearance(extentsCulling, planarExtents, appearance) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.bool(\"extentsCulling\", extentsCulling);\n  Check.typeOf.bool(\"planarExtents\", planarExtents);\n  Check.typeOf.object(\"appearance\", appearance);\n  //>>includeEnd('debug');\n\n  this._projectionExtentDefines = {\n    eastMostYhighDefine: \"\",\n    eastMostYlowDefine: \"\",\n    westMostYhighDefine: \"\",\n    westMostYlowDefine: \"\",\n  };\n\n  // Compute shader dependencies\n  const colorShaderDependencies = new ShaderDependencies();\n  colorShaderDependencies.requiresTextureCoordinates = extentsCulling;\n  colorShaderDependencies.requiresEC = !appearance.flat;\n\n  const pickShaderDependencies = new ShaderDependencies();\n  pickShaderDependencies.requiresTextureCoordinates = extentsCulling;\n\n  if (appearance instanceof PerInstanceColorAppearance) {\n    // PerInstanceColorAppearance doesn't have material.shaderSource, instead it has its own vertex and fragment shaders\n    colorShaderDependencies.requiresNormalEC = !appearance.flat;\n  } else {\n    // Scan material source for what hookups are needed. Assume czm_materialInput materialInput.\n    const materialShaderSource = `${appearance.material.shaderSource}\\n${appearance.fragmentShaderSource}`;\n\n    colorShaderDependencies.normalEC =\n      materialShaderSource.indexOf(\"materialInput.normalEC\") !== -1 ||\n      materialShaderSource.indexOf(\"czm_getDefaultMaterial\") !== -1;\n    colorShaderDependencies.positionToEyeEC =\n      materialShaderSource.indexOf(\"materialInput.positionToEyeEC\") !== -1;\n    colorShaderDependencies.tangentToEyeMatrix =\n      materialShaderSource.indexOf(\"materialInput.tangentToEyeMatrix\") !== -1;\n    colorShaderDependencies.st =\n      materialShaderSource.indexOf(\"materialInput.st\") !== -1;\n  }\n\n  this._colorShaderDependencies = colorShaderDependencies;\n  this._pickShaderDependencies = pickShaderDependencies;\n  this._appearance = appearance;\n  this._extentsCulling = extentsCulling;\n  this._planarExtents = planarExtents;\n}\n\n/**\n * Create the fragment shader for a ClassificationPrimitive's color pass when rendering for color.\n *\n * @param {boolean} columbusView2D Whether the shader will be used for Columbus View or 2D.\n * @returns {ShaderSource} Shader source for the fragment shader.\n */\nShadowVolumeAppearance.prototype.createFragmentShader = function (\n  columbusView2D\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.bool(\"columbusView2D\", columbusView2D);\n  //>>includeEnd('debug');\n\n  const appearance = this._appearance;\n  const dependencies = this._colorShaderDependencies;\n\n  const defines = [];\n  if (!columbusView2D && !this._planarExtents) {\n    defines.push(\"SPHERICAL\");\n  }\n  if (dependencies.requiresEC) {\n    defines.push(\"REQUIRES_EC\");\n  }\n  if (dependencies.requiresWC) {\n    defines.push(\"REQUIRES_WC\");\n  }\n  if (dependencies.requiresTextureCoordinates) {\n    defines.push(\"TEXTURE_COORDINATES\");\n  }\n  if (this._extentsCulling) {\n    defines.push(\"CULL_FRAGMENTS\");\n  }\n  if (dependencies.requiresNormalEC) {\n    defines.push(\"NORMAL_EC\");\n  }\n  if (appearance instanceof PerInstanceColorAppearance) {\n    defines.push(\"PER_INSTANCE_COLOR\");\n  }\n\n  // Material inputs. Use of parameters in the material is different\n  // from requirement of the parameters in the overall shader, for example,\n  // texture coordinates may be used for fragment culling but not for the material itself.\n  if (dependencies.normalEC) {\n    defines.push(\"USES_NORMAL_EC\");\n  }\n  if (dependencies.positionToEyeEC) {\n    defines.push(\"USES_POSITION_TO_EYE_EC\");\n  }\n  if (dependencies.tangentToEyeMatrix) {\n    defines.push(\"USES_TANGENT_TO_EYE\");\n  }\n  if (dependencies.st) {\n    defines.push(\"USES_ST\");\n  }\n\n  if (appearance.flat) {\n    defines.push(\"FLAT\");\n  }\n\n  let materialSource = \"\";\n  if (!(appearance instanceof PerInstanceColorAppearance)) {\n    materialSource = appearance.material.shaderSource;\n  }\n\n  return new ShaderSource({\n    defines: defines,\n    sources: [materialSource, ShadowVolumeAppearanceFS],\n  });\n};\n\nShadowVolumeAppearance.prototype.createPickFragmentShader = function (\n  columbusView2D\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.bool(\"columbusView2D\", columbusView2D);\n  //>>includeEnd('debug');\n\n  const dependencies = this._pickShaderDependencies;\n\n  const defines = [\"PICK\"];\n  if (!columbusView2D && !this._planarExtents) {\n    defines.push(\"SPHERICAL\");\n  }\n  if (dependencies.requiresEC) {\n    defines.push(\"REQUIRES_EC\");\n  }\n  if (dependencies.requiresWC) {\n    defines.push(\"REQUIRES_WC\");\n  }\n  if (dependencies.requiresTextureCoordinates) {\n    defines.push(\"TEXTURE_COORDINATES\");\n  }\n  if (this._extentsCulling) {\n    defines.push(\"CULL_FRAGMENTS\");\n  }\n  return new ShaderSource({\n    defines: defines,\n    sources: [ShadowVolumeAppearanceFS],\n    pickColorQualifier: \"in\",\n  });\n};\n\n/**\n * Create the vertex shader for a ClassificationPrimitive's color pass on the final of 3 shadow volume passes\n *\n * @param {string[]} defines External defines to pass to the vertex shader.\n * @param {string} vertexShaderSource ShadowVolumeAppearanceVS with any required modifications for computing position.\n * @param {boolean} columbusView2D Whether the shader will be used for Columbus View or 2D.\n * @param {MapProjection} mapProjection Current scene's map projection.\n * @returns {string} Shader source for the vertex shader.\n */\nShadowVolumeAppearance.prototype.createVertexShader = function (\n  defines,\n  vertexShaderSource,\n  columbusView2D,\n  mapProjection\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"defines\", defines);\n  Check.typeOf.string(\"vertexShaderSource\", vertexShaderSource);\n  Check.typeOf.bool(\"columbusView2D\", columbusView2D);\n  Check.defined(\"mapProjection\", mapProjection);\n  //>>includeEnd('debug');\n  return createShadowVolumeAppearanceVS(\n    this._colorShaderDependencies,\n    this._planarExtents,\n    columbusView2D,\n    defines,\n    vertexShaderSource,\n    this._appearance,\n    mapProjection,\n    this._projectionExtentDefines\n  );\n};\n\n/**\n * Create the vertex shader for a ClassificationPrimitive's pick pass on the final of 3 shadow volume passes\n *\n * @param {string[]} defines External defines to pass to the vertex shader.\n * @param {string} vertexShaderSource ShadowVolumeAppearanceVS with any required modifications for computing position and picking.\n * @param {boolean} columbusView2D Whether the shader will be used for Columbus View or 2D.\n * @param {MapProjection} mapProjection Current scene's map projection.\n * @returns {string} Shader source for the vertex shader.\n */\nShadowVolumeAppearance.prototype.createPickVertexShader = function (\n  defines,\n  vertexShaderSource,\n  columbusView2D,\n  mapProjection\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"defines\", defines);\n  Check.typeOf.string(\"vertexShaderSource\", vertexShaderSource);\n  Check.typeOf.bool(\"columbusView2D\", columbusView2D);\n  Check.defined(\"mapProjection\", mapProjection);\n  //>>includeEnd('debug');\n  return createShadowVolumeAppearanceVS(\n    this._pickShaderDependencies,\n    this._planarExtents,\n    columbusView2D,\n    defines,\n    vertexShaderSource,\n    undefined,\n    mapProjection,\n    this._projectionExtentDefines\n  );\n};\n\nconst longitudeExtentsCartesianScratch = new Cartesian3();\nconst longitudeExtentsCartographicScratch = new Cartographic();\nconst longitudeExtentsEncodeScratch = {\n  high: 0.0,\n  low: 0.0,\n};\nfunction createShadowVolumeAppearanceVS(\n  shaderDependencies,\n  planarExtents,\n  columbusView2D,\n  defines,\n  vertexShaderSource,\n  appearance,\n  mapProjection,\n  projectionExtentDefines\n) {\n  const allDefines = defines.slice();\n\n  if (projectionExtentDefines.eastMostYhighDefine === \"\") {\n    const eastMostCartographic = longitudeExtentsCartographicScratch;\n    eastMostCartographic.longitude = CesiumMath.PI;\n    eastMostCartographic.latitude = 0.0;\n    eastMostCartographic.height = 0.0;\n    const eastMostCartesian = mapProjection.project(\n      eastMostCartographic,\n      longitudeExtentsCartesianScratch\n    );\n    let encoded = EncodedCartesian3.encode(\n      eastMostCartesian.x,\n      longitudeExtentsEncodeScratch\n    );\n    projectionExtentDefines.eastMostYhighDefine = `EAST_MOST_X_HIGH ${encoded.high.toFixed(\n      `${encoded.high}`.length + 1\n    )}`;\n    projectionExtentDefines.eastMostYlowDefine = `EAST_MOST_X_LOW ${encoded.low.toFixed(\n      `${encoded.low}`.length + 1\n    )}`;\n\n    const westMostCartographic = longitudeExtentsCartographicScratch;\n    westMostCartographic.longitude = -CesiumMath.PI;\n    westMostCartographic.latitude = 0.0;\n    westMostCartographic.height = 0.0;\n    const westMostCartesian = mapProjection.project(\n      westMostCartographic,\n      longitudeExtentsCartesianScratch\n    );\n    encoded = EncodedCartesian3.encode(\n      westMostCartesian.x,\n      longitudeExtentsEncodeScratch\n    );\n    projectionExtentDefines.westMostYhighDefine = `WEST_MOST_X_HIGH ${encoded.high.toFixed(\n      `${encoded.high}`.length + 1\n    )}`;\n    projectionExtentDefines.westMostYlowDefine = `WEST_MOST_X_LOW ${encoded.low.toFixed(\n      `${encoded.low}`.length + 1\n    )}`;\n  }\n\n  if (columbusView2D) {\n    allDefines.push(projectionExtentDefines.eastMostYhighDefine);\n    allDefines.push(projectionExtentDefines.eastMostYlowDefine);\n    allDefines.push(projectionExtentDefines.westMostYhighDefine);\n    allDefines.push(projectionExtentDefines.westMostYlowDefine);\n  }\n\n  if (defined(appearance) && appearance instanceof PerInstanceColorAppearance) {\n    allDefines.push(\"PER_INSTANCE_COLOR\");\n  }\n  if (shaderDependencies.requiresTextureCoordinates) {\n    allDefines.push(\"TEXTURE_COORDINATES\");\n    if (!(planarExtents || columbusView2D)) {\n      allDefines.push(\"SPHERICAL\");\n    }\n    if (columbusView2D) {\n      allDefines.push(\"COLUMBUS_VIEW_2D\");\n    }\n  }\n\n  return new ShaderSource({\n    defines: allDefines,\n    sources: [vertexShaderSource],\n  });\n}\n\n/**\n * Tracks shader dependencies.\n * @private\n */\nfunction ShaderDependencies() {\n  this._requiresEC = false;\n  this._requiresWC = false; // depends on eye coordinates, needed for material and for phong\n  this._requiresNormalEC = false; // depends on eye coordinates, needed for material\n  this._requiresTextureCoordinates = false; // depends on world coordinates, needed for material and for culling\n\n  this._usesNormalEC = false;\n  this._usesPositionToEyeEC = false;\n  this._usesTangentToEyeMat = false;\n  this._usesSt = false;\n}\n\nObject.defineProperties(ShaderDependencies.prototype, {\n  // Set when assessing final shading (flat vs. phong) and culling using computed texture coordinates\n  requiresEC: {\n    get: function () {\n      return this._requiresEC;\n    },\n    set: function (value) {\n      this._requiresEC = value || this._requiresEC;\n    },\n  },\n  requiresWC: {\n    get: function () {\n      return this._requiresWC;\n    },\n    set: function (value) {\n      this._requiresWC = value || this._requiresWC;\n      this.requiresEC = this._requiresWC;\n    },\n  },\n  requiresNormalEC: {\n    get: function () {\n      return this._requiresNormalEC;\n    },\n    set: function (value) {\n      this._requiresNormalEC = value || this._requiresNormalEC;\n      this.requiresEC = this._requiresNormalEC;\n    },\n  },\n  requiresTextureCoordinates: {\n    get: function () {\n      return this._requiresTextureCoordinates;\n    },\n    set: function (value) {\n      this._requiresTextureCoordinates =\n        value || this._requiresTextureCoordinates;\n      this.requiresWC = this._requiresTextureCoordinates;\n    },\n  },\n  // Get/Set when assessing material hookups\n  normalEC: {\n    set: function (value) {\n      this.requiresNormalEC = value;\n      this._usesNormalEC = value;\n    },\n    get: function () {\n      return this._usesNormalEC;\n    },\n  },\n  tangentToEyeMatrix: {\n    set: function (value) {\n      this.requiresWC = value;\n      this.requiresNormalEC = value;\n      this._usesTangentToEyeMat = value;\n    },\n    get: function () {\n      return this._usesTangentToEyeMat;\n    },\n  },\n  positionToEyeEC: {\n    set: function (value) {\n      this.requiresEC = value;\n      this._usesPositionToEyeEC = value;\n    },\n    get: function () {\n      return this._usesPositionToEyeEC;\n    },\n  },\n  st: {\n    set: function (value) {\n      this.requiresTextureCoordinates = value;\n      this._usesSt = value;\n    },\n    get: function () {\n      return this._usesSt;\n    },\n  },\n});\n\nfunction pointLineDistance(point1, point2, point) {\n  return (\n    Math.abs(\n      (point2.y - point1.y) * point.x -\n        (point2.x - point1.x) * point.y +\n        point2.x * point1.y -\n        point2.y * point1.x\n    ) / Cartesian2.distance(point2, point1)\n  );\n}\n\nconst points2DScratch = [\n  new Cartesian2(),\n  new Cartesian2(),\n  new Cartesian2(),\n  new Cartesian2(),\n];\n\n// textureCoordinateRotationPoints form 2 lines in the computed UV space that remap to desired texture coordinates.\n// This allows simulation of baked texture coordinates for EllipseGeometry, RectangleGeometry, and PolygonGeometry.\nfunction addTextureCoordinateRotationAttributes(\n  attributes,\n  textureCoordinateRotationPoints\n) {\n  const points2D = points2DScratch;\n\n  const minXYCorner = Cartesian2.unpack(\n    textureCoordinateRotationPoints,\n    0,\n    points2D[0]\n  );\n  const maxYCorner = Cartesian2.unpack(\n    textureCoordinateRotationPoints,\n    2,\n    points2D[1]\n  );\n  const maxXCorner = Cartesian2.unpack(\n    textureCoordinateRotationPoints,\n    4,\n    points2D[2]\n  );\n\n  attributes.uMaxVmax = new GeometryInstanceAttribute({\n    componentDatatype: ComponentDatatype.FLOAT,\n    componentsPerAttribute: 4,\n    normalize: false,\n    value: [maxYCorner.x, maxYCorner.y, maxXCorner.x, maxXCorner.y],\n  });\n\n  const inverseExtentX =\n    1.0 / pointLineDistance(minXYCorner, maxYCorner, maxXCorner);\n  const inverseExtentY =\n    1.0 / pointLineDistance(minXYCorner, maxXCorner, maxYCorner);\n\n  attributes.uvMinAndExtents = new GeometryInstanceAttribute({\n    componentDatatype: ComponentDatatype.FLOAT,\n    componentsPerAttribute: 4,\n    normalize: false,\n    value: [minXYCorner.x, minXYCorner.y, inverseExtentX, inverseExtentY],\n  });\n}\n\nconst cartographicScratch = new Cartographic();\nconst cornerScratch = new Cartesian3();\nconst northWestScratch = new Cartesian3();\nconst southEastScratch = new Cartesian3();\nconst highLowScratch = { high: 0.0, low: 0.0 };\nfunction add2DTextureCoordinateAttributes(rectangle, projection, attributes) {\n  // Compute corner positions in double precision\n  const carto = cartographicScratch;\n  carto.height = 0.0;\n\n  carto.longitude = rectangle.west;\n  carto.latitude = rectangle.south;\n\n  const southWestCorner = projection.project(carto, cornerScratch);\n\n  carto.latitude = rectangle.north;\n  const northWest = projection.project(carto, northWestScratch);\n\n  carto.longitude = rectangle.east;\n  carto.latitude = rectangle.south;\n  const southEast = projection.project(carto, southEastScratch);\n\n  // Since these positions are all in the 2D plane, there's a lot of zeros\n  // and a lot of repetition. So we only need to encode 4 values.\n  // Encode:\n  // x: x value for southWestCorner\n  // y: y value for southWestCorner\n  // z: y value for northWest\n  // w: x value for southEast\n\n  const valuesHigh = [0, 0, 0, 0];\n  const valuesLow = [0, 0, 0, 0];\n  let encoded = EncodedCartesian3.encode(southWestCorner.x, highLowScratch);\n  valuesHigh[0] = encoded.high;\n  valuesLow[0] = encoded.low;\n\n  encoded = EncodedCartesian3.encode(southWestCorner.y, highLowScratch);\n  valuesHigh[1] = encoded.high;\n  valuesLow[1] = encoded.low;\n\n  encoded = EncodedCartesian3.encode(northWest.y, highLowScratch);\n  valuesHigh[2] = encoded.high;\n  valuesLow[2] = encoded.low;\n\n  encoded = EncodedCartesian3.encode(southEast.x, highLowScratch);\n  valuesHigh[3] = encoded.high;\n  valuesLow[3] = encoded.low;\n\n  attributes.planes2D_HIGH = new GeometryInstanceAttribute({\n    componentDatatype: ComponentDatatype.FLOAT,\n    componentsPerAttribute: 4,\n    normalize: false,\n    value: valuesHigh,\n  });\n\n  attributes.planes2D_LOW = new GeometryInstanceAttribute({\n    componentDatatype: ComponentDatatype.FLOAT,\n    componentsPerAttribute: 4,\n    normalize: false,\n    value: valuesLow,\n  });\n}\n\nconst enuMatrixScratch = new Matrix4();\nconst inverseEnuScratch = new Matrix4();\nconst rectanglePointCartesianScratch = new Cartesian3();\nconst rectangleCenterScratch = new Cartographic();\nconst pointsCartographicScratch = [\n  new Cartographic(),\n  new Cartographic(),\n  new Cartographic(),\n  new Cartographic(),\n  new Cartographic(),\n  new Cartographic(),\n  new Cartographic(),\n  new Cartographic(),\n];\n/**\n * When computing planes to bound the rectangle,\n * need to factor in \"bulge\" and other distortion.\n * Flatten the ellipsoid-centered corners and edge-centers of the rectangle\n * into the plane of the local ENU system, compute bounds in 2D, and\n * project back to ellipsoid-centered.\n *\n * @private\n */\nfunction computeRectangleBounds(\n  rectangle,\n  ellipsoid,\n  height,\n  southWestCornerResult,\n  eastVectorResult,\n  northVectorResult\n) {\n  // Compute center of rectangle\n  const centerCartographic = Rectangle.center(\n    rectangle,\n    rectangleCenterScratch\n  );\n  centerCartographic.height = height;\n  const centerCartesian = Cartographic.toCartesian(\n    centerCartographic,\n    ellipsoid,\n    rectanglePointCartesianScratch\n  );\n  const enuMatrix = Transforms.eastNorthUpToFixedFrame(\n    centerCartesian,\n    ellipsoid,\n    enuMatrixScratch\n  );\n  const inverseEnu = Matrix4.inverse(enuMatrix, inverseEnuScratch);\n\n  const west = rectangle.west;\n  const east = rectangle.east;\n  const north = rectangle.north;\n  const south = rectangle.south;\n\n  const cartographics = pointsCartographicScratch;\n  cartographics[0].latitude = south;\n  cartographics[0].longitude = west;\n  cartographics[1].latitude = north;\n  cartographics[1].longitude = west;\n  cartographics[2].latitude = north;\n  cartographics[2].longitude = east;\n  cartographics[3].latitude = south;\n  cartographics[3].longitude = east;\n\n  const longitudeCenter = (west + east) * 0.5;\n  const latitudeCenter = (north + south) * 0.5;\n\n  cartographics[4].latitude = south;\n  cartographics[4].longitude = longitudeCenter;\n  cartographics[5].latitude = north;\n  cartographics[5].longitude = longitudeCenter;\n  cartographics[6].latitude = latitudeCenter;\n  cartographics[6].longitude = west;\n  cartographics[7].latitude = latitudeCenter;\n  cartographics[7].longitude = east;\n\n  let minX = Number.POSITIVE_INFINITY;\n  let maxX = Number.NEGATIVE_INFINITY;\n  let minY = Number.POSITIVE_INFINITY;\n  let maxY = Number.NEGATIVE_INFINITY;\n  for (let i = 0; i < 8; i++) {\n    cartographics[i].height = height;\n    const pointCartesian = Cartographic.toCartesian(\n      cartographics[i],\n      ellipsoid,\n      rectanglePointCartesianScratch\n    );\n    Matrix4.multiplyByPoint(inverseEnu, pointCartesian, pointCartesian);\n    pointCartesian.z = 0.0; // flatten into XY plane of ENU coordinate system\n    minX = Math.min(minX, pointCartesian.x);\n    maxX = Math.max(maxX, pointCartesian.x);\n    minY = Math.min(minY, pointCartesian.y);\n    maxY = Math.max(maxY, pointCartesian.y);\n  }\n\n  const southWestCorner = southWestCornerResult;\n  southWestCorner.x = minX;\n  southWestCorner.y = minY;\n  southWestCorner.z = 0.0;\n  Matrix4.multiplyByPoint(enuMatrix, southWestCorner, southWestCorner);\n\n  const southEastCorner = eastVectorResult;\n  southEastCorner.x = maxX;\n  southEastCorner.y = minY;\n  southEastCorner.z = 0.0;\n  Matrix4.multiplyByPoint(enuMatrix, southEastCorner, southEastCorner);\n  // make eastward vector\n  Cartesian3.subtract(southEastCorner, southWestCorner, eastVectorResult);\n\n  const northWestCorner = northVectorResult;\n  northWestCorner.x = minX;\n  northWestCorner.y = maxY;\n  northWestCorner.z = 0.0;\n  Matrix4.multiplyByPoint(enuMatrix, northWestCorner, northWestCorner);\n  // make eastward vector\n  Cartesian3.subtract(northWestCorner, southWestCorner, northVectorResult);\n}\n\nconst eastwardScratch = new Cartesian3();\nconst northwardScratch = new Cartesian3();\nconst encodeScratch = new EncodedCartesian3();\n/**\n * Gets an attributes object containing:\n * - 3 high-precision points as 6 GeometryInstanceAttributes. These points are used to compute eye-space planes.\n * - 1 texture coordinate rotation GeometryInstanceAttributes\n * - 2 GeometryInstanceAttributes used to compute high-precision points in 2D and Columbus View.\n *   These points are used to compute eye-space planes like above.\n *\n * Used to compute texture coordinates for small-area ClassificationPrimitives with materials or multiple non-overlapping instances.\n *\n * @see ShadowVolumeAppearance\n * @private\n *\n * @param {Rectangle} boundingRectangle Rectangle object that the points will approximately bound\n * @param {number[]} textureCoordinateRotationPoints Points in the computed texture coordinate system for remapping texture coordinates\n * @param {Ellipsoid} ellipsoid Ellipsoid for converting Rectangle points to world coordinates\n * @param {MapProjection} projection The MapProjection used for 2D and Columbus View.\n * @param {number} [height=0] The maximum height for the shadow volume.\n * @returns {object} An attributes dictionary containing planar texture coordinate attributes.\n */\nShadowVolumeAppearance.getPlanarTextureCoordinateAttributes = function (\n  boundingRectangle,\n  textureCoordinateRotationPoints,\n  ellipsoid,\n  projection,\n  height\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"boundingRectangle\", boundingRectangle);\n  Check.defined(\n    \"textureCoordinateRotationPoints\",\n    textureCoordinateRotationPoints\n  );\n  Check.typeOf.object(\"ellipsoid\", ellipsoid);\n  Check.typeOf.object(\"projection\", projection);\n  //>>includeEnd('debug');\n\n  const corner = cornerScratch;\n  const eastward = eastwardScratch;\n  const northward = northwardScratch;\n  computeRectangleBounds(\n    boundingRectangle,\n    ellipsoid,\n    defaultValue(height, 0.0),\n    corner,\n    eastward,\n    northward\n  );\n\n  const attributes = {};\n  addTextureCoordinateRotationAttributes(\n    attributes,\n    textureCoordinateRotationPoints\n  );\n\n  const encoded = EncodedCartesian3.fromCartesian(corner, encodeScratch);\n\n  attributes.southWest_HIGH = new GeometryInstanceAttribute({\n    componentDatatype: ComponentDatatype.FLOAT,\n    componentsPerAttribute: 3,\n    normalize: false,\n    value: Cartesian3.pack(encoded.high, [0, 0, 0]),\n  });\n  attributes.southWest_LOW = new GeometryInstanceAttribute({\n    componentDatatype: ComponentDatatype.FLOAT,\n    componentsPerAttribute: 3,\n    normalize: false,\n    value: Cartesian3.pack(encoded.low, [0, 0, 0]),\n  });\n  attributes.eastward = new GeometryInstanceAttribute({\n    componentDatatype: ComponentDatatype.FLOAT,\n    componentsPerAttribute: 3,\n    normalize: false,\n    value: Cartesian3.pack(eastward, [0, 0, 0]),\n  });\n  attributes.northward = new GeometryInstanceAttribute({\n    componentDatatype: ComponentDatatype.FLOAT,\n    componentsPerAttribute: 3,\n    normalize: false,\n    value: Cartesian3.pack(northward, [0, 0, 0]),\n  });\n\n  add2DTextureCoordinateAttributes(boundingRectangle, projection, attributes);\n  return attributes;\n};\n\nconst spherePointScratch = new Cartesian3();\nfunction latLongToSpherical(latitude, longitude, ellipsoid, result) {\n  const cartographic = cartographicScratch;\n  cartographic.latitude = latitude;\n  cartographic.longitude = longitude;\n  cartographic.height = 0.0;\n\n  const spherePoint = Cartographic.toCartesian(\n    cartographic,\n    ellipsoid,\n    spherePointScratch\n  );\n\n  // Project into plane with vertical for latitude\n  const magXY = Math.sqrt(\n    spherePoint.x * spherePoint.x + spherePoint.y * spherePoint.y\n  );\n\n  // Use fastApproximateAtan2 for alignment with shader\n  const sphereLatitude = CesiumMath.fastApproximateAtan2(magXY, spherePoint.z);\n  const sphereLongitude = CesiumMath.fastApproximateAtan2(\n    spherePoint.x,\n    spherePoint.y\n  );\n\n  result.x = sphereLatitude;\n  result.y = sphereLongitude;\n\n  return result;\n}\n\nconst sphericalScratch = new Cartesian2();\n/**\n * Gets an attributes object containing:\n * - the southwest corner of a rectangular area in spherical coordinates, as well as the inverse of the latitude/longitude range.\n *   These are computed using the same atan2 approximation used in the shader.\n * - 1 texture coordinate rotation GeometryInstanceAttributes\n * - 2 GeometryInstanceAttributes used to compute high-precision points in 2D and Columbus View.\n *   These points are used to compute eye-space planes like above.\n *\n * Used when computing texture coordinates for large-area ClassificationPrimitives with materials or\n * multiple non-overlapping instances.\n * @see ShadowVolumeAppearance\n * @private\n *\n * @param {Rectangle} boundingRectangle Rectangle object that the spherical extents will approximately bound\n * @param {number[]} textureCoordinateRotationPoints Points in the computed texture coordinate system for remapping texture coordinates\n * @param {Ellipsoid} ellipsoid Ellipsoid for converting Rectangle points to world coordinates\n * @param {MapProjection} projection The MapProjection used for 2D and Columbus View.\n * @returns {object} An attributes dictionary containing spherical texture coordinate attributes.\n */\nShadowVolumeAppearance.getSphericalExtentGeometryInstanceAttributes = function (\n  boundingRectangle,\n  textureCoordinateRotationPoints,\n  ellipsoid,\n  projection\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"boundingRectangle\", boundingRectangle);\n  Check.defined(\n    \"textureCoordinateRotationPoints\",\n    textureCoordinateRotationPoints\n  );\n  Check.typeOf.object(\"ellipsoid\", ellipsoid);\n  Check.typeOf.object(\"projection\", projection);\n  //>>includeEnd('debug');\n\n  // rectangle cartographic coords !== spherical because it's on an ellipsoid\n  const southWestExtents = latLongToSpherical(\n    boundingRectangle.south,\n    boundingRectangle.west,\n    ellipsoid,\n    sphericalScratch\n  );\n\n  let south = southWestExtents.x;\n  let west = southWestExtents.y;\n\n  const northEastExtents = latLongToSpherical(\n    boundingRectangle.north,\n    boundingRectangle.east,\n    ellipsoid,\n    sphericalScratch\n  );\n  let north = northEastExtents.x;\n  let east = northEastExtents.y;\n\n  // If the bounding rectangle crosses the IDL, rotate the spherical extents so the cross no longer happens.\n  // This rotation must happen in the shader too.\n  let rotationRadians = 0.0;\n  if (west > east) {\n    rotationRadians = CesiumMath.PI - west;\n    west = -CesiumMath.PI;\n    east += rotationRadians;\n  }\n\n  // Slightly pad extents to avoid floating point error when fragment culling at edges.\n  south -= CesiumMath.EPSILON5;\n  west -= CesiumMath.EPSILON5;\n  north += CesiumMath.EPSILON5;\n  east += CesiumMath.EPSILON5;\n\n  const longitudeRangeInverse = 1.0 / (east - west);\n  const latitudeRangeInverse = 1.0 / (north - south);\n\n  const attributes = {\n    sphericalExtents: new GeometryInstanceAttribute({\n      componentDatatype: ComponentDatatype.FLOAT,\n      componentsPerAttribute: 4,\n      normalize: false,\n      value: [south, west, latitudeRangeInverse, longitudeRangeInverse],\n    }),\n    longitudeRotation: new GeometryInstanceAttribute({\n      componentDatatype: ComponentDatatype.FLOAT,\n      componentsPerAttribute: 1,\n      normalize: false,\n      value: [rotationRadians],\n    }),\n  };\n\n  addTextureCoordinateRotationAttributes(\n    attributes,\n    textureCoordinateRotationPoints\n  );\n  add2DTextureCoordinateAttributes(boundingRectangle, projection, attributes);\n  return attributes;\n};\n\nShadowVolumeAppearance.hasAttributesForTextureCoordinatePlanes = function (\n  attributes\n) {\n  return (\n    defined(attributes.southWest_HIGH) &&\n    defined(attributes.southWest_LOW) &&\n    defined(attributes.northward) &&\n    defined(attributes.eastward) &&\n    defined(attributes.planes2D_HIGH) &&\n    defined(attributes.planes2D_LOW) &&\n    defined(attributes.uMaxVmax) &&\n    defined(attributes.uvMinAndExtents)\n  );\n};\n\nShadowVolumeAppearance.hasAttributesForSphericalExtents = function (\n  attributes\n) {\n  return (\n    defined(attributes.sphericalExtents) &&\n    defined(attributes.longitudeRotation) &&\n    defined(attributes.planes2D_HIGH) &&\n    defined(attributes.planes2D_LOW) &&\n    defined(attributes.uMaxVmax) &&\n    defined(attributes.uvMinAndExtents)\n  );\n};\n\nfunction shouldUseSpherical(rectangle) {\n  return (\n    Math.max(rectangle.width, rectangle.height) >\n    ShadowVolumeAppearance.MAX_WIDTH_FOR_PLANAR_EXTENTS\n  );\n}\n\n/**\n * Computes whether the given rectangle is wide enough that texture coordinates\n * over its area should be computed using spherical extents instead of distance to planes.\n *\n * @param {Rectangle} rectangle A rectangle\n * @private\n */\nShadowVolumeAppearance.shouldUseSphericalCoordinates = function (rectangle) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"rectangle\", rectangle);\n  //>>includeEnd('debug');\n\n  return shouldUseSpherical(rectangle);\n};\n\n/**\n * Texture coordinates for ground primitives are computed either using spherical coordinates for large areas or\n * using distance from planes for small areas.\n *\n * @type {number}\n * @constant\n * @private\n */\nShadowVolumeAppearance.MAX_WIDTH_FOR_PLANAR_EXTENTS = CesiumMath.toRadians(1.0);\nexport default ShadowVolumeAppearance;\n","import ColorGeometryInstanceAttribute from \"../Core/ColorGeometryInstanceAttribute.js\";\nimport combine from \"../Core/combine.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport GeometryInstance from \"../Core/GeometryInstance.js\";\nimport DrawCommand from \"../Renderer/DrawCommand.js\";\nimport Pass from \"../Renderer/Pass.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport ShaderProgram from \"../Renderer/ShaderProgram.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport ShadowVolumeAppearanceVS from \"../Shaders/ShadowVolumeAppearanceVS.js\";\nimport ShadowVolumeFS from \"../Shaders/ShadowVolumeFS.js\";\nimport BlendingState from \"./BlendingState.js\";\nimport ClassificationType from \"./ClassificationType.js\";\nimport DepthFunction from \"./DepthFunction.js\";\nimport PerInstanceColorAppearance from \"./PerInstanceColorAppearance.js\";\nimport Primitive from \"./Primitive.js\";\nimport SceneMode from \"./SceneMode.js\";\nimport ShadowVolumeAppearance from \"./ShadowVolumeAppearance.js\";\nimport StencilConstants from \"./StencilConstants.js\";\nimport StencilFunction from \"./StencilFunction.js\";\nimport StencilOperation from \"./StencilOperation.js\";\n\n/**\n * A classification primitive represents a volume enclosing geometry in the {@link Scene} to be highlighted.\n * <p>\n * A primitive combines geometry instances with an {@link Appearance} that describes the full shading, including\n * {@link Material} and {@link RenderState}.  Roughly, the geometry instance defines the structure and placement,\n * and the appearance defines the visual characteristics.  Decoupling geometry and appearance allows us to mix\n * and match most of them and add a new geometry or appearance independently of each other.\n * Only {@link PerInstanceColorAppearance} with the same color across all instances is supported at this time when using\n * ClassificationPrimitive directly.\n * For full {@link Appearance} support when classifying terrain or 3D Tiles use {@link GroundPrimitive} instead.\n * </p>\n * <p>\n * For correct rendering, this feature requires the EXT_frag_depth WebGL extension. For hardware that do not support this extension, there\n * will be rendering artifacts for some viewing angles.\n * </p>\n * <p>\n * Valid geometries are {@link BoxGeometry}, {@link CylinderGeometry}, {@link EllipsoidGeometry}, {@link PolylineVolumeGeometry}, and {@link SphereGeometry}.\n * </p>\n * <p>\n * Geometries that follow the surface of the ellipsoid, such as {@link CircleGeometry}, {@link CorridorGeometry}, {@link EllipseGeometry}, {@link PolygonGeometry}, and {@link RectangleGeometry},\n * are also valid if they are extruded volumes; otherwise, they will not be rendered.\n * </p>\n *\n * @alias ClassificationPrimitive\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Array|GeometryInstance} [options.geometryInstances] The geometry instances to render. This can either be a single instance or an array of length one.\n * @param {Appearance} [options.appearance] The appearance used to render the primitive. Defaults to PerInstanceColorAppearance when GeometryInstances have a color attribute.\n * @param {boolean} [options.show=true] Determines if this primitive will be shown.\n * @param {boolean} [options.vertexCacheOptimize=false] When <code>true</code>, geometry vertices are optimized for the pre and post-vertex-shader caches.\n * @param {boolean} [options.interleave=false] When <code>true</code>, geometry vertex attributes are interleaved, which can slightly improve rendering performance but increases load time.\n * @param {boolean} [options.compressVertices=true] When <code>true</code>, the geometry vertices are compressed, which will save memory.\n * @param {boolean} [options.releaseGeometryInstances=true] When <code>true</code>, the primitive does not keep a reference to the input <code>geometryInstances</code> to save memory.\n * @param {boolean} [options.allowPicking=true] When <code>true</code>, each geometry instance will only be pickable with {@link Scene#pick}.  When <code>false</code>, GPU memory is saved.\n * @param {boolean} [options.asynchronous=true] Determines if the primitive will be created asynchronously or block until ready. If false initializeTerrainHeights() must be called first.\n * @param {ClassificationType} [options.classificationType=ClassificationType.BOTH] Determines whether terrain, 3D Tiles or both will be classified.\n * @param {boolean} [options.debugShowBoundingVolume=false] For debugging only. Determines if this primitive's commands' bounding spheres are shown.\n * @param {boolean} [options.debugShowShadowVolume=false] For debugging only. Determines if the shadow volume for each geometry in the primitive is drawn. Must be <code>true</code> on\n *                  creation for the volumes to be created before the geometry is released or options.releaseGeometryInstance must be <code>false</code>.\n *\n * @see Primitive\n * @see GroundPrimitive\n * @see GeometryInstance\n * @see Appearance\n */\nfunction ClassificationPrimitive(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const geometryInstances = options.geometryInstances;\n\n  /**\n   * The geometry instance rendered with this primitive.  This may\n   * be <code>undefined</code> if <code>options.releaseGeometryInstances</code>\n   * is <code>true</code> when the primitive is constructed.\n   * <p>\n   * Changing this property after the primitive is rendered has no effect.\n   * </p>\n   * <p>\n   * Because of the rendering technique used, all geometry instances must be the same color.\n   * If there is an instance with a differing color, a <code>DeveloperError</code> will be thrown\n   * on the first attempt to render.\n   * </p>\n   *\n   * @readonly\n   * @type {Array|GeometryInstance}\n   *\n   * @default undefined\n   */\n  this.geometryInstances = geometryInstances;\n  /**\n   * Determines if the primitive will be shown.  This affects all geometry\n   * instances in the primitive.\n   *\n   * @type {boolean}\n   *\n   * @default true\n   */\n  this.show = defaultValue(options.show, true);\n  /**\n   * Determines whether terrain, 3D Tiles or both will be classified.\n   *\n   * @type {ClassificationType}\n   *\n   * @default ClassificationType.BOTH\n   */\n  this.classificationType = defaultValue(\n    options.classificationType,\n    ClassificationType.BOTH\n  );\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the bounding sphere for each draw command in the primitive.\n   * </p>\n   *\n   * @type {boolean}\n   *\n   * @default false\n   */\n  this.debugShowBoundingVolume = defaultValue(\n    options.debugShowBoundingVolume,\n    false\n  );\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the shadow volume for each geometry in the primitive.\n   * </p>\n   *\n   * @type {boolean}\n   *\n   * @default false\n   */\n  this.debugShowShadowVolume = defaultValue(\n    options.debugShowShadowVolume,\n    false\n  );\n  this._debugShowShadowVolume = false;\n\n  // These are used by GroundPrimitive to augment the shader and uniform map.\n  this._extruded = defaultValue(options._extruded, false);\n  this._uniformMap = options._uniformMap;\n\n  this._sp = undefined;\n  this._spStencil = undefined;\n  this._spPick = undefined;\n  this._spColor = undefined;\n\n  this._spPick2D = undefined; // only derived if necessary\n  this._spColor2D = undefined; // only derived if necessary\n\n  this._rsStencilDepthPass = undefined;\n  this._rsStencilDepthPass3DTiles = undefined;\n  this._rsColorPass = undefined;\n  this._rsPickPass = undefined;\n\n  this._commandsIgnoreShow = [];\n\n  this._ready = false;\n  this._primitive = undefined;\n  this._pickPrimitive = options._pickPrimitive;\n\n  // Set in update\n  this._hasSphericalExtentsAttribute = false;\n  this._hasPlanarExtentsAttributes = false;\n  this._hasPerColorAttribute = false;\n\n  this.appearance = options.appearance;\n\n  this._createBoundingVolumeFunction = options._createBoundingVolumeFunction;\n  this._updateAndQueueCommandsFunction =\n    options._updateAndQueueCommandsFunction;\n\n  this._usePickOffsets = false;\n\n  this._primitiveOptions = {\n    geometryInstances: undefined,\n    appearance: undefined,\n    vertexCacheOptimize: defaultValue(options.vertexCacheOptimize, false),\n    interleave: defaultValue(options.interleave, false),\n    releaseGeometryInstances: defaultValue(\n      options.releaseGeometryInstances,\n      true\n    ),\n    allowPicking: defaultValue(options.allowPicking, true),\n    asynchronous: defaultValue(options.asynchronous, true),\n    compressVertices: defaultValue(options.compressVertices, true),\n    _createBoundingVolumeFunction: undefined,\n    _createRenderStatesFunction: undefined,\n    _createShaderProgramFunction: undefined,\n    _createCommandsFunction: undefined,\n    _updateAndQueueCommandsFunction: undefined,\n    _createPickOffsets: true,\n  };\n}\n\nObject.defineProperties(ClassificationPrimitive.prototype, {\n  /**\n   * When <code>true</code>, geometry vertices are optimized for the pre and post-vertex-shader caches.\n   *\n   * @memberof ClassificationPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  vertexCacheOptimize: {\n    get: function () {\n      return this._primitiveOptions.vertexCacheOptimize;\n    },\n  },\n\n  /**\n   * Determines if geometry vertex attributes are interleaved, which can slightly improve rendering performance.\n   *\n   * @memberof ClassificationPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default false\n   */\n  interleave: {\n    get: function () {\n      return this._primitiveOptions.interleave;\n    },\n  },\n\n  /**\n   * When <code>true</code>, the primitive does not keep a reference to the input <code>geometryInstances</code> to save memory.\n   *\n   * @memberof ClassificationPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  releaseGeometryInstances: {\n    get: function () {\n      return this._primitiveOptions.releaseGeometryInstances;\n    },\n  },\n\n  /**\n   * When <code>true</code>, each geometry instance will only be pickable with {@link Scene#pick}.  When <code>false</code>, GPU memory is saved.\n   *\n   * @memberof ClassificationPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  allowPicking: {\n    get: function () {\n      return this._primitiveOptions.allowPicking;\n    },\n  },\n\n  /**\n   * Determines if the geometry instances will be created and batched on a web worker.\n   *\n   * @memberof ClassificationPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  asynchronous: {\n    get: function () {\n      return this._primitiveOptions.asynchronous;\n    },\n  },\n\n  /**\n   * When <code>true</code>, geometry vertices are compressed, which will save memory.\n   *\n   * @memberof ClassificationPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  compressVertices: {\n    get: function () {\n      return this._primitiveOptions.compressVertices;\n    },\n  },\n\n  /**\n   * Determines if the primitive is complete and ready to render.  If this property is\n   * true, the primitive will be rendered the next time that {@link ClassificationPrimitive#update}\n   * is called.\n   *\n   * @memberof ClassificationPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  ready: {\n    get: function () {\n      return this._ready;\n    },\n  },\n\n  /**\n   * Returns true if the ClassificationPrimitive needs a separate shader and commands for 2D.\n   * This is because texture coordinates on ClassificationPrimitives are computed differently,\n   * and are used for culling when multiple GeometryInstances are batched in one ClassificationPrimitive.\n   * @memberof ClassificationPrimitive.prototype\n   * @type {boolean}\n   * @readonly\n   * @private\n   */\n  _needs2DShader: {\n    get: function () {\n      return (\n        this._hasPlanarExtentsAttributes || this._hasSphericalExtentsAttribute\n      );\n    },\n  },\n});\n\n/**\n * Determines if ClassificationPrimitive rendering is supported.\n *\n * @param {Scene} scene The scene.\n * @returns {boolean} <code>true</code> if ClassificationPrimitives are supported; otherwise, returns <code>false</code>\n */\nClassificationPrimitive.isSupported = function (scene) {\n  return scene.context.stencilBuffer;\n};\n\nfunction getStencilDepthRenderState(enableStencil, mask3DTiles) {\n  const stencilFunction = mask3DTiles\n    ? StencilFunction.EQUAL\n    : StencilFunction.ALWAYS;\n  return {\n    colorMask: {\n      red: false,\n      green: false,\n      blue: false,\n      alpha: false,\n    },\n    stencilTest: {\n      enabled: enableStencil,\n      frontFunction: stencilFunction,\n      frontOperation: {\n        fail: StencilOperation.KEEP,\n        zFail: StencilOperation.DECREMENT_WRAP,\n        zPass: StencilOperation.KEEP,\n      },\n      backFunction: stencilFunction,\n      backOperation: {\n        fail: StencilOperation.KEEP,\n        zFail: StencilOperation.INCREMENT_WRAP,\n        zPass: StencilOperation.KEEP,\n      },\n      reference: StencilConstants.CESIUM_3D_TILE_MASK,\n      mask: StencilConstants.CESIUM_3D_TILE_MASK,\n    },\n    stencilMask: StencilConstants.CLASSIFICATION_MASK,\n    depthTest: {\n      enabled: true,\n      func: DepthFunction.LESS_OR_EQUAL,\n    },\n    depthMask: false,\n  };\n}\n\nfunction getColorRenderState(enableStencil) {\n  return {\n    stencilTest: {\n      enabled: enableStencil,\n      frontFunction: StencilFunction.NOT_EQUAL,\n      frontOperation: {\n        fail: StencilOperation.ZERO,\n        zFail: StencilOperation.ZERO,\n        zPass: StencilOperation.ZERO,\n      },\n      backFunction: StencilFunction.NOT_EQUAL,\n      backOperation: {\n        fail: StencilOperation.ZERO,\n        zFail: StencilOperation.ZERO,\n        zPass: StencilOperation.ZERO,\n      },\n      reference: 0,\n      mask: StencilConstants.CLASSIFICATION_MASK,\n    },\n    stencilMask: StencilConstants.CLASSIFICATION_MASK,\n    depthTest: {\n      enabled: false,\n    },\n    depthMask: false,\n    blending: BlendingState.PRE_MULTIPLIED_ALPHA_BLEND,\n  };\n}\n\nconst pickRenderState = {\n  stencilTest: {\n    enabled: true,\n    frontFunction: StencilFunction.NOT_EQUAL,\n    frontOperation: {\n      fail: StencilOperation.ZERO,\n      zFail: StencilOperation.ZERO,\n      zPass: StencilOperation.ZERO,\n    },\n    backFunction: StencilFunction.NOT_EQUAL,\n    backOperation: {\n      fail: StencilOperation.ZERO,\n      zFail: StencilOperation.ZERO,\n      zPass: StencilOperation.ZERO,\n    },\n    reference: 0,\n    mask: StencilConstants.CLASSIFICATION_MASK,\n  },\n  stencilMask: StencilConstants.CLASSIFICATION_MASK,\n  depthTest: {\n    enabled: false,\n  },\n  depthMask: false,\n};\n\nfunction createRenderStates(\n  classificationPrimitive,\n  context,\n  appearance,\n  twoPasses\n) {\n  if (defined(classificationPrimitive._rsStencilDepthPass)) {\n    return;\n  }\n  const stencilEnabled = !classificationPrimitive.debugShowShadowVolume;\n\n  classificationPrimitive._rsStencilDepthPass = RenderState.fromCache(\n    getStencilDepthRenderState(stencilEnabled, false)\n  );\n  classificationPrimitive._rsStencilDepthPass3DTiles = RenderState.fromCache(\n    getStencilDepthRenderState(stencilEnabled, true)\n  );\n  classificationPrimitive._rsColorPass = RenderState.fromCache(\n    getColorRenderState(stencilEnabled, false)\n  );\n  classificationPrimitive._rsPickPass = RenderState.fromCache(pickRenderState);\n}\n\nfunction modifyForEncodedNormals(primitive, vertexShaderSource) {\n  if (!primitive.compressVertices) {\n    return vertexShaderSource;\n  }\n\n  if (vertexShaderSource.search(/in\\s+vec3\\s+extrudeDirection;/g) !== -1) {\n    const attributeName = \"compressedAttributes\";\n\n    //only shadow volumes use extrudeDirection, and shadow volumes use vertexFormat: POSITION_ONLY so we don't need to check other attributes\n    const attributeDecl = `in vec2 ${attributeName};`;\n\n    const globalDecl = \"vec3 extrudeDirection;\\n\";\n    const decode = `    extrudeDirection = czm_octDecode(${attributeName}, 65535.0);\\n`;\n\n    let modifiedVS = vertexShaderSource;\n    modifiedVS = modifiedVS.replace(/in\\s+vec3\\s+extrudeDirection;/g, \"\");\n    modifiedVS = ShaderSource.replaceMain(\n      modifiedVS,\n      \"czm_non_compressed_main\"\n    );\n    const compressedMain =\n      `${\"void main() \\n\" + \"{ \\n\"}${decode}    czm_non_compressed_main(); \\n` +\n      `}`;\n\n    return [attributeDecl, globalDecl, modifiedVS, compressedMain].join(\"\\n\");\n  }\n}\n\nfunction createShaderProgram(classificationPrimitive, frameState) {\n  const context = frameState.context;\n  const primitive = classificationPrimitive._primitive;\n  let vs = ShadowVolumeAppearanceVS;\n  vs = classificationPrimitive._primitive._batchTable.getVertexShaderCallback()(\n    vs\n  );\n  vs = Primitive._appendDistanceDisplayConditionToShader(primitive, vs);\n  vs = Primitive._modifyShaderPosition(\n    classificationPrimitive,\n    vs,\n    frameState.scene3DOnly\n  );\n  vs = Primitive._updateColorAttribute(primitive, vs);\n\n  const planarExtents = classificationPrimitive._hasPlanarExtentsAttributes;\n  const cullFragmentsUsingExtents =\n    planarExtents || classificationPrimitive._hasSphericalExtentsAttribute;\n\n  if (classificationPrimitive._extruded) {\n    vs = modifyForEncodedNormals(primitive, vs);\n  }\n\n  const extrudedDefine = classificationPrimitive._extruded\n    ? \"EXTRUDED_GEOMETRY\"\n    : \"\";\n\n  let vsSource = new ShaderSource({\n    defines: [extrudedDefine],\n    sources: [vs],\n  });\n  const fsSource = new ShaderSource({\n    sources: [ShadowVolumeFS],\n  });\n  const attributeLocations =\n    classificationPrimitive._primitive._attributeLocations;\n\n  const shadowVolumeAppearance = new ShadowVolumeAppearance(\n    cullFragmentsUsingExtents,\n    planarExtents,\n    classificationPrimitive.appearance\n  );\n\n  classificationPrimitive._spStencil = ShaderProgram.replaceCache({\n    context: context,\n    shaderProgram: classificationPrimitive._spStencil,\n    vertexShaderSource: vsSource,\n    fragmentShaderSource: fsSource,\n    attributeLocations: attributeLocations,\n  });\n\n  if (classificationPrimitive._primitive.allowPicking) {\n    let vsPick = ShaderSource.createPickVertexShaderSource(vs);\n    vsPick = Primitive._appendShowToShader(primitive, vsPick);\n    vsPick = Primitive._updatePickColorAttribute(vsPick);\n\n    const pickFS3D = shadowVolumeAppearance.createPickFragmentShader(false);\n    const pickVS3D = shadowVolumeAppearance.createPickVertexShader(\n      [extrudedDefine],\n      vsPick,\n      false,\n      frameState.mapProjection\n    );\n\n    classificationPrimitive._spPick = ShaderProgram.replaceCache({\n      context: context,\n      shaderProgram: classificationPrimitive._spPick,\n      vertexShaderSource: pickVS3D,\n      fragmentShaderSource: pickFS3D,\n      attributeLocations: attributeLocations,\n    });\n\n    // Derive a 2D pick shader if the primitive uses texture coordinate-based fragment culling,\n    // since texture coordinates are computed differently in 2D.\n    if (cullFragmentsUsingExtents) {\n      let pickProgram2D = context.shaderCache.getDerivedShaderProgram(\n        classificationPrimitive._spPick,\n        \"2dPick\"\n      );\n      if (!defined(pickProgram2D)) {\n        const pickFS2D = shadowVolumeAppearance.createPickFragmentShader(true);\n        const pickVS2D = shadowVolumeAppearance.createPickVertexShader(\n          [extrudedDefine],\n          vsPick,\n          true,\n          frameState.mapProjection\n        );\n\n        pickProgram2D = context.shaderCache.createDerivedShaderProgram(\n          classificationPrimitive._spPick,\n          \"2dPick\",\n          {\n            vertexShaderSource: pickVS2D,\n            fragmentShaderSource: pickFS2D,\n            attributeLocations: attributeLocations,\n          }\n        );\n      }\n      classificationPrimitive._spPick2D = pickProgram2D;\n    }\n  } else {\n    classificationPrimitive._spPick = ShaderProgram.fromCache({\n      context: context,\n      vertexShaderSource: vsSource,\n      fragmentShaderSource: fsSource,\n      attributeLocations: attributeLocations,\n    });\n  }\n\n  vs = Primitive._appendShowToShader(primitive, vs);\n  vsSource = new ShaderSource({\n    defines: [extrudedDefine],\n    sources: [vs],\n  });\n\n  classificationPrimitive._sp = ShaderProgram.replaceCache({\n    context: context,\n    shaderProgram: classificationPrimitive._sp,\n    vertexShaderSource: vsSource,\n    fragmentShaderSource: fsSource,\n    attributeLocations: attributeLocations,\n  });\n\n  // Create a fragment shader that computes only required material hookups using screen space techniques\n  const fsColorSource = shadowVolumeAppearance.createFragmentShader(false);\n  const vsColorSource = shadowVolumeAppearance.createVertexShader(\n    [extrudedDefine],\n    vs,\n    false,\n    frameState.mapProjection\n  );\n\n  classificationPrimitive._spColor = ShaderProgram.replaceCache({\n    context: context,\n    shaderProgram: classificationPrimitive._spColor,\n    vertexShaderSource: vsColorSource,\n    fragmentShaderSource: fsColorSource,\n    attributeLocations: attributeLocations,\n  });\n\n  // Derive a 2D shader if the primitive uses texture coordinate-based fragment culling,\n  // since texture coordinates are computed differently in 2D.\n  // Any material that uses texture coordinates will also equip texture coordinate-based fragment culling.\n  if (cullFragmentsUsingExtents) {\n    let colorProgram2D = context.shaderCache.getDerivedShaderProgram(\n      classificationPrimitive._spColor,\n      \"2dColor\"\n    );\n    if (!defined(colorProgram2D)) {\n      const fsColorSource2D = shadowVolumeAppearance.createFragmentShader(true);\n      const vsColorSource2D = shadowVolumeAppearance.createVertexShader(\n        [extrudedDefine],\n        vs,\n        true,\n        frameState.mapProjection\n      );\n\n      colorProgram2D = context.shaderCache.createDerivedShaderProgram(\n        classificationPrimitive._spColor,\n        \"2dColor\",\n        {\n          vertexShaderSource: vsColorSource2D,\n          fragmentShaderSource: fsColorSource2D,\n          attributeLocations: attributeLocations,\n        }\n      );\n    }\n    classificationPrimitive._spColor2D = colorProgram2D;\n  }\n}\n\nfunction createColorCommands(classificationPrimitive, colorCommands) {\n  const primitive = classificationPrimitive._primitive;\n  let length = primitive._va.length * 2; // each geometry (pack of vertex attributes) needs 2 commands: front/back stencils and fill\n  colorCommands.length = length;\n\n  let i;\n  let command;\n  let derivedCommand;\n  let vaIndex = 0;\n  let uniformMap = primitive._batchTable.getUniformMapCallback()(\n    classificationPrimitive._uniformMap\n  );\n\n  const needs2DShader = classificationPrimitive._needs2DShader;\n\n  for (i = 0; i < length; i += 2) {\n    const vertexArray = primitive._va[vaIndex++];\n\n    // Stencil depth command\n    command = colorCommands[i];\n    if (!defined(command)) {\n      command = colorCommands[i] = new DrawCommand({\n        owner: classificationPrimitive,\n        primitiveType: primitive._primitiveType,\n      });\n    }\n\n    command.vertexArray = vertexArray;\n    command.renderState = classificationPrimitive._rsStencilDepthPass;\n    command.shaderProgram = classificationPrimitive._sp;\n    command.uniformMap = uniformMap;\n    command.pass = Pass.TERRAIN_CLASSIFICATION;\n\n    derivedCommand = DrawCommand.shallowClone(\n      command,\n      command.derivedCommands.tileset\n    );\n    derivedCommand.renderState =\n      classificationPrimitive._rsStencilDepthPass3DTiles;\n    derivedCommand.pass = Pass.CESIUM_3D_TILE_CLASSIFICATION;\n    command.derivedCommands.tileset = derivedCommand;\n\n    // Color command\n    command = colorCommands[i + 1];\n    if (!defined(command)) {\n      command = colorCommands[i + 1] = new DrawCommand({\n        owner: classificationPrimitive,\n        primitiveType: primitive._primitiveType,\n      });\n    }\n\n    command.vertexArray = vertexArray;\n    command.renderState = classificationPrimitive._rsColorPass;\n    command.shaderProgram = classificationPrimitive._spColor;\n    command.pass = Pass.TERRAIN_CLASSIFICATION;\n\n    const appearance = classificationPrimitive.appearance;\n    const material = appearance.material;\n    if (defined(material)) {\n      uniformMap = combine(uniformMap, material._uniforms);\n    }\n\n    command.uniformMap = uniformMap;\n\n    derivedCommand = DrawCommand.shallowClone(\n      command,\n      command.derivedCommands.tileset\n    );\n    derivedCommand.pass = Pass.CESIUM_3D_TILE_CLASSIFICATION;\n    command.derivedCommands.tileset = derivedCommand;\n\n    // Derive for 2D if texture coordinates are ever computed\n    if (needs2DShader) {\n      // First derive from the terrain command\n      let derived2DCommand = DrawCommand.shallowClone(\n        command,\n        command.derivedCommands.appearance2D\n      );\n      derived2DCommand.shaderProgram = classificationPrimitive._spColor2D;\n      command.derivedCommands.appearance2D = derived2DCommand;\n\n      // Then derive from the 3D Tiles command\n      derived2DCommand = DrawCommand.shallowClone(\n        derivedCommand,\n        derivedCommand.derivedCommands.appearance2D\n      );\n      derived2DCommand.shaderProgram = classificationPrimitive._spColor2D;\n      derivedCommand.derivedCommands.appearance2D = derived2DCommand;\n    }\n  }\n\n  const commandsIgnoreShow = classificationPrimitive._commandsIgnoreShow;\n  const spStencil = classificationPrimitive._spStencil;\n\n  let commandIndex = 0;\n  length = commandsIgnoreShow.length = length / 2;\n\n  for (let j = 0; j < length; ++j) {\n    const commandIgnoreShow = (commandsIgnoreShow[j] = DrawCommand.shallowClone(\n      colorCommands[commandIndex],\n      commandsIgnoreShow[j]\n    ));\n    commandIgnoreShow.shaderProgram = spStencil;\n    commandIgnoreShow.pass = Pass.CESIUM_3D_TILE_CLASSIFICATION_IGNORE_SHOW;\n\n    commandIndex += 2;\n  }\n}\n\nfunction createPickCommands(classificationPrimitive, pickCommands) {\n  const usePickOffsets = classificationPrimitive._usePickOffsets;\n\n  const primitive = classificationPrimitive._primitive;\n  let length = primitive._va.length * 2; // each geometry (pack of vertex attributes) needs 2 commands: front/back stencils and fill\n\n  // Fallback for batching same-color geometry instances\n  let pickOffsets;\n  let pickIndex = 0;\n  let pickOffset;\n  if (usePickOffsets) {\n    pickOffsets = primitive._pickOffsets;\n    length = pickOffsets.length * 2;\n  }\n\n  pickCommands.length = length;\n\n  let j;\n  let command;\n  let derivedCommand;\n  let vaIndex = 0;\n  const uniformMap = primitive._batchTable.getUniformMapCallback()(\n    classificationPrimitive._uniformMap\n  );\n\n  const needs2DShader = classificationPrimitive._needs2DShader;\n\n  for (j = 0; j < length; j += 2) {\n    let vertexArray = primitive._va[vaIndex++];\n    if (usePickOffsets) {\n      pickOffset = pickOffsets[pickIndex++];\n      vertexArray = primitive._va[pickOffset.index];\n    }\n\n    // Stencil depth command\n    command = pickCommands[j];\n    if (!defined(command)) {\n      command = pickCommands[j] = new DrawCommand({\n        owner: classificationPrimitive,\n        primitiveType: primitive._primitiveType,\n        pickOnly: true,\n      });\n    }\n\n    command.vertexArray = vertexArray;\n    command.renderState = classificationPrimitive._rsStencilDepthPass;\n    command.shaderProgram = classificationPrimitive._sp;\n    command.uniformMap = uniformMap;\n    command.pass = Pass.TERRAIN_CLASSIFICATION;\n    if (usePickOffsets) {\n      command.offset = pickOffset.offset;\n      command.count = pickOffset.count;\n    }\n\n    // Derive for 3D Tiles classification\n    derivedCommand = DrawCommand.shallowClone(\n      command,\n      command.derivedCommands.tileset\n    );\n    derivedCommand.renderState =\n      classificationPrimitive._rsStencilDepthPass3DTiles;\n    derivedCommand.pass = Pass.CESIUM_3D_TILE_CLASSIFICATION;\n    command.derivedCommands.tileset = derivedCommand;\n\n    // Pick color command\n    command = pickCommands[j + 1];\n    if (!defined(command)) {\n      command = pickCommands[j + 1] = new DrawCommand({\n        owner: classificationPrimitive,\n        primitiveType: primitive._primitiveType,\n        pickOnly: true,\n      });\n    }\n\n    command.vertexArray = vertexArray;\n    command.renderState = classificationPrimitive._rsPickPass;\n    command.shaderProgram = classificationPrimitive._spPick;\n    command.uniformMap = uniformMap;\n    command.pass = Pass.TERRAIN_CLASSIFICATION;\n    if (usePickOffsets) {\n      command.offset = pickOffset.offset;\n      command.count = pickOffset.count;\n    }\n\n    derivedCommand = DrawCommand.shallowClone(\n      command,\n      command.derivedCommands.tileset\n    );\n    derivedCommand.pass = Pass.CESIUM_3D_TILE_CLASSIFICATION;\n    command.derivedCommands.tileset = derivedCommand;\n\n    // Derive for 2D if texture coordinates are ever computed\n    if (needs2DShader) {\n      // First derive from the terrain command\n      let derived2DCommand = DrawCommand.shallowClone(\n        command,\n        command.derivedCommands.pick2D\n      );\n      derived2DCommand.shaderProgram = classificationPrimitive._spPick2D;\n      command.derivedCommands.pick2D = derived2DCommand;\n\n      // Then derive from the 3D Tiles command\n      derived2DCommand = DrawCommand.shallowClone(\n        derivedCommand,\n        derivedCommand.derivedCommands.pick2D\n      );\n      derived2DCommand.shaderProgram = classificationPrimitive._spPick2D;\n      derivedCommand.derivedCommands.pick2D = derived2DCommand;\n    }\n  }\n}\n\nfunction createCommands(\n  classificationPrimitive,\n  appearance,\n  material,\n  translucent,\n  twoPasses,\n  colorCommands,\n  pickCommands\n) {\n  createColorCommands(classificationPrimitive, colorCommands);\n  createPickCommands(classificationPrimitive, pickCommands);\n}\n\nfunction boundingVolumeIndex(commandIndex, length) {\n  return Math.floor((commandIndex % length) / 2);\n}\n\nfunction updateAndQueueRenderCommand(\n  command,\n  frameState,\n  modelMatrix,\n  cull,\n  boundingVolume,\n  debugShowBoundingVolume\n) {\n  command.modelMatrix = modelMatrix;\n  command.boundingVolume = boundingVolume;\n  command.cull = cull;\n  command.debugShowBoundingVolume = debugShowBoundingVolume;\n\n  frameState.commandList.push(command);\n}\n\nfunction updateAndQueuePickCommand(\n  command,\n  frameState,\n  modelMatrix,\n  cull,\n  boundingVolume\n) {\n  command.modelMatrix = modelMatrix;\n  command.boundingVolume = boundingVolume;\n  command.cull = cull;\n\n  frameState.commandList.push(command);\n}\n\nfunction updateAndQueueCommands(\n  classificationPrimitive,\n  frameState,\n  colorCommands,\n  pickCommands,\n  modelMatrix,\n  cull,\n  debugShowBoundingVolume,\n  twoPasses\n) {\n  const primitive = classificationPrimitive._primitive;\n  Primitive._updateBoundingVolumes(primitive, frameState, modelMatrix);\n\n  let boundingVolumes;\n  if (frameState.mode === SceneMode.SCENE3D) {\n    boundingVolumes = primitive._boundingSphereWC;\n  } else if (frameState.mode === SceneMode.COLUMBUS_VIEW) {\n    boundingVolumes = primitive._boundingSphereCV;\n  } else if (\n    frameState.mode === SceneMode.SCENE2D &&\n    defined(primitive._boundingSphere2D)\n  ) {\n    boundingVolumes = primitive._boundingSphere2D;\n  } else if (defined(primitive._boundingSphereMorph)) {\n    boundingVolumes = primitive._boundingSphereMorph;\n  }\n\n  const classificationType = classificationPrimitive.classificationType;\n  const queueTerrainCommands =\n    classificationType !== ClassificationType.CESIUM_3D_TILE;\n  const queue3DTilesCommands =\n    classificationType !== ClassificationType.TERRAIN;\n\n  const passes = frameState.passes;\n\n  let i;\n  let boundingVolume;\n  let command;\n\n  if (passes.render) {\n    const colorLength = colorCommands.length;\n    for (i = 0; i < colorLength; ++i) {\n      boundingVolume = boundingVolumes[boundingVolumeIndex(i, colorLength)];\n      if (queueTerrainCommands) {\n        command = colorCommands[i];\n        updateAndQueueRenderCommand(\n          command,\n          frameState,\n          modelMatrix,\n          cull,\n          boundingVolume,\n          debugShowBoundingVolume\n        );\n      }\n      if (queue3DTilesCommands) {\n        command = colorCommands[i].derivedCommands.tileset;\n        updateAndQueueRenderCommand(\n          command,\n          frameState,\n          modelMatrix,\n          cull,\n          boundingVolume,\n          debugShowBoundingVolume\n        );\n      }\n    }\n\n    if (frameState.invertClassification) {\n      const ignoreShowCommands = classificationPrimitive._commandsIgnoreShow;\n      const ignoreShowCommandsLength = ignoreShowCommands.length;\n      for (i = 0; i < ignoreShowCommandsLength; ++i) {\n        boundingVolume = boundingVolumes[i];\n        command = ignoreShowCommands[i];\n        updateAndQueueRenderCommand(\n          command,\n          frameState,\n          modelMatrix,\n          cull,\n          boundingVolume,\n          debugShowBoundingVolume\n        );\n      }\n    }\n  }\n\n  if (passes.pick) {\n    const pickLength = pickCommands.length;\n    const pickOffsets = primitive._pickOffsets;\n    for (i = 0; i < pickLength; ++i) {\n      const pickOffset = pickOffsets[boundingVolumeIndex(i, pickLength)];\n      boundingVolume = boundingVolumes[pickOffset.index];\n      if (queueTerrainCommands) {\n        command = pickCommands[i];\n        updateAndQueuePickCommand(\n          command,\n          frameState,\n          modelMatrix,\n          cull,\n          boundingVolume\n        );\n      }\n      if (queue3DTilesCommands) {\n        command = pickCommands[i].derivedCommands.tileset;\n        updateAndQueuePickCommand(\n          command,\n          frameState,\n          modelMatrix,\n          cull,\n          boundingVolume\n        );\n      }\n    }\n  }\n}\n\n/**\n * Called when {@link Viewer} or {@link CesiumWidget} render the scene to\n * get the draw commands needed to render this primitive.\n * <p>\n * Do not call this function directly.  This is documented just to\n * list the exceptions that may be propagated when the scene is rendered:\n * </p>\n *\n * @exception {DeveloperError} All instance geometries must have the same primitiveType.\n * @exception {DeveloperError} Appearance and material have a uniform with the same name.\n * @exception {DeveloperError} Not all of the geometry instances have the same color attribute.\n */\nClassificationPrimitive.prototype.update = function (frameState) {\n  if (!defined(this._primitive) && !defined(this.geometryInstances)) {\n    return;\n  }\n\n  let appearance = this.appearance;\n  if (defined(appearance) && defined(appearance.material)) {\n    appearance.material.update(frameState.context);\n  }\n\n  const that = this;\n  const primitiveOptions = this._primitiveOptions;\n\n  if (!defined(this._primitive)) {\n    const instances = Array.isArray(this.geometryInstances)\n      ? this.geometryInstances\n      : [this.geometryInstances];\n    const length = instances.length;\n\n    let i;\n    let instance;\n    let attributes;\n\n    let hasPerColorAttribute = false;\n    let allColorsSame = true;\n    let firstColor;\n    let hasSphericalExtentsAttribute = false;\n    let hasPlanarExtentsAttributes = false;\n\n    if (length > 0) {\n      attributes = instances[0].attributes;\n      // Not expecting these to be set by users, should only be set via GroundPrimitive.\n      // So don't check for mismatch.\n      hasSphericalExtentsAttribute = ShadowVolumeAppearance.hasAttributesForSphericalExtents(\n        attributes\n      );\n      hasPlanarExtentsAttributes = ShadowVolumeAppearance.hasAttributesForTextureCoordinatePlanes(\n        attributes\n      );\n      firstColor = attributes.color;\n    }\n\n    for (i = 0; i < length; i++) {\n      instance = instances[i];\n      const color = instance.attributes.color;\n      if (defined(color)) {\n        hasPerColorAttribute = true;\n      }\n      //>>includeStart('debug', pragmas.debug);\n      else if (hasPerColorAttribute) {\n        throw new DeveloperError(\n          \"All GeometryInstances must have color attributes to use per-instance color.\"\n        );\n      }\n      //>>includeEnd('debug');\n\n      allColorsSame =\n        allColorsSame &&\n        defined(color) &&\n        ColorGeometryInstanceAttribute.equals(firstColor, color);\n    }\n\n    // If no attributes exist for computing spherical extents or fragment culling,\n    // throw if the colors aren't all the same.\n    if (\n      !allColorsSame &&\n      !hasSphericalExtentsAttribute &&\n      !hasPlanarExtentsAttributes\n    ) {\n      throw new DeveloperError(\n        \"All GeometryInstances must have the same color attribute except via GroundPrimitives\"\n      );\n    }\n\n    // default to a color appearance\n    if (hasPerColorAttribute && !defined(appearance)) {\n      appearance = new PerInstanceColorAppearance({\n        flat: true,\n      });\n      this.appearance = appearance;\n    }\n\n    //>>includeStart('debug', pragmas.debug);\n    if (\n      !hasPerColorAttribute &&\n      appearance instanceof PerInstanceColorAppearance\n    ) {\n      throw new DeveloperError(\n        \"PerInstanceColorAppearance requires color GeometryInstanceAttributes on all GeometryInstances\"\n      );\n    }\n    if (\n      defined(appearance.material) &&\n      !hasSphericalExtentsAttribute &&\n      !hasPlanarExtentsAttributes\n    ) {\n      throw new DeveloperError(\n        \"Materials on ClassificationPrimitives are not supported except via GroundPrimitives\"\n      );\n    }\n    //>>includeEnd('debug');\n\n    this._usePickOffsets =\n      !hasSphericalExtentsAttribute && !hasPlanarExtentsAttributes;\n    this._hasSphericalExtentsAttribute = hasSphericalExtentsAttribute;\n    this._hasPlanarExtentsAttributes = hasPlanarExtentsAttributes;\n    this._hasPerColorAttribute = hasPerColorAttribute;\n\n    const geometryInstances = new Array(length);\n    for (i = 0; i < length; ++i) {\n      instance = instances[i];\n      geometryInstances[i] = new GeometryInstance({\n        geometry: instance.geometry,\n        attributes: instance.attributes,\n        modelMatrix: instance.modelMatrix,\n        id: instance.id,\n        pickPrimitive: defaultValue(this._pickPrimitive, that),\n      });\n    }\n\n    primitiveOptions.appearance = appearance;\n    primitiveOptions.geometryInstances = geometryInstances;\n\n    if (defined(this._createBoundingVolumeFunction)) {\n      primitiveOptions._createBoundingVolumeFunction = function (\n        frameState,\n        geometry\n      ) {\n        that._createBoundingVolumeFunction(frameState, geometry);\n      };\n    }\n\n    primitiveOptions._createRenderStatesFunction = function (\n      primitive,\n      context,\n      appearance,\n      twoPasses\n    ) {\n      createRenderStates(that, context);\n    };\n    primitiveOptions._createShaderProgramFunction = function (\n      primitive,\n      frameState,\n      appearance\n    ) {\n      createShaderProgram(that, frameState);\n    };\n    primitiveOptions._createCommandsFunction = function (\n      primitive,\n      appearance,\n      material,\n      translucent,\n      twoPasses,\n      colorCommands,\n      pickCommands\n    ) {\n      createCommands(\n        that,\n        undefined,\n        undefined,\n        true,\n        false,\n        colorCommands,\n        pickCommands\n      );\n    };\n\n    if (defined(this._updateAndQueueCommandsFunction)) {\n      primitiveOptions._updateAndQueueCommandsFunction = function (\n        primitive,\n        frameState,\n        colorCommands,\n        pickCommands,\n        modelMatrix,\n        cull,\n        debugShowBoundingVolume,\n        twoPasses\n      ) {\n        that._updateAndQueueCommandsFunction(\n          primitive,\n          frameState,\n          colorCommands,\n          pickCommands,\n          modelMatrix,\n          cull,\n          debugShowBoundingVolume,\n          twoPasses\n        );\n      };\n    } else {\n      primitiveOptions._updateAndQueueCommandsFunction = function (\n        primitive,\n        frameState,\n        colorCommands,\n        pickCommands,\n        modelMatrix,\n        cull,\n        debugShowBoundingVolume,\n        twoPasses\n      ) {\n        updateAndQueueCommands(\n          that,\n          frameState,\n          colorCommands,\n          pickCommands,\n          modelMatrix,\n          cull,\n          debugShowBoundingVolume,\n          twoPasses\n        );\n      };\n    }\n\n    this._primitive = new Primitive(primitiveOptions);\n  }\n\n  if (\n    this.debugShowShadowVolume &&\n    !this._debugShowShadowVolume &&\n    this._ready\n  ) {\n    this._debugShowShadowVolume = true;\n    this._rsStencilDepthPass = RenderState.fromCache(\n      getStencilDepthRenderState(false, false)\n    );\n    this._rsStencilDepthPass3DTiles = RenderState.fromCache(\n      getStencilDepthRenderState(false, true)\n    );\n    this._rsColorPass = RenderState.fromCache(getColorRenderState(false));\n  } else if (!this.debugShowShadowVolume && this._debugShowShadowVolume) {\n    this._debugShowShadowVolume = false;\n    this._rsStencilDepthPass = RenderState.fromCache(\n      getStencilDepthRenderState(true, false)\n    );\n    this._rsStencilDepthPass3DTiles = RenderState.fromCache(\n      getStencilDepthRenderState(true, true)\n    );\n    this._rsColorPass = RenderState.fromCache(getColorRenderState(true));\n  }\n  // Update primitive appearance\n  if (this._primitive.appearance !== appearance) {\n    //>>includeStart('debug', pragmas.debug);\n    // Check if the appearance is supported by the geometry attributes\n    if (\n      !this._hasSphericalExtentsAttribute &&\n      !this._hasPlanarExtentsAttributes &&\n      defined(appearance.material)\n    ) {\n      throw new DeveloperError(\n        \"Materials on ClassificationPrimitives are not supported except via GroundPrimitive\"\n      );\n    }\n    if (\n      !this._hasPerColorAttribute &&\n      appearance instanceof PerInstanceColorAppearance\n    ) {\n      throw new DeveloperError(\n        \"PerInstanceColorAppearance requires color GeometryInstanceAttribute\"\n      );\n    }\n    //>>includeEnd('debug');\n    this._primitive.appearance = appearance;\n  }\n\n  this._primitive.show = this.show;\n  this._primitive.debugShowBoundingVolume = this.debugShowBoundingVolume;\n  this._primitive.update(frameState);\n\n  frameState.afterRender.push(() => {\n    if (defined(this._primitive) && this._primitive.ready) {\n      this._ready = true;\n\n      if (this.releaseGeometryInstances) {\n        this.geometryInstances = undefined;\n      }\n    }\n  });\n};\n\n/**\n * Returns the modifiable per-instance attributes for a {@link GeometryInstance}.\n *\n * @param {*} id The id of the {@link GeometryInstance}.\n * @returns {object} The typed array in the attribute's format or undefined if the is no instance with id.\n *\n * @exception {DeveloperError} must call update before calling getGeometryInstanceAttributes.\n *\n * @example\n * const attributes = primitive.getGeometryInstanceAttributes('an id');\n * attributes.color = Cesium.ColorGeometryInstanceAttribute.toValue(Cesium.Color.AQUA);\n * attributes.show = Cesium.ShowGeometryInstanceAttribute.toValue(true);\n */\nClassificationPrimitive.prototype.getGeometryInstanceAttributes = function (\n  id\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(this._primitive)) {\n    throw new DeveloperError(\n      \"must call update before calling getGeometryInstanceAttributes\"\n    );\n  }\n  //>>includeEnd('debug');\n  return this._primitive.getGeometryInstanceAttributes(id);\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see ClassificationPrimitive#destroy\n */\nClassificationPrimitive.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * e = e && e.destroy();\n *\n * @see ClassificationPrimitive#isDestroyed\n */\nClassificationPrimitive.prototype.destroy = function () {\n  this._primitive = this._primitive && this._primitive.destroy();\n  this._sp = this._sp && this._sp.destroy();\n  this._spPick = this._spPick && this._spPick.destroy();\n  this._spColor = this._spColor && this._spColor.destroy();\n\n  // Derived programs, destroyed above if they existed.\n  this._spPick2D = undefined;\n  this._spColor2D = undefined;\n  return destroyObject(this);\n};\nexport default ClassificationPrimitive;\n","import ApproximateTerrainHeights from \"../Core/ApproximateTerrainHeights.js\";\nimport BoundingSphere from \"../Core/BoundingSphere.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartographic from \"../Core/Cartographic.js\";\nimport Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport GeometryInstance from \"../Core/GeometryInstance.js\";\nimport OrientedBoundingBox from \"../Core/OrientedBoundingBox.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport VerticalExaggeration from \"../Core/VerticalExaggeration.js\";\nimport ClassificationPrimitive from \"./ClassificationPrimitive.js\";\nimport ClassificationType from \"./ClassificationType.js\";\nimport PerInstanceColorAppearance from \"./PerInstanceColorAppearance.js\";\nimport SceneMode from \"./SceneMode.js\";\nimport ShadowVolumeAppearance from \"./ShadowVolumeAppearance.js\";\n\nconst GroundPrimitiveUniformMap = {\n  u_globeMinimumAltitude: function () {\n    return 55000.0;\n  },\n};\n\n/**\n * A ground primitive represents geometry draped over terrain or 3D Tiles in the {@link Scene}.\n * <p>\n * A primitive combines geometry instances with an {@link Appearance} that describes the full shading, including\n * {@link Material} and {@link RenderState}.  Roughly, the geometry instance defines the structure and placement,\n * and the appearance defines the visual characteristics.  Decoupling geometry and appearance allows us to mix\n * and match most of them and add a new geometry or appearance independently of each other.\n * </p>\n * <p>\n * Support for the WEBGL_depth_texture extension is required to use GeometryInstances with different PerInstanceColors\n * or materials besides PerInstanceColorAppearance.\n * </p>\n * <p>\n * Textured GroundPrimitives were designed for notional patterns and are not meant for precisely mapping\n * textures to terrain - for that use case, use {@link SingleTileImageryProvider}.\n * </p>\n * <p>\n * For correct rendering, this feature requires the EXT_frag_depth WebGL extension. For hardware that do not support this extension, there\n * will be rendering artifacts for some viewing angles.\n * </p>\n * <p>\n * Valid geometries are {@link CircleGeometry}, {@link CorridorGeometry}, {@link EllipseGeometry}, {@link PolygonGeometry}, and {@link RectangleGeometry}.\n * </p>\n *\n * @alias GroundPrimitive\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Array|GeometryInstance} [options.geometryInstances] The geometry instances to render.\n * @param {Appearance} [options.appearance] The appearance used to render the primitive. Defaults to a flat PerInstanceColorAppearance when GeometryInstances have a color attribute.\n * @param {boolean} [options.show=true] Determines if this primitive will be shown.\n * @param {boolean} [options.vertexCacheOptimize=false] When <code>true</code>, geometry vertices are optimized for the pre and post-vertex-shader caches.\n * @param {boolean} [options.interleave=false] When <code>true</code>, geometry vertex attributes are interleaved, which can slightly improve rendering performance but increases load time.\n * @param {boolean} [options.compressVertices=true] When <code>true</code>, the geometry vertices are compressed, which will save memory.\n * @param {boolean} [options.releaseGeometryInstances=true] When <code>true</code>, the primitive does not keep a reference to the input <code>geometryInstances</code> to save memory.\n * @param {boolean} [options.allowPicking=true] When <code>true</code>, each geometry instance will only be pickable with {@link Scene#pick}.  When <code>false</code>, GPU memory is saved.\n * @param {boolean} [options.asynchronous=true] Determines if the primitive will be created asynchronously or block until ready. If false initializeTerrainHeights() must be called first.\n * @param {ClassificationType} [options.classificationType=ClassificationType.BOTH] Determines whether terrain, 3D Tiles or both will be classified.\n * @param {boolean} [options.debugShowBoundingVolume=false] For debugging only. Determines if this primitive's commands' bounding spheres are shown.\n * @param {boolean} [options.debugShowShadowVolume=false] For debugging only. Determines if the shadow volume for each geometry in the primitive is drawn. Must be <code>true</code> on\n *                  creation for the volumes to be created before the geometry is released or options.releaseGeometryInstance must be <code>false</code>.\n *\n * @example\n * // Example 1: Create primitive with a single instance\n * const rectangleInstance = new Cesium.GeometryInstance({\n *   geometry : new Cesium.RectangleGeometry({\n *     rectangle : Cesium.Rectangle.fromDegrees(-140.0, 30.0, -100.0, 40.0)\n *   }),\n *   id : 'rectangle',\n *   attributes : {\n *     color : new Cesium.ColorGeometryInstanceAttribute(0.0, 1.0, 1.0, 0.5)\n *   }\n * });\n * scene.primitives.add(new Cesium.GroundPrimitive({\n *   geometryInstances : rectangleInstance\n * }));\n *\n * // Example 2: Batch instances\n * const color = new Cesium.ColorGeometryInstanceAttribute(0.0, 1.0, 1.0, 0.5); // Both instances must have the same color.\n * const rectangleInstance = new Cesium.GeometryInstance({\n *   geometry : new Cesium.RectangleGeometry({\n *     rectangle : Cesium.Rectangle.fromDegrees(-140.0, 30.0, -100.0, 40.0)\n *   }),\n *   id : 'rectangle',\n *   attributes : {\n *     color : color\n *   }\n * });\n * const ellipseInstance = new Cesium.GeometryInstance({\n *     geometry : new Cesium.EllipseGeometry({\n *         center : Cesium.Cartesian3.fromDegrees(-105.0, 40.0),\n *         semiMinorAxis : 300000.0,\n *         semiMajorAxis : 400000.0\n *     }),\n *     id : 'ellipse',\n *     attributes : {\n *         color : color\n *     }\n * });\n * scene.primitives.add(new Cesium.GroundPrimitive({\n *   geometryInstances : [rectangleInstance, ellipseInstance]\n * }));\n *\n * @see Primitive\n * @see ClassificationPrimitive\n * @see GeometryInstance\n * @see Appearance\n */\nfunction GroundPrimitive(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  let appearance = options.appearance;\n  const geometryInstances = options.geometryInstances;\n  if (!defined(appearance) && defined(geometryInstances)) {\n    const geometryInstancesArray = Array.isArray(geometryInstances)\n      ? geometryInstances\n      : [geometryInstances];\n    const geometryInstanceCount = geometryInstancesArray.length;\n    for (let i = 0; i < geometryInstanceCount; i++) {\n      const attributes = geometryInstancesArray[i].attributes;\n      if (defined(attributes) && defined(attributes.color)) {\n        appearance = new PerInstanceColorAppearance({\n          flat: true,\n        });\n        break;\n      }\n    }\n  }\n  /**\n   * The {@link Appearance} used to shade this primitive. Each geometry\n   * instance is shaded with the same appearance.  Some appearances, like\n   * {@link PerInstanceColorAppearance} allow giving each instance unique\n   * properties.\n   *\n   * @type Appearance\n   *\n   * @default undefined\n   */\n  this.appearance = appearance;\n\n  /**\n   * The geometry instances rendered with this primitive.  This may\n   * be <code>undefined</code> if <code>options.releaseGeometryInstances</code>\n   * is <code>true</code> when the primitive is constructed.\n   * <p>\n   * Changing this property after the primitive is rendered has no effect.\n   * </p>\n   *\n   * @readonly\n   * @type {Array|GeometryInstance}\n   *\n   * @default undefined\n   */\n  this.geometryInstances = options.geometryInstances;\n  /**\n   * Determines if the primitive will be shown.  This affects all geometry\n   * instances in the primitive.\n   *\n   * @type {boolean}\n   *\n   * @default true\n   */\n  this.show = defaultValue(options.show, true);\n  /**\n   * Determines whether terrain, 3D Tiles or both will be classified.\n   *\n   * @type {ClassificationType}\n   *\n   * @default ClassificationType.BOTH\n   */\n  this.classificationType = defaultValue(\n    options.classificationType,\n    ClassificationType.BOTH\n  );\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the bounding sphere for each draw command in the primitive.\n   * </p>\n   *\n   * @type {boolean}\n   *\n   * @default false\n   */\n  this.debugShowBoundingVolume = defaultValue(\n    options.debugShowBoundingVolume,\n    false\n  );\n\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the shadow volume for each geometry in the primitive.\n   * </p>\n   *\n   * @type {boolean}\n   *\n   * @default false\n   */\n  this.debugShowShadowVolume = defaultValue(\n    options.debugShowShadowVolume,\n    false\n  );\n\n  this._boundingVolumes = [];\n  this._boundingVolumes2D = [];\n\n  this._ready = false;\n  this._primitive = undefined;\n\n  this._maxHeight = undefined;\n  this._minHeight = undefined;\n\n  this._maxTerrainHeight = ApproximateTerrainHeights._defaultMaxTerrainHeight;\n  this._minTerrainHeight = ApproximateTerrainHeights._defaultMinTerrainHeight;\n\n  this._boundingSpheresKeys = [];\n  this._boundingSpheres = [];\n\n  this._useFragmentCulling = false;\n  // Used when inserting in an OrderedPrimitiveCollection\n  this._zIndex = undefined;\n\n  const that = this;\n  this._classificationPrimitiveOptions = {\n    geometryInstances: undefined,\n    appearance: undefined,\n    vertexCacheOptimize: defaultValue(options.vertexCacheOptimize, false),\n    interleave: defaultValue(options.interleave, false),\n    releaseGeometryInstances: defaultValue(\n      options.releaseGeometryInstances,\n      true\n    ),\n    allowPicking: defaultValue(options.allowPicking, true),\n    asynchronous: defaultValue(options.asynchronous, true),\n    compressVertices: defaultValue(options.compressVertices, true),\n    _createBoundingVolumeFunction: undefined,\n    _updateAndQueueCommandsFunction: undefined,\n    _pickPrimitive: that,\n    _extruded: true,\n    _uniformMap: GroundPrimitiveUniformMap,\n  };\n}\n\nObject.defineProperties(GroundPrimitive.prototype, {\n  /**\n   * When <code>true</code>, geometry vertices are optimized for the pre and post-vertex-shader caches.\n   *\n   * @memberof GroundPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  vertexCacheOptimize: {\n    get: function () {\n      return this._classificationPrimitiveOptions.vertexCacheOptimize;\n    },\n  },\n\n  /**\n   * Determines if geometry vertex attributes are interleaved, which can slightly improve rendering performance.\n   *\n   * @memberof GroundPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default false\n   */\n  interleave: {\n    get: function () {\n      return this._classificationPrimitiveOptions.interleave;\n    },\n  },\n\n  /**\n   * When <code>true</code>, the primitive does not keep a reference to the input <code>geometryInstances</code> to save memory.\n   *\n   * @memberof GroundPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  releaseGeometryInstances: {\n    get: function () {\n      return this._classificationPrimitiveOptions.releaseGeometryInstances;\n    },\n  },\n\n  /**\n   * When <code>true</code>, each geometry instance will only be pickable with {@link Scene#pick}.  When <code>false</code>, GPU memory is saved.\n   *\n   * @memberof GroundPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  allowPicking: {\n    get: function () {\n      return this._classificationPrimitiveOptions.allowPicking;\n    },\n  },\n\n  /**\n   * Determines if the geometry instances will be created and batched on a web worker.\n   *\n   * @memberof GroundPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  asynchronous: {\n    get: function () {\n      return this._classificationPrimitiveOptions.asynchronous;\n    },\n  },\n\n  /**\n   * When <code>true</code>, geometry vertices are compressed, which will save memory.\n   *\n   * @memberof GroundPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  compressVertices: {\n    get: function () {\n      return this._classificationPrimitiveOptions.compressVertices;\n    },\n  },\n\n  /**\n   * Determines if the primitive is complete and ready to render.  If this property is\n   * true, the primitive will be rendered the next time that {@link GroundPrimitive#update}\n   * is called.\n   *\n   * @memberof GroundPrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  ready: {\n    get: function () {\n      return this._ready;\n    },\n  },\n});\n\n/**\n * Determines if GroundPrimitive rendering is supported.\n *\n * @function\n * @param {Scene} scene The scene.\n * @returns {boolean} <code>true</code> if GroundPrimitives are supported; otherwise, returns <code>false</code>\n */\nGroundPrimitive.isSupported = ClassificationPrimitive.isSupported;\n\nfunction getComputeMaximumHeightFunction(primitive) {\n  return function (granularity, ellipsoid) {\n    const r = ellipsoid.maximumRadius;\n    const delta = r / Math.cos(granularity * 0.5) - r;\n    return primitive._maxHeight + delta;\n  };\n}\n\nfunction getComputeMinimumHeightFunction(primitive) {\n  return function (granularity, ellipsoid) {\n    return primitive._minHeight;\n  };\n}\n\nconst scratchBVCartesianHigh = new Cartesian3();\nconst scratchBVCartesianLow = new Cartesian3();\nconst scratchBVCartesian = new Cartesian3();\nconst scratchBVCartographic = new Cartographic();\nconst scratchBVRectangle = new Rectangle();\n\nfunction getRectangle(frameState, geometry) {\n  const ellipsoid = frameState.mapProjection.ellipsoid;\n\n  if (\n    !defined(geometry.attributes) ||\n    !defined(geometry.attributes.position3DHigh)\n  ) {\n    if (defined(geometry.rectangle)) {\n      return geometry.rectangle;\n    }\n\n    return undefined;\n  }\n\n  const highPositions = geometry.attributes.position3DHigh.values;\n  const lowPositions = geometry.attributes.position3DLow.values;\n  const length = highPositions.length;\n\n  let minLat = Number.POSITIVE_INFINITY;\n  let minLon = Number.POSITIVE_INFINITY;\n  let maxLat = Number.NEGATIVE_INFINITY;\n  let maxLon = Number.NEGATIVE_INFINITY;\n\n  for (let i = 0; i < length; i += 3) {\n    const highPosition = Cartesian3.unpack(\n      highPositions,\n      i,\n      scratchBVCartesianHigh\n    );\n    const lowPosition = Cartesian3.unpack(\n      lowPositions,\n      i,\n      scratchBVCartesianLow\n    );\n\n    const position = Cartesian3.add(\n      highPosition,\n      lowPosition,\n      scratchBVCartesian\n    );\n    const cartographic = ellipsoid.cartesianToCartographic(\n      position,\n      scratchBVCartographic\n    );\n\n    const latitude = cartographic.latitude;\n    const longitude = cartographic.longitude;\n\n    minLat = Math.min(minLat, latitude);\n    minLon = Math.min(minLon, longitude);\n    maxLat = Math.max(maxLat, latitude);\n    maxLon = Math.max(maxLon, longitude);\n  }\n\n  const rectangle = scratchBVRectangle;\n  rectangle.north = maxLat;\n  rectangle.south = minLat;\n  rectangle.east = maxLon;\n  rectangle.west = minLon;\n\n  return rectangle;\n}\n\nfunction setMinMaxTerrainHeights(primitive, rectangle, ellipsoid) {\n  const result = ApproximateTerrainHeights.getMinimumMaximumHeights(\n    rectangle,\n    ellipsoid\n  );\n\n  primitive._minTerrainHeight = result.minimumTerrainHeight;\n  primitive._maxTerrainHeight = result.maximumTerrainHeight;\n}\n\nfunction createBoundingVolume(groundPrimitive, frameState, geometry) {\n  const ellipsoid = frameState.mapProjection.ellipsoid;\n  const rectangle = getRectangle(frameState, geometry);\n\n  const obb = OrientedBoundingBox.fromRectangle(\n    rectangle,\n    groundPrimitive._minHeight,\n    groundPrimitive._maxHeight,\n    ellipsoid\n  );\n  groundPrimitive._boundingVolumes.push(obb);\n\n  if (!frameState.scene3DOnly) {\n    const projection = frameState.mapProjection;\n    const boundingVolume = BoundingSphere.fromRectangleWithHeights2D(\n      rectangle,\n      projection,\n      groundPrimitive._maxHeight,\n      groundPrimitive._minHeight\n    );\n    Cartesian3.fromElements(\n      boundingVolume.center.z,\n      boundingVolume.center.x,\n      boundingVolume.center.y,\n      boundingVolume.center\n    );\n\n    groundPrimitive._boundingVolumes2D.push(boundingVolume);\n  }\n}\n\nfunction boundingVolumeIndex(commandIndex, length) {\n  return Math.floor((commandIndex % length) / 2);\n}\n\nfunction updateAndQueueRenderCommand(\n  groundPrimitive,\n  command,\n  frameState,\n  modelMatrix,\n  cull,\n  boundingVolume,\n  debugShowBoundingVolume\n) {\n  // Use derived appearance command for 2D if needed\n  const classificationPrimitive = groundPrimitive._primitive;\n  if (\n    frameState.mode !== SceneMode.SCENE3D &&\n    command.shaderProgram === classificationPrimitive._spColor &&\n    classificationPrimitive._needs2DShader\n  ) {\n    command = command.derivedCommands.appearance2D;\n  }\n\n  command.owner = groundPrimitive;\n  command.modelMatrix = modelMatrix;\n  command.boundingVolume = boundingVolume;\n  command.cull = cull;\n  command.debugShowBoundingVolume = debugShowBoundingVolume;\n\n  frameState.commandList.push(command);\n}\n\nfunction updateAndQueuePickCommand(\n  groundPrimitive,\n  command,\n  frameState,\n  modelMatrix,\n  cull,\n  boundingVolume\n) {\n  // Use derived pick command for 2D if needed\n  const classificationPrimitive = groundPrimitive._primitive;\n  if (\n    frameState.mode !== SceneMode.SCENE3D &&\n    command.shaderProgram === classificationPrimitive._spPick &&\n    classificationPrimitive._needs2DShader\n  ) {\n    command = command.derivedCommands.pick2D;\n  }\n\n  command.owner = groundPrimitive;\n  command.modelMatrix = modelMatrix;\n  command.boundingVolume = boundingVolume;\n  command.cull = cull;\n\n  frameState.commandList.push(command);\n}\n\nfunction updateAndQueueCommands(\n  groundPrimitive,\n  frameState,\n  colorCommands,\n  pickCommands,\n  modelMatrix,\n  cull,\n  debugShowBoundingVolume,\n  twoPasses\n) {\n  let boundingVolumes;\n  if (frameState.mode === SceneMode.SCENE3D) {\n    boundingVolumes = groundPrimitive._boundingVolumes;\n  } else {\n    boundingVolumes = groundPrimitive._boundingVolumes2D;\n  }\n\n  const classificationType = groundPrimitive.classificationType;\n  const queueTerrainCommands =\n    classificationType !== ClassificationType.CESIUM_3D_TILE;\n  const queue3DTilesCommands =\n    classificationType !== ClassificationType.TERRAIN;\n\n  const passes = frameState.passes;\n  const classificationPrimitive = groundPrimitive._primitive;\n\n  let i;\n  let boundingVolume;\n  let command;\n\n  if (passes.render) {\n    const colorLength = colorCommands.length;\n\n    for (i = 0; i < colorLength; ++i) {\n      boundingVolume = boundingVolumes[boundingVolumeIndex(i, colorLength)];\n      if (queueTerrainCommands) {\n        command = colorCommands[i];\n        updateAndQueueRenderCommand(\n          groundPrimitive,\n          command,\n          frameState,\n          modelMatrix,\n          cull,\n          boundingVolume,\n          debugShowBoundingVolume\n        );\n      }\n      if (queue3DTilesCommands) {\n        command = colorCommands[i].derivedCommands.tileset;\n        updateAndQueueRenderCommand(\n          groundPrimitive,\n          command,\n          frameState,\n          modelMatrix,\n          cull,\n          boundingVolume,\n          debugShowBoundingVolume\n        );\n      }\n    }\n\n    if (frameState.invertClassification) {\n      const ignoreShowCommands = classificationPrimitive._commandsIgnoreShow;\n      const ignoreShowCommandsLength = ignoreShowCommands.length;\n      for (i = 0; i < ignoreShowCommandsLength; ++i) {\n        boundingVolume = boundingVolumes[i];\n        command = ignoreShowCommands[i];\n        updateAndQueueRenderCommand(\n          groundPrimitive,\n          command,\n          frameState,\n          modelMatrix,\n          cull,\n          boundingVolume,\n          debugShowBoundingVolume\n        );\n      }\n    }\n  }\n\n  if (passes.pick) {\n    const pickLength = pickCommands.length;\n\n    let pickOffsets;\n    if (!groundPrimitive._useFragmentCulling) {\n      // Must be using pick offsets\n      pickOffsets = classificationPrimitive._primitive._pickOffsets;\n    }\n    for (i = 0; i < pickLength; ++i) {\n      boundingVolume = boundingVolumes[boundingVolumeIndex(i, pickLength)];\n      if (!groundPrimitive._useFragmentCulling) {\n        const pickOffset = pickOffsets[boundingVolumeIndex(i, pickLength)];\n        boundingVolume = boundingVolumes[pickOffset.index];\n      }\n      if (queueTerrainCommands) {\n        command = pickCommands[i];\n        updateAndQueuePickCommand(\n          groundPrimitive,\n          command,\n          frameState,\n          modelMatrix,\n          cull,\n          boundingVolume\n        );\n      }\n      if (queue3DTilesCommands) {\n        command = pickCommands[i].derivedCommands.tileset;\n        updateAndQueuePickCommand(\n          groundPrimitive,\n          command,\n          frameState,\n          modelMatrix,\n          cull,\n          boundingVolume\n        );\n      }\n    }\n  }\n}\n\n/**\n * Initializes the minimum and maximum terrain heights. This only needs to be called if you are creating the\n * GroundPrimitive synchronously.\n *\n * @returns {Promise<void>} A promise that will resolve once the terrain heights have been loaded.\n *\n */\nGroundPrimitive.initializeTerrainHeights = function () {\n  return ApproximateTerrainHeights.initialize();\n};\n\n/**\n * Called when {@link Viewer} or {@link CesiumWidget} render the scene to\n * get the draw commands needed to render this primitive.\n * <p>\n * Do not call this function directly.  This is documented just to\n * list the exceptions that may be propagated when the scene is rendered:\n * </p>\n *\n * @exception {DeveloperError} For synchronous GroundPrimitive, you must call GroundPrimitive.initializeTerrainHeights() and wait for the returned promise to resolve.\n * @exception {DeveloperError} All instance geometries must have the same primitiveType.\n * @exception {DeveloperError} Appearance and material have a uniform with the same name.\n */\nGroundPrimitive.prototype.update = function (frameState) {\n  if (!defined(this._primitive) && !defined(this.geometryInstances)) {\n    return;\n  }\n\n  if (!ApproximateTerrainHeights.initialized) {\n    //>>includeStart('debug', pragmas.debug);\n    if (!this.asynchronous) {\n      throw new DeveloperError(\n        \"For synchronous GroundPrimitives, you must call GroundPrimitive.initializeTerrainHeights() and wait for the returned promise to resolve.\"\n      );\n    }\n    //>>includeEnd('debug');\n\n    GroundPrimitive.initializeTerrainHeights();\n    return;\n  }\n\n  const that = this;\n  const primitiveOptions = this._classificationPrimitiveOptions;\n\n  if (!defined(this._primitive)) {\n    const ellipsoid = frameState.mapProjection.ellipsoid;\n\n    let instance;\n    let geometry;\n    let instanceType;\n\n    const instances = Array.isArray(this.geometryInstances)\n      ? this.geometryInstances\n      : [this.geometryInstances];\n    const length = instances.length;\n    const groundInstances = new Array(length);\n\n    let i;\n    let rectangle;\n    for (i = 0; i < length; ++i) {\n      instance = instances[i];\n      geometry = instance.geometry;\n      const instanceRectangle = getRectangle(frameState, geometry);\n      if (!defined(rectangle)) {\n        rectangle = Rectangle.clone(instanceRectangle);\n      } else if (defined(instanceRectangle)) {\n        Rectangle.union(rectangle, instanceRectangle, rectangle);\n      }\n\n      const id = instance.id;\n      if (defined(id) && defined(instanceRectangle)) {\n        const boundingSphere = ApproximateTerrainHeights.getBoundingSphere(\n          instanceRectangle,\n          ellipsoid\n        );\n        this._boundingSpheresKeys.push(id);\n        this._boundingSpheres.push(boundingSphere);\n      }\n\n      instanceType = geometry.constructor;\n      if (!defined(instanceType) || !defined(instanceType.createShadowVolume)) {\n        //>>includeStart('debug', pragmas.debug);\n        throw new DeveloperError(\n          \"Not all of the geometry instances have GroundPrimitive support.\"\n        );\n        //>>includeEnd('debug');\n      }\n    }\n\n    // Now compute the min/max heights for the primitive\n    setMinMaxTerrainHeights(this, rectangle, ellipsoid);\n    const exaggeration = frameState.verticalExaggeration;\n    const exaggerationRelativeHeight =\n      frameState.verticalExaggerationRelativeHeight;\n    this._minHeight = VerticalExaggeration.getHeight(\n      this._minTerrainHeight,\n      exaggeration,\n      exaggerationRelativeHeight\n    );\n    this._maxHeight = VerticalExaggeration.getHeight(\n      this._maxTerrainHeight,\n      exaggeration,\n      exaggerationRelativeHeight\n    );\n\n    const useFragmentCulling = GroundPrimitive._supportsMaterials(\n      frameState.context\n    );\n    this._useFragmentCulling = useFragmentCulling;\n\n    if (useFragmentCulling) {\n      // Determine whether to add spherical or planar extent attributes for computing texture coordinates.\n      // This depends on the size of the GeometryInstances.\n      let attributes;\n      let usePlanarExtents = true;\n      for (i = 0; i < length; ++i) {\n        instance = instances[i];\n        geometry = instance.geometry;\n        rectangle = getRectangle(frameState, geometry);\n        if (ShadowVolumeAppearance.shouldUseSphericalCoordinates(rectangle)) {\n          usePlanarExtents = false;\n          break;\n        }\n      }\n\n      for (i = 0; i < length; ++i) {\n        instance = instances[i];\n        geometry = instance.geometry;\n        instanceType = geometry.constructor;\n\n        const boundingRectangle = getRectangle(frameState, geometry);\n        const textureCoordinateRotationPoints =\n          geometry.textureCoordinateRotationPoints;\n\n        if (usePlanarExtents) {\n          attributes = ShadowVolumeAppearance.getPlanarTextureCoordinateAttributes(\n            boundingRectangle,\n            textureCoordinateRotationPoints,\n            ellipsoid,\n            frameState.mapProjection,\n            this._maxHeight\n          );\n        } else {\n          attributes = ShadowVolumeAppearance.getSphericalExtentGeometryInstanceAttributes(\n            boundingRectangle,\n            textureCoordinateRotationPoints,\n            ellipsoid,\n            frameState.mapProjection\n          );\n        }\n\n        const instanceAttributes = instance.attributes;\n        for (const attributeKey in instanceAttributes) {\n          if (instanceAttributes.hasOwnProperty(attributeKey)) {\n            attributes[attributeKey] = instanceAttributes[attributeKey];\n          }\n        }\n\n        groundInstances[i] = new GeometryInstance({\n          geometry: instanceType.createShadowVolume(\n            geometry,\n            getComputeMinimumHeightFunction(this),\n            getComputeMaximumHeightFunction(this)\n          ),\n          attributes: attributes,\n          id: instance.id,\n        });\n      }\n    } else {\n      // ClassificationPrimitive will check if the colors are all the same if it detects lack of fragment culling attributes\n      for (i = 0; i < length; ++i) {\n        instance = instances[i];\n        geometry = instance.geometry;\n        instanceType = geometry.constructor;\n        groundInstances[i] = new GeometryInstance({\n          geometry: instanceType.createShadowVolume(\n            geometry,\n            getComputeMinimumHeightFunction(this),\n            getComputeMaximumHeightFunction(this)\n          ),\n          attributes: instance.attributes,\n          id: instance.id,\n        });\n      }\n    }\n\n    primitiveOptions.geometryInstances = groundInstances;\n    primitiveOptions.appearance = this.appearance;\n\n    primitiveOptions._createBoundingVolumeFunction = function (\n      frameState,\n      geometry\n    ) {\n      createBoundingVolume(that, frameState, geometry);\n    };\n    primitiveOptions._updateAndQueueCommandsFunction = function (\n      primitive,\n      frameState,\n      colorCommands,\n      pickCommands,\n      modelMatrix,\n      cull,\n      debugShowBoundingVolume,\n      twoPasses\n    ) {\n      updateAndQueueCommands(\n        that,\n        frameState,\n        colorCommands,\n        pickCommands,\n        modelMatrix,\n        cull,\n        debugShowBoundingVolume,\n        twoPasses\n      );\n    };\n\n    this._primitive = new ClassificationPrimitive(primitiveOptions);\n  }\n\n  this._primitive.appearance = this.appearance;\n  this._primitive.show = this.show;\n  this._primitive.debugShowShadowVolume = this.debugShowShadowVolume;\n  this._primitive.debugShowBoundingVolume = this.debugShowBoundingVolume;\n  this._primitive.update(frameState);\n\n  frameState.afterRender.push(() => {\n    if (!this._ready && defined(this._primitive) && this._primitive.ready) {\n      this._ready = true;\n\n      if (this.releaseGeometryInstances) {\n        this.geometryInstances = undefined;\n      }\n    }\n  });\n};\n\n/**\n * @private\n */\nGroundPrimitive.prototype.getBoundingSphere = function (id) {\n  const index = this._boundingSpheresKeys.indexOf(id);\n  if (index !== -1) {\n    return this._boundingSpheres[index];\n  }\n\n  return undefined;\n};\n\n/**\n * Returns the modifiable per-instance attributes for a {@link GeometryInstance}.\n *\n * @param {*} id The id of the {@link GeometryInstance}.\n * @returns {object} The typed array in the attribute's format or undefined if the is no instance with id.\n *\n * @exception {DeveloperError} must call update before calling getGeometryInstanceAttributes.\n *\n * @example\n * const attributes = primitive.getGeometryInstanceAttributes('an id');\n * attributes.color = Cesium.ColorGeometryInstanceAttribute.toValue(Cesium.Color.AQUA);\n * attributes.show = Cesium.ShowGeometryInstanceAttribute.toValue(true);\n */\nGroundPrimitive.prototype.getGeometryInstanceAttributes = function (id) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(this._primitive)) {\n    throw new DeveloperError(\n      \"must call update before calling getGeometryInstanceAttributes\"\n    );\n  }\n  //>>includeEnd('debug');\n  return this._primitive.getGeometryInstanceAttributes(id);\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see GroundPrimitive#destroy\n */\nGroundPrimitive.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * e = e && e.destroy();\n *\n * @see GroundPrimitive#isDestroyed\n */\nGroundPrimitive.prototype.destroy = function () {\n  this._primitive = this._primitive && this._primitive.destroy();\n  return destroyObject(this);\n};\n\n/**\n * Exposed for testing.\n *\n * @param {Context} context Rendering context\n * @returns {boolean} Whether or not the current context supports materials on GroundPrimitives.\n * @private\n */\nGroundPrimitive._supportsMaterials = function (context) {\n  return context.depthTexture;\n};\n\n/**\n * Checks if the given Scene supports materials on GroundPrimitives.\n * Materials on GroundPrimitives require support for the WEBGL_depth_texture extension.\n *\n * @param {Scene} scene The current scene.\n * @returns {boolean} Whether or not the current scene supports materials on GroundPrimitives.\n */\nGroundPrimitive.supportsMaterials = function (scene) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"scene\", scene);\n  //>>includeEnd('debug');\n\n  return GroundPrimitive._supportsMaterials(scene.frameState.context);\n};\nexport default GroundPrimitive;\n","import ApproximateTerrainHeights from \"./ApproximateTerrainHeights.js\";\nimport ArcType from \"./ArcType.js\";\nimport arrayRemoveDuplicates from \"./arrayRemoveDuplicates.js\";\nimport BoundingSphere from \"./BoundingSphere.js\";\nimport Cartesian3 from \"./Cartesian3.js\";\nimport Cartographic from \"./Cartographic.js\";\nimport Check from \"./Check.js\";\nimport ComponentDatatype from \"./ComponentDatatype.js\";\nimport defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nimport Ellipsoid from \"./Ellipsoid.js\";\nimport EllipsoidGeodesic from \"./EllipsoidGeodesic.js\";\nimport EllipsoidRhumbLine from \"./EllipsoidRhumbLine.js\";\nimport EncodedCartesian3 from \"./EncodedCartesian3.js\";\nimport GeographicProjection from \"./GeographicProjection.js\";\nimport Geometry from \"./Geometry.js\";\nimport GeometryAttribute from \"./GeometryAttribute.js\";\nimport IntersectionTests from \"./IntersectionTests.js\";\nimport CesiumMath from \"./Math.js\";\nimport Matrix3 from \"./Matrix3.js\";\nimport Plane from \"./Plane.js\";\nimport Quaternion from \"./Quaternion.js\";\nimport Rectangle from \"./Rectangle.js\";\nimport WebMercatorProjection from \"./WebMercatorProjection.js\";\n\nconst PROJECTIONS = [GeographicProjection, WebMercatorProjection];\nconst PROJECTION_COUNT = PROJECTIONS.length;\n\nconst MITER_BREAK_SMALL = Math.cos(CesiumMath.toRadians(30.0));\nconst MITER_BREAK_LARGE = Math.cos(CesiumMath.toRadians(150.0));\n\n// Initial heights for constructing the wall.\n// Keeping WALL_INITIAL_MIN_HEIGHT near the ellipsoid surface helps\n// prevent precision problems with planes in the shader.\n// Putting the start point of a plane at ApproximateTerrainHeights._defaultMinTerrainHeight,\n// which is a highly conservative bound, usually puts the plane origin several thousands\n// of meters away from the actual terrain, causing floating point problems when checking\n// fragments on terrain against the plane.\n// Ellipsoid height is generally much closer.\n// The initial max height is arbitrary.\n// Both heights are corrected using ApproximateTerrainHeights for computing the actual volume geometry.\nconst WALL_INITIAL_MIN_HEIGHT = 0.0;\nconst WALL_INITIAL_MAX_HEIGHT = 1000.0;\n\n/**\n * A description of a polyline on terrain or 3D Tiles. Only to be used with {@link GroundPolylinePrimitive}.\n *\n * @alias GroundPolylineGeometry\n * @constructor\n *\n * @param {object} options Options with the following properties:\n * @param {Cartesian3[]} options.positions An array of {@link Cartesian3} defining the polyline's points. Heights above the ellipsoid will be ignored.\n * @param {number} [options.width=1.0] The screen space width in pixels.\n * @param {number} [options.granularity=9999.0] The distance interval in meters used for interpolating options.points. Defaults to 9999.0 meters. Zero indicates no interpolation.\n * @param {boolean} [options.loop=false] Whether during geometry creation a line segment will be added between the last and first line positions to make this Polyline a loop.\n * @param {ArcType} [options.arcType=ArcType.GEODESIC] The type of line the polyline segments must follow. Valid options are {@link ArcType.GEODESIC} and {@link ArcType.RHUMB}.\n *\n * @exception {DeveloperError} At least two positions are required.\n *\n * @see GroundPolylinePrimitive\n *\n * @example\n * const positions = Cesium.Cartesian3.fromDegreesArray([\n *   -112.1340164450331, 36.05494287836128,\n *   -112.08821010582645, 36.097804071380715,\n *   -112.13296079730024, 36.168769146801104\n * ]);\n *\n * const geometry = new Cesium.GroundPolylineGeometry({\n *   positions : positions\n * });\n */\nfunction GroundPolylineGeometry(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const positions = options.positions;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(positions) || positions.length < 2) {\n    throw new DeveloperError(\"At least two positions are required.\");\n  }\n  if (\n    defined(options.arcType) &&\n    options.arcType !== ArcType.GEODESIC &&\n    options.arcType !== ArcType.RHUMB\n  ) {\n    throw new DeveloperError(\n      \"Valid options for arcType are ArcType.GEODESIC and ArcType.RHUMB.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  /**\n   * The screen space width in pixels.\n   * @type {number}\n   */\n  this.width = defaultValue(options.width, 1.0); // Doesn't get packed, not necessary for computing geometry.\n\n  this._positions = positions;\n\n  /**\n   * The distance interval used for interpolating options.points. Zero indicates no interpolation.\n   * Default of 9999.0 allows centimeter accuracy with 32 bit floating point.\n   * @type {boolean}\n   * @default 9999.0\n   */\n  this.granularity = defaultValue(options.granularity, 9999.0);\n\n  /**\n   * Whether during geometry creation a line segment will be added between the last and first line positions to make this Polyline a loop.\n   * If the geometry has two positions this parameter will be ignored.\n   * @type {boolean}\n   * @default false\n   */\n  this.loop = defaultValue(options.loop, false);\n\n  /**\n   * The type of path the polyline must follow. Valid options are {@link ArcType.GEODESIC} and {@link ArcType.RHUMB}.\n   * @type {ArcType}\n   * @default ArcType.GEODESIC\n   */\n  this.arcType = defaultValue(options.arcType, ArcType.GEODESIC);\n\n  this._ellipsoid = Ellipsoid.default;\n\n  // MapProjections can't be packed, so store the index to a known MapProjection.\n  this._projectionIndex = 0;\n  this._workerName = \"createGroundPolylineGeometry\";\n\n  // Used by GroundPolylinePrimitive to signal worker that scenemode is 3D only.\n  this._scene3DOnly = false;\n}\n\nObject.defineProperties(GroundPolylineGeometry.prototype, {\n  /**\n   * The number of elements used to pack the object into an array.\n   * @memberof GroundPolylineGeometry.prototype\n   * @type {number}\n   * @readonly\n   * @private\n   */\n  packedLength: {\n    get: function () {\n      return (\n        1.0 +\n        this._positions.length * 3 +\n        1.0 +\n        1.0 +\n        1.0 +\n        Ellipsoid.packedLength +\n        1.0 +\n        1.0\n      );\n    },\n  },\n});\n\n/**\n * Set the GroundPolylineGeometry's projection and ellipsoid.\n * Used by GroundPolylinePrimitive to signal scene information to the geometry for generating 2D attributes.\n *\n * @param {GroundPolylineGeometry} groundPolylineGeometry GroundPolylinGeometry describing a polyline on terrain or 3D Tiles.\n * @param {Projection} mapProjection A MapProjection used for projecting cartographic coordinates to 2D.\n * @private\n */\nGroundPolylineGeometry.setProjectionAndEllipsoid = function (\n  groundPolylineGeometry,\n  mapProjection\n) {\n  let projectionIndex = 0;\n  for (let i = 0; i < PROJECTION_COUNT; i++) {\n    if (mapProjection instanceof PROJECTIONS[i]) {\n      projectionIndex = i;\n      break;\n    }\n  }\n\n  groundPolylineGeometry._projectionIndex = projectionIndex;\n  groundPolylineGeometry._ellipsoid = mapProjection.ellipsoid;\n};\n\nconst cart3Scratch1 = new Cartesian3();\nconst cart3Scratch2 = new Cartesian3();\nconst cart3Scratch3 = new Cartesian3();\nfunction computeRightNormal(start, end, maxHeight, ellipsoid, result) {\n  const startBottom = getPosition(ellipsoid, start, 0.0, cart3Scratch1);\n  const startTop = getPosition(ellipsoid, start, maxHeight, cart3Scratch2);\n  const endBottom = getPosition(ellipsoid, end, 0.0, cart3Scratch3);\n\n  const up = direction(startTop, startBottom, cart3Scratch2);\n  const forward = direction(endBottom, startBottom, cart3Scratch3);\n\n  Cartesian3.cross(forward, up, result);\n  return Cartesian3.normalize(result, result);\n}\n\nconst interpolatedCartographicScratch = new Cartographic();\nconst interpolatedBottomScratch = new Cartesian3();\nconst interpolatedTopScratch = new Cartesian3();\nconst interpolatedNormalScratch = new Cartesian3();\nfunction interpolateSegment(\n  start,\n  end,\n  minHeight,\n  maxHeight,\n  granularity,\n  arcType,\n  ellipsoid,\n  normalsArray,\n  bottomPositionsArray,\n  topPositionsArray,\n  cartographicsArray\n) {\n  if (granularity === 0.0) {\n    return;\n  }\n\n  let ellipsoidLine;\n  if (arcType === ArcType.GEODESIC) {\n    ellipsoidLine = new EllipsoidGeodesic(start, end, ellipsoid);\n  } else if (arcType === ArcType.RHUMB) {\n    ellipsoidLine = new EllipsoidRhumbLine(start, end, ellipsoid);\n  }\n\n  const surfaceDistance = ellipsoidLine.surfaceDistance;\n  if (surfaceDistance < granularity) {\n    return;\n  }\n\n  // Compute rightwards normal applicable at all interpolated points\n  const interpolatedNormal = computeRightNormal(\n    start,\n    end,\n    maxHeight,\n    ellipsoid,\n    interpolatedNormalScratch\n  );\n\n  const segments = Math.ceil(surfaceDistance / granularity);\n  const interpointDistance = surfaceDistance / segments;\n  let distanceFromStart = interpointDistance;\n  const pointsToAdd = segments - 1;\n  let packIndex = normalsArray.length;\n  for (let i = 0; i < pointsToAdd; i++) {\n    const interpolatedCartographic = ellipsoidLine.interpolateUsingSurfaceDistance(\n      distanceFromStart,\n      interpolatedCartographicScratch\n    );\n    const interpolatedBottom = getPosition(\n      ellipsoid,\n      interpolatedCartographic,\n      minHeight,\n      interpolatedBottomScratch\n    );\n    const interpolatedTop = getPosition(\n      ellipsoid,\n      interpolatedCartographic,\n      maxHeight,\n      interpolatedTopScratch\n    );\n\n    Cartesian3.pack(interpolatedNormal, normalsArray, packIndex);\n    Cartesian3.pack(interpolatedBottom, bottomPositionsArray, packIndex);\n    Cartesian3.pack(interpolatedTop, topPositionsArray, packIndex);\n    cartographicsArray.push(interpolatedCartographic.latitude);\n    cartographicsArray.push(interpolatedCartographic.longitude);\n\n    packIndex += 3;\n    distanceFromStart += interpointDistance;\n  }\n}\n\nconst heightlessCartographicScratch = new Cartographic();\nfunction getPosition(ellipsoid, cartographic, height, result) {\n  Cartographic.clone(cartographic, heightlessCartographicScratch);\n  heightlessCartographicScratch.height = height;\n  return Cartographic.toCartesian(\n    heightlessCartographicScratch,\n    ellipsoid,\n    result\n  );\n}\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {PolygonGeometry} value The value to pack.\n * @param {number[]} array The array to pack into.\n * @param {number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {number[]} The array that was packed into\n */\nGroundPolylineGeometry.pack = function (value, array, startingIndex) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"value\", value);\n  Check.defined(\"array\", array);\n  //>>includeEnd('debug');\n\n  let index = defaultValue(startingIndex, 0);\n\n  const positions = value._positions;\n  const positionsLength = positions.length;\n\n  array[index++] = positionsLength;\n\n  for (let i = 0; i < positionsLength; ++i) {\n    const cartesian = positions[i];\n    Cartesian3.pack(cartesian, array, index);\n    index += 3;\n  }\n\n  array[index++] = value.granularity;\n  array[index++] = value.loop ? 1.0 : 0.0;\n  array[index++] = value.arcType;\n\n  Ellipsoid.pack(value._ellipsoid, array, index);\n  index += Ellipsoid.packedLength;\n\n  array[index++] = value._projectionIndex;\n  array[index++] = value._scene3DOnly ? 1.0 : 0.0;\n\n  return array;\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {number[]} array The packed array.\n * @param {number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {PolygonGeometry} [result] The object into which to store the result.\n */\nGroundPolylineGeometry.unpack = function (array, startingIndex, result) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"array\", array);\n  //>>includeEnd('debug');\n\n  let index = defaultValue(startingIndex, 0);\n  const positionsLength = array[index++];\n  const positions = new Array(positionsLength);\n\n  for (let i = 0; i < positionsLength; i++) {\n    positions[i] = Cartesian3.unpack(array, index);\n    index += 3;\n  }\n\n  const granularity = array[index++];\n  const loop = array[index++] === 1.0;\n  const arcType = array[index++];\n\n  const ellipsoid = Ellipsoid.unpack(array, index);\n  index += Ellipsoid.packedLength;\n\n  const projectionIndex = array[index++];\n  const scene3DOnly = array[index++] === 1.0;\n\n  if (!defined(result)) {\n    result = new GroundPolylineGeometry({\n      positions: positions,\n    });\n  }\n\n  result._positions = positions;\n  result.granularity = granularity;\n  result.loop = loop;\n  result.arcType = arcType;\n  result._ellipsoid = ellipsoid;\n  result._projectionIndex = projectionIndex;\n  result._scene3DOnly = scene3DOnly;\n\n  return result;\n};\n\nfunction direction(target, origin, result) {\n  Cartesian3.subtract(target, origin, result);\n  Cartesian3.normalize(result, result);\n  return result;\n}\n\nfunction tangentDirection(target, origin, up, result) {\n  result = direction(target, origin, result);\n\n  // orthogonalize\n  result = Cartesian3.cross(result, up, result);\n  result = Cartesian3.normalize(result, result);\n  result = Cartesian3.cross(up, result, result);\n  return result;\n}\n\nconst toPreviousScratch = new Cartesian3();\nconst toNextScratch = new Cartesian3();\nconst forwardScratch = new Cartesian3();\nconst vertexUpScratch = new Cartesian3();\nconst cosine90 = 0.0;\nconst cosine180 = -1.0;\nfunction computeVertexMiterNormal(\n  previousBottom,\n  vertexBottom,\n  vertexTop,\n  nextBottom,\n  result\n) {\n  const up = direction(vertexTop, vertexBottom, vertexUpScratch);\n\n  // Compute vectors pointing towards neighboring points but tangent to this point on the ellipsoid\n  const toPrevious = tangentDirection(\n    previousBottom,\n    vertexBottom,\n    up,\n    toPreviousScratch\n  );\n  const toNext = tangentDirection(nextBottom, vertexBottom, up, toNextScratch);\n\n  // Check if tangents are almost opposite - if so, no need to miter.\n  if (\n    CesiumMath.equalsEpsilon(\n      Cartesian3.dot(toPrevious, toNext),\n      cosine180,\n      CesiumMath.EPSILON5\n    )\n  ) {\n    result = Cartesian3.cross(up, toPrevious, result);\n    result = Cartesian3.normalize(result, result);\n    return result;\n  }\n\n  // Average directions to previous and to next in the plane of Up\n  result = Cartesian3.add(toNext, toPrevious, result);\n  result = Cartesian3.normalize(result, result);\n\n  // Flip the normal if it isn't pointing roughly bound right (aka if forward is pointing more \"backwards\")\n  const forward = Cartesian3.cross(up, result, forwardScratch);\n  if (Cartesian3.dot(toNext, forward) < cosine90) {\n    result = Cartesian3.negate(result, result);\n  }\n\n  return result;\n}\n\nconst XZ_PLANE = Plane.fromPointNormal(Cartesian3.ZERO, Cartesian3.UNIT_Y);\n\nconst previousBottomScratch = new Cartesian3();\nconst vertexBottomScratch = new Cartesian3();\nconst vertexTopScratch = new Cartesian3();\nconst nextBottomScratch = new Cartesian3();\nconst vertexNormalScratch = new Cartesian3();\nconst intersectionScratch = new Cartesian3();\nconst cartographicScratch0 = new Cartographic();\nconst cartographicScratch1 = new Cartographic();\nconst cartographicIntersectionScratch = new Cartographic();\n/**\n * Computes shadow volumes for the ground polyline, consisting of its vertices, indices, and a bounding sphere.\n * Vertices are \"fat,\" packing all the data needed in each volume to describe a line on terrain or 3D Tiles.\n * Should not be called independent of {@link GroundPolylinePrimitive}.\n *\n * @param {GroundPolylineGeometry} groundPolylineGeometry\n * @private\n */\nGroundPolylineGeometry.createGeometry = function (groundPolylineGeometry) {\n  const compute2dAttributes = !groundPolylineGeometry._scene3DOnly;\n  let loop = groundPolylineGeometry.loop;\n  const ellipsoid = groundPolylineGeometry._ellipsoid;\n  const granularity = groundPolylineGeometry.granularity;\n  const arcType = groundPolylineGeometry.arcType;\n  const projection = new PROJECTIONS[groundPolylineGeometry._projectionIndex](\n    ellipsoid\n  );\n\n  const minHeight = WALL_INITIAL_MIN_HEIGHT;\n  const maxHeight = WALL_INITIAL_MAX_HEIGHT;\n\n  let index;\n  let i;\n\n  const positions = groundPolylineGeometry._positions;\n  const positionsLength = positions.length;\n\n  if (positionsLength === 2) {\n    loop = false;\n  }\n\n  // Split positions across the IDL and the Prime Meridian as well.\n  // Split across prime meridian because very large geometries crossing the Prime Meridian but not the IDL\n  // may get split by the plane of IDL + Prime Meridian.\n  let p0;\n  let p1;\n  let c0;\n  let c1;\n  const rhumbLine = new EllipsoidRhumbLine(undefined, undefined, ellipsoid);\n  let intersection;\n  let intersectionCartographic;\n  let intersectionLongitude;\n  const splitPositions = [positions[0]];\n  for (i = 0; i < positionsLength - 1; i++) {\n    p0 = positions[i];\n    p1 = positions[i + 1];\n    intersection = IntersectionTests.lineSegmentPlane(\n      p0,\n      p1,\n      XZ_PLANE,\n      intersectionScratch\n    );\n    if (\n      defined(intersection) &&\n      !Cartesian3.equalsEpsilon(intersection, p0, CesiumMath.EPSILON7) &&\n      !Cartesian3.equalsEpsilon(intersection, p1, CesiumMath.EPSILON7)\n    ) {\n      if (groundPolylineGeometry.arcType === ArcType.GEODESIC) {\n        splitPositions.push(Cartesian3.clone(intersection));\n      } else if (groundPolylineGeometry.arcType === ArcType.RHUMB) {\n        intersectionLongitude = ellipsoid.cartesianToCartographic(\n          intersection,\n          cartographicScratch0\n        ).longitude;\n        c0 = ellipsoid.cartesianToCartographic(p0, cartographicScratch0);\n        c1 = ellipsoid.cartesianToCartographic(p1, cartographicScratch1);\n        rhumbLine.setEndPoints(c0, c1);\n        intersectionCartographic = rhumbLine.findIntersectionWithLongitude(\n          intersectionLongitude,\n          cartographicIntersectionScratch\n        );\n        intersection = ellipsoid.cartographicToCartesian(\n          intersectionCartographic,\n          intersectionScratch\n        );\n        if (\n          defined(intersection) &&\n          !Cartesian3.equalsEpsilon(intersection, p0, CesiumMath.EPSILON7) &&\n          !Cartesian3.equalsEpsilon(intersection, p1, CesiumMath.EPSILON7)\n        ) {\n          splitPositions.push(Cartesian3.clone(intersection));\n        }\n      }\n    }\n    splitPositions.push(p1);\n  }\n\n  if (loop) {\n    p0 = positions[positionsLength - 1];\n    p1 = positions[0];\n    intersection = IntersectionTests.lineSegmentPlane(\n      p0,\n      p1,\n      XZ_PLANE,\n      intersectionScratch\n    );\n    if (\n      defined(intersection) &&\n      !Cartesian3.equalsEpsilon(intersection, p0, CesiumMath.EPSILON7) &&\n      !Cartesian3.equalsEpsilon(intersection, p1, CesiumMath.EPSILON7)\n    ) {\n      if (groundPolylineGeometry.arcType === ArcType.GEODESIC) {\n        splitPositions.push(Cartesian3.clone(intersection));\n      } else if (groundPolylineGeometry.arcType === ArcType.RHUMB) {\n        intersectionLongitude = ellipsoid.cartesianToCartographic(\n          intersection,\n          cartographicScratch0\n        ).longitude;\n        c0 = ellipsoid.cartesianToCartographic(p0, cartographicScratch0);\n        c1 = ellipsoid.cartesianToCartographic(p1, cartographicScratch1);\n        rhumbLine.setEndPoints(c0, c1);\n        intersectionCartographic = rhumbLine.findIntersectionWithLongitude(\n          intersectionLongitude,\n          cartographicIntersectionScratch\n        );\n        intersection = ellipsoid.cartographicToCartesian(\n          intersectionCartographic,\n          intersectionScratch\n        );\n        if (\n          defined(intersection) &&\n          !Cartesian3.equalsEpsilon(intersection, p0, CesiumMath.EPSILON7) &&\n          !Cartesian3.equalsEpsilon(intersection, p1, CesiumMath.EPSILON7)\n        ) {\n          splitPositions.push(Cartesian3.clone(intersection));\n        }\n      }\n    }\n  }\n  let cartographicsLength = splitPositions.length;\n\n  let cartographics = new Array(cartographicsLength);\n  for (i = 0; i < cartographicsLength; i++) {\n    const cartographic = Cartographic.fromCartesian(\n      splitPositions[i],\n      ellipsoid\n    );\n    cartographic.height = 0.0;\n    cartographics[i] = cartographic;\n  }\n\n  cartographics = arrayRemoveDuplicates(\n    cartographics,\n    Cartographic.equalsEpsilon\n  );\n  cartographicsLength = cartographics.length;\n\n  if (cartographicsLength < 2) {\n    return undefined;\n  }\n\n  /**** Build heap-side arrays for positions, interpolated cartographics, and normals from which to compute vertices ****/\n  // We build a \"wall\" and then decompose it into separately connected component \"volumes\" because we need a lot\n  // of information about the wall. Also, this simplifies interpolation.\n  // Convention: \"next\" and \"end\" are locally forward to each segment of the wall,\n  // and we are computing normals pointing towards the local right side of the vertices in each segment.\n  const cartographicsArray = [];\n  const normalsArray = [];\n  const bottomPositionsArray = [];\n  const topPositionsArray = [];\n\n  let previousBottom = previousBottomScratch;\n  let vertexBottom = vertexBottomScratch;\n  let vertexTop = vertexTopScratch;\n  let nextBottom = nextBottomScratch;\n  let vertexNormal = vertexNormalScratch;\n\n  // First point - either loop or attach a \"perpendicular\" normal\n  const startCartographic = cartographics[0];\n  const nextCartographic = cartographics[1];\n\n  const prestartCartographic = cartographics[cartographicsLength - 1];\n  previousBottom = getPosition(\n    ellipsoid,\n    prestartCartographic,\n    minHeight,\n    previousBottom\n  );\n  nextBottom = getPosition(ellipsoid, nextCartographic, minHeight, nextBottom);\n  vertexBottom = getPosition(\n    ellipsoid,\n    startCartographic,\n    minHeight,\n    vertexBottom\n  );\n  vertexTop = getPosition(ellipsoid, startCartographic, maxHeight, vertexTop);\n\n  if (loop) {\n    vertexNormal = computeVertexMiterNormal(\n      previousBottom,\n      vertexBottom,\n      vertexTop,\n      nextBottom,\n      vertexNormal\n    );\n  } else {\n    vertexNormal = computeRightNormal(\n      startCartographic,\n      nextCartographic,\n      maxHeight,\n      ellipsoid,\n      vertexNormal\n    );\n  }\n\n  Cartesian3.pack(vertexNormal, normalsArray, 0);\n  Cartesian3.pack(vertexBottom, bottomPositionsArray, 0);\n  Cartesian3.pack(vertexTop, topPositionsArray, 0);\n  cartographicsArray.push(startCartographic.latitude);\n  cartographicsArray.push(startCartographic.longitude);\n\n  interpolateSegment(\n    startCartographic,\n    nextCartographic,\n    minHeight,\n    maxHeight,\n    granularity,\n    arcType,\n    ellipsoid,\n    normalsArray,\n    bottomPositionsArray,\n    topPositionsArray,\n    cartographicsArray\n  );\n\n  // All inbetween points\n  for (i = 1; i < cartographicsLength - 1; ++i) {\n    previousBottom = Cartesian3.clone(vertexBottom, previousBottom);\n    vertexBottom = Cartesian3.clone(nextBottom, vertexBottom);\n    const vertexCartographic = cartographics[i];\n    getPosition(ellipsoid, vertexCartographic, maxHeight, vertexTop);\n    getPosition(ellipsoid, cartographics[i + 1], minHeight, nextBottom);\n\n    computeVertexMiterNormal(\n      previousBottom,\n      vertexBottom,\n      vertexTop,\n      nextBottom,\n      vertexNormal\n    );\n\n    index = normalsArray.length;\n    Cartesian3.pack(vertexNormal, normalsArray, index);\n    Cartesian3.pack(vertexBottom, bottomPositionsArray, index);\n    Cartesian3.pack(vertexTop, topPositionsArray, index);\n    cartographicsArray.push(vertexCartographic.latitude);\n    cartographicsArray.push(vertexCartographic.longitude);\n\n    interpolateSegment(\n      cartographics[i],\n      cartographics[i + 1],\n      minHeight,\n      maxHeight,\n      granularity,\n      arcType,\n      ellipsoid,\n      normalsArray,\n      bottomPositionsArray,\n      topPositionsArray,\n      cartographicsArray\n    );\n  }\n\n  // Last point - either loop or attach a normal \"perpendicular\" to the wall.\n  const endCartographic = cartographics[cartographicsLength - 1];\n  const preEndCartographic = cartographics[cartographicsLength - 2];\n\n  vertexBottom = getPosition(\n    ellipsoid,\n    endCartographic,\n    minHeight,\n    vertexBottom\n  );\n  vertexTop = getPosition(ellipsoid, endCartographic, maxHeight, vertexTop);\n\n  if (loop) {\n    const postEndCartographic = cartographics[0];\n    previousBottom = getPosition(\n      ellipsoid,\n      preEndCartographic,\n      minHeight,\n      previousBottom\n    );\n    nextBottom = getPosition(\n      ellipsoid,\n      postEndCartographic,\n      minHeight,\n      nextBottom\n    );\n\n    vertexNormal = computeVertexMiterNormal(\n      previousBottom,\n      vertexBottom,\n      vertexTop,\n      nextBottom,\n      vertexNormal\n    );\n  } else {\n    vertexNormal = computeRightNormal(\n      preEndCartographic,\n      endCartographic,\n      maxHeight,\n      ellipsoid,\n      vertexNormal\n    );\n  }\n\n  index = normalsArray.length;\n  Cartesian3.pack(vertexNormal, normalsArray, index);\n  Cartesian3.pack(vertexBottom, bottomPositionsArray, index);\n  Cartesian3.pack(vertexTop, topPositionsArray, index);\n  cartographicsArray.push(endCartographic.latitude);\n  cartographicsArray.push(endCartographic.longitude);\n\n  if (loop) {\n    interpolateSegment(\n      endCartographic,\n      startCartographic,\n      minHeight,\n      maxHeight,\n      granularity,\n      arcType,\n      ellipsoid,\n      normalsArray,\n      bottomPositionsArray,\n      topPositionsArray,\n      cartographicsArray\n    );\n    index = normalsArray.length;\n    for (i = 0; i < 3; ++i) {\n      normalsArray[index + i] = normalsArray[i];\n      bottomPositionsArray[index + i] = bottomPositionsArray[i];\n      topPositionsArray[index + i] = topPositionsArray[i];\n    }\n    cartographicsArray.push(startCartographic.latitude);\n    cartographicsArray.push(startCartographic.longitude);\n  }\n\n  return generateGeometryAttributes(\n    loop,\n    projection,\n    bottomPositionsArray,\n    topPositionsArray,\n    normalsArray,\n    cartographicsArray,\n    compute2dAttributes\n  );\n};\n\n// If the end normal angle is too steep compared to the direction of the line segment,\n// \"break\" the miter by rotating the normal 90 degrees around the \"up\" direction at the point\n// For ultra precision we would want to project into a plane, but in practice this is sufficient.\nconst lineDirectionScratch = new Cartesian3();\nconst matrix3Scratch = new Matrix3();\nconst quaternionScratch = new Quaternion();\nfunction breakMiter(endGeometryNormal, startBottom, endBottom, endTop) {\n  const lineDirection = direction(endBottom, startBottom, lineDirectionScratch);\n\n  const dot = Cartesian3.dot(lineDirection, endGeometryNormal);\n  if (dot > MITER_BREAK_SMALL || dot < MITER_BREAK_LARGE) {\n    const vertexUp = direction(endTop, endBottom, vertexUpScratch);\n    const angle =\n      dot < MITER_BREAK_LARGE\n        ? CesiumMath.PI_OVER_TWO\n        : -CesiumMath.PI_OVER_TWO;\n    const quaternion = Quaternion.fromAxisAngle(\n      vertexUp,\n      angle,\n      quaternionScratch\n    );\n    const rotationMatrix = Matrix3.fromQuaternion(quaternion, matrix3Scratch);\n    Matrix3.multiplyByVector(\n      rotationMatrix,\n      endGeometryNormal,\n      endGeometryNormal\n    );\n    return true;\n  }\n  return false;\n}\n\nconst endPosCartographicScratch = new Cartographic();\nconst normalStartpointScratch = new Cartesian3();\nconst normalEndpointScratch = new Cartesian3();\nfunction projectNormal(\n  projection,\n  cartographic,\n  normal,\n  projectedPosition,\n  result\n) {\n  const position = Cartographic.toCartesian(\n    cartographic,\n    projection._ellipsoid,\n    normalStartpointScratch\n  );\n  let normalEndpoint = Cartesian3.add(position, normal, normalEndpointScratch);\n  let flipNormal = false;\n\n  const ellipsoid = projection._ellipsoid;\n  let normalEndpointCartographic = ellipsoid.cartesianToCartographic(\n    normalEndpoint,\n    endPosCartographicScratch\n  );\n  // If normal crosses the IDL, go the other way and flip the result.\n  // In practice this almost never happens because the cartographic start\n  // and end points of each segment are \"nudged\" to be on the same side\n  // of the IDL and slightly away from the IDL.\n  if (\n    Math.abs(cartographic.longitude - normalEndpointCartographic.longitude) >\n    CesiumMath.PI_OVER_TWO\n  ) {\n    flipNormal = true;\n    normalEndpoint = Cartesian3.subtract(\n      position,\n      normal,\n      normalEndpointScratch\n    );\n    normalEndpointCartographic = ellipsoid.cartesianToCartographic(\n      normalEndpoint,\n      endPosCartographicScratch\n    );\n  }\n\n  normalEndpointCartographic.height = 0.0;\n  const normalEndpointProjected = projection.project(\n    normalEndpointCartographic,\n    result\n  );\n  result = Cartesian3.subtract(\n    normalEndpointProjected,\n    projectedPosition,\n    result\n  );\n  result.z = 0.0;\n  result = Cartesian3.normalize(result, result);\n  if (flipNormal) {\n    Cartesian3.negate(result, result);\n  }\n  return result;\n}\n\nconst adjustHeightNormalScratch = new Cartesian3();\nconst adjustHeightOffsetScratch = new Cartesian3();\nfunction adjustHeights(\n  bottom,\n  top,\n  minHeight,\n  maxHeight,\n  adjustHeightBottom,\n  adjustHeightTop\n) {\n  // bottom and top should be at WALL_INITIAL_MIN_HEIGHT and WALL_INITIAL_MAX_HEIGHT, respectively\n  const adjustHeightNormal = Cartesian3.subtract(\n    top,\n    bottom,\n    adjustHeightNormalScratch\n  );\n  Cartesian3.normalize(adjustHeightNormal, adjustHeightNormal);\n\n  const distanceForBottom = minHeight - WALL_INITIAL_MIN_HEIGHT;\n  let adjustHeightOffset = Cartesian3.multiplyByScalar(\n    adjustHeightNormal,\n    distanceForBottom,\n    adjustHeightOffsetScratch\n  );\n  Cartesian3.add(bottom, adjustHeightOffset, adjustHeightBottom);\n\n  const distanceForTop = maxHeight - WALL_INITIAL_MAX_HEIGHT;\n  adjustHeightOffset = Cartesian3.multiplyByScalar(\n    adjustHeightNormal,\n    distanceForTop,\n    adjustHeightOffsetScratch\n  );\n  Cartesian3.add(top, adjustHeightOffset, adjustHeightTop);\n}\n\nconst nudgeDirectionScratch = new Cartesian3();\nfunction nudgeXZ(start, end) {\n  const startToXZdistance = Plane.getPointDistance(XZ_PLANE, start);\n  const endToXZdistance = Plane.getPointDistance(XZ_PLANE, end);\n  let offset = nudgeDirectionScratch;\n  // Larger epsilon than what's used in GeometryPipeline, a centimeter in world space\n  if (CesiumMath.equalsEpsilon(startToXZdistance, 0.0, CesiumMath.EPSILON2)) {\n    offset = direction(end, start, offset);\n    Cartesian3.multiplyByScalar(offset, CesiumMath.EPSILON2, offset);\n    Cartesian3.add(start, offset, start);\n  } else if (\n    CesiumMath.equalsEpsilon(endToXZdistance, 0.0, CesiumMath.EPSILON2)\n  ) {\n    offset = direction(start, end, offset);\n    Cartesian3.multiplyByScalar(offset, CesiumMath.EPSILON2, offset);\n    Cartesian3.add(end, offset, end);\n  }\n}\n\n// \"Nudge\" cartographic coordinates so start and end are on the same side of the IDL.\n// Nudge amounts are tiny, basically just an IDL flip.\n// Only used for 2D/CV.\nfunction nudgeCartographic(start, end) {\n  const absStartLon = Math.abs(start.longitude);\n  const absEndLon = Math.abs(end.longitude);\n  if (\n    CesiumMath.equalsEpsilon(absStartLon, CesiumMath.PI, CesiumMath.EPSILON11)\n  ) {\n    const endSign = CesiumMath.sign(end.longitude);\n    start.longitude = endSign * (absStartLon - CesiumMath.EPSILON11);\n    return 1;\n  } else if (\n    CesiumMath.equalsEpsilon(absEndLon, CesiumMath.PI, CesiumMath.EPSILON11)\n  ) {\n    const startSign = CesiumMath.sign(start.longitude);\n    end.longitude = startSign * (absEndLon - CesiumMath.EPSILON11);\n    return 2;\n  }\n  return 0;\n}\n\nconst startCartographicScratch = new Cartographic();\nconst endCartographicScratch = new Cartographic();\n\nconst segmentStartTopScratch = new Cartesian3();\nconst segmentEndTopScratch = new Cartesian3();\nconst segmentStartBottomScratch = new Cartesian3();\nconst segmentEndBottomScratch = new Cartesian3();\nconst segmentStartNormalScratch = new Cartesian3();\nconst segmentEndNormalScratch = new Cartesian3();\n\nconst getHeightCartographics = [\n  startCartographicScratch,\n  endCartographicScratch,\n];\nconst getHeightRectangleScratch = new Rectangle();\n\nconst adjustHeightStartTopScratch = new Cartesian3();\nconst adjustHeightEndTopScratch = new Cartesian3();\nconst adjustHeightStartBottomScratch = new Cartesian3();\nconst adjustHeightEndBottomScratch = new Cartesian3();\n\nconst segmentStart2DScratch = new Cartesian3();\nconst segmentEnd2DScratch = new Cartesian3();\nconst segmentStartNormal2DScratch = new Cartesian3();\nconst segmentEndNormal2DScratch = new Cartesian3();\n\nconst offsetScratch = new Cartesian3();\nconst startUpScratch = new Cartesian3();\nconst endUpScratch = new Cartesian3();\nconst rightScratch = new Cartesian3();\nconst startPlaneNormalScratch = new Cartesian3();\nconst endPlaneNormalScratch = new Cartesian3();\nconst encodeScratch = new EncodedCartesian3();\n\nconst encodeScratch2D = new EncodedCartesian3();\nconst forwardOffset2DScratch = new Cartesian3();\nconst right2DScratch = new Cartesian3();\n\nconst normalNudgeScratch = new Cartesian3();\n\nconst scratchBoundingSpheres = [new BoundingSphere(), new BoundingSphere()];\n\n// Winding order is reversed so each segment's volume is inside-out\nconst REFERENCE_INDICES = [\n  0,\n  2,\n  1,\n  0,\n  3,\n  2, // right\n  0,\n  7,\n  3,\n  0,\n  4,\n  7, // start\n  0,\n  5,\n  4,\n  0,\n  1,\n  5, // bottom\n  5,\n  7,\n  4,\n  5,\n  6,\n  7, // left\n  5,\n  2,\n  6,\n  5,\n  1,\n  2, // end\n  3,\n  6,\n  2,\n  3,\n  7,\n  6, // top\n];\nconst REFERENCE_INDICES_LENGTH = REFERENCE_INDICES.length;\n\n// Decompose the \"wall\" into a series of shadow volumes.\n// Each shadow volume's vertices encode a description of the line it contains,\n// including mitering planes at the end points, a plane along the line itself,\n// and attributes for computing length-wise texture coordinates.\nfunction generateGeometryAttributes(\n  loop,\n  projection,\n  bottomPositionsArray,\n  topPositionsArray,\n  normalsArray,\n  cartographicsArray,\n  compute2dAttributes\n) {\n  let i;\n  let index;\n  const ellipsoid = projection._ellipsoid;\n\n  // Each segment will have 8 vertices\n  const segmentCount = bottomPositionsArray.length / 3 - 1;\n  const vertexCount = segmentCount * 8;\n  const arraySizeVec4 = vertexCount * 4;\n  const indexCount = segmentCount * 36;\n\n  const indices =\n    vertexCount > 65535\n      ? new Uint32Array(indexCount)\n      : new Uint16Array(indexCount);\n  const positionsArray = new Float64Array(vertexCount * 3);\n\n  const startHiAndForwardOffsetX = new Float32Array(arraySizeVec4);\n  const startLoAndForwardOffsetY = new Float32Array(arraySizeVec4);\n  const startNormalAndForwardOffsetZ = new Float32Array(arraySizeVec4);\n  const endNormalAndTextureCoordinateNormalizationX = new Float32Array(\n    arraySizeVec4\n  );\n  const rightNormalAndTextureCoordinateNormalizationY = new Float32Array(\n    arraySizeVec4\n  );\n\n  let startHiLo2D;\n  let offsetAndRight2D;\n  let startEndNormals2D;\n  let texcoordNormalization2D;\n\n  if (compute2dAttributes) {\n    startHiLo2D = new Float32Array(arraySizeVec4);\n    offsetAndRight2D = new Float32Array(arraySizeVec4);\n    startEndNormals2D = new Float32Array(arraySizeVec4);\n    texcoordNormalization2D = new Float32Array(vertexCount * 2);\n  }\n\n  /*** Compute total lengths for texture coordinate normalization ***/\n  // 2D\n  const cartographicsLength = cartographicsArray.length / 2;\n  let length2D = 0.0;\n\n  const startCartographic = startCartographicScratch;\n  startCartographic.height = 0.0;\n  const endCartographic = endCartographicScratch;\n  endCartographic.height = 0.0;\n\n  let segmentStartCartesian = segmentStartTopScratch;\n  let segmentEndCartesian = segmentEndTopScratch;\n\n  if (compute2dAttributes) {\n    index = 0;\n    for (i = 1; i < cartographicsLength; i++) {\n      // Don't clone anything from previous segment b/c possible IDL touch\n      startCartographic.latitude = cartographicsArray[index];\n      startCartographic.longitude = cartographicsArray[index + 1];\n      endCartographic.latitude = cartographicsArray[index + 2];\n      endCartographic.longitude = cartographicsArray[index + 3];\n\n      segmentStartCartesian = projection.project(\n        startCartographic,\n        segmentStartCartesian\n      );\n      segmentEndCartesian = projection.project(\n        endCartographic,\n        segmentEndCartesian\n      );\n      length2D += Cartesian3.distance(\n        segmentStartCartesian,\n        segmentEndCartesian\n      );\n      index += 2;\n    }\n  }\n\n  // 3D\n  const positionsLength = topPositionsArray.length / 3;\n  segmentEndCartesian = Cartesian3.unpack(\n    topPositionsArray,\n    0,\n    segmentEndCartesian\n  );\n  let length3D = 0.0;\n\n  index = 3;\n  for (i = 1; i < positionsLength; i++) {\n    segmentStartCartesian = Cartesian3.clone(\n      segmentEndCartesian,\n      segmentStartCartesian\n    );\n    segmentEndCartesian = Cartesian3.unpack(\n      topPositionsArray,\n      index,\n      segmentEndCartesian\n    );\n    length3D += Cartesian3.distance(segmentStartCartesian, segmentEndCartesian);\n    index += 3;\n  }\n\n  /*** Generate segments ***/\n  let j;\n  index = 3;\n  let cartographicsIndex = 0;\n  let vec2sWriteIndex = 0;\n  let vec3sWriteIndex = 0;\n  let vec4sWriteIndex = 0;\n  let miterBroken = false;\n\n  let endBottom = Cartesian3.unpack(\n    bottomPositionsArray,\n    0,\n    segmentEndBottomScratch\n  );\n  let endTop = Cartesian3.unpack(topPositionsArray, 0, segmentEndTopScratch);\n  let endGeometryNormal = Cartesian3.unpack(\n    normalsArray,\n    0,\n    segmentEndNormalScratch\n  );\n\n  if (loop) {\n    const preEndBottom = Cartesian3.unpack(\n      bottomPositionsArray,\n      bottomPositionsArray.length - 6,\n      segmentStartBottomScratch\n    );\n    if (breakMiter(endGeometryNormal, preEndBottom, endBottom, endTop)) {\n      // Miter broken as if for the last point in the loop, needs to be inverted for first point (clone of endBottom)\n      endGeometryNormal = Cartesian3.negate(\n        endGeometryNormal,\n        endGeometryNormal\n      );\n    }\n  }\n\n  let lengthSoFar3D = 0.0;\n  let lengthSoFar2D = 0.0;\n\n  // For translating bounding volume\n  let sumHeights = 0.0;\n\n  for (i = 0; i < segmentCount; i++) {\n    const startBottom = Cartesian3.clone(endBottom, segmentStartBottomScratch);\n    const startTop = Cartesian3.clone(endTop, segmentStartTopScratch);\n    let startGeometryNormal = Cartesian3.clone(\n      endGeometryNormal,\n      segmentStartNormalScratch\n    );\n\n    if (miterBroken) {\n      startGeometryNormal = Cartesian3.negate(\n        startGeometryNormal,\n        startGeometryNormal\n      );\n    }\n\n    endBottom = Cartesian3.unpack(\n      bottomPositionsArray,\n      index,\n      segmentEndBottomScratch\n    );\n    endTop = Cartesian3.unpack(topPositionsArray, index, segmentEndTopScratch);\n    endGeometryNormal = Cartesian3.unpack(\n      normalsArray,\n      index,\n      segmentEndNormalScratch\n    );\n\n    miterBroken = breakMiter(endGeometryNormal, startBottom, endBottom, endTop);\n\n    // 2D - don't clone anything from previous segment b/c possible IDL touch\n    startCartographic.latitude = cartographicsArray[cartographicsIndex];\n    startCartographic.longitude = cartographicsArray[cartographicsIndex + 1];\n    endCartographic.latitude = cartographicsArray[cartographicsIndex + 2];\n    endCartographic.longitude = cartographicsArray[cartographicsIndex + 3];\n    let start2D;\n    let end2D;\n    let startGeometryNormal2D;\n    let endGeometryNormal2D;\n\n    if (compute2dAttributes) {\n      const nudgeResult = nudgeCartographic(startCartographic, endCartographic);\n      start2D = projection.project(startCartographic, segmentStart2DScratch);\n      end2D = projection.project(endCartographic, segmentEnd2DScratch);\n      const direction2D = direction(end2D, start2D, forwardOffset2DScratch);\n      direction2D.y = Math.abs(direction2D.y);\n\n      startGeometryNormal2D = segmentStartNormal2DScratch;\n      endGeometryNormal2D = segmentEndNormal2DScratch;\n      if (\n        nudgeResult === 0 ||\n        Cartesian3.dot(direction2D, Cartesian3.UNIT_Y) > MITER_BREAK_SMALL\n      ) {\n        // No nudge - project the original normal\n        // Or, if the line's angle relative to the IDL is very acute,\n        // in which case snapping will produce oddly shaped volumes.\n        startGeometryNormal2D = projectNormal(\n          projection,\n          startCartographic,\n          startGeometryNormal,\n          start2D,\n          segmentStartNormal2DScratch\n        );\n        endGeometryNormal2D = projectNormal(\n          projection,\n          endCartographic,\n          endGeometryNormal,\n          end2D,\n          segmentEndNormal2DScratch\n        );\n      } else if (nudgeResult === 1) {\n        // Start is close to IDL - snap start normal to align with IDL\n        endGeometryNormal2D = projectNormal(\n          projection,\n          endCartographic,\n          endGeometryNormal,\n          end2D,\n          segmentEndNormal2DScratch\n        );\n        startGeometryNormal2D.x = 0.0;\n        // If start longitude is negative and end longitude is less negative, relative right is unit -Y\n        // If start longitude is positive and end longitude is less positive, relative right is unit +Y\n        startGeometryNormal2D.y = CesiumMath.sign(\n          startCartographic.longitude - Math.abs(endCartographic.longitude)\n        );\n        startGeometryNormal2D.z = 0.0;\n      } else {\n        // End is close to IDL - snap end normal to align with IDL\n        startGeometryNormal2D = projectNormal(\n          projection,\n          startCartographic,\n          startGeometryNormal,\n          start2D,\n          segmentStartNormal2DScratch\n        );\n        endGeometryNormal2D.x = 0.0;\n        // If end longitude is negative and start longitude is less negative, relative right is unit Y\n        // If end longitude is positive and start longitude is less positive, relative right is unit -Y\n        endGeometryNormal2D.y = CesiumMath.sign(\n          startCartographic.longitude - endCartographic.longitude\n        );\n        endGeometryNormal2D.z = 0.0;\n      }\n    }\n\n    /****************************************\n     * Geometry descriptors of a \"line on terrain,\"\n     * as opposed to the \"shadow volume used to draw\n     * the line on terrain\":\n     * - position of start + offset to end\n     * - start, end, and right-facing planes\n     * - encoded texture coordinate offsets\n     ****************************************/\n\n    /* 3D */\n    const segmentLength3D = Cartesian3.distance(startTop, endTop);\n\n    const encodedStart = EncodedCartesian3.fromCartesian(\n      startBottom,\n      encodeScratch\n    );\n    const forwardOffset = Cartesian3.subtract(\n      endBottom,\n      startBottom,\n      offsetScratch\n    );\n    const forward = Cartesian3.normalize(forwardOffset, rightScratch);\n\n    let startUp = Cartesian3.subtract(startTop, startBottom, startUpScratch);\n    startUp = Cartesian3.normalize(startUp, startUp);\n    let rightNormal = Cartesian3.cross(forward, startUp, rightScratch);\n    rightNormal = Cartesian3.normalize(rightNormal, rightNormal);\n\n    let startPlaneNormal = Cartesian3.cross(\n      startUp,\n      startGeometryNormal,\n      startPlaneNormalScratch\n    );\n    startPlaneNormal = Cartesian3.normalize(startPlaneNormal, startPlaneNormal);\n\n    let endUp = Cartesian3.subtract(endTop, endBottom, endUpScratch);\n    endUp = Cartesian3.normalize(endUp, endUp);\n    let endPlaneNormal = Cartesian3.cross(\n      endGeometryNormal,\n      endUp,\n      endPlaneNormalScratch\n    );\n    endPlaneNormal = Cartesian3.normalize(endPlaneNormal, endPlaneNormal);\n\n    const texcoordNormalization3DX = segmentLength3D / length3D;\n    const texcoordNormalization3DY = lengthSoFar3D / length3D;\n\n    /* 2D */\n    let segmentLength2D = 0.0;\n    let encodedStart2D;\n    let forwardOffset2D;\n    let right2D;\n    let texcoordNormalization2DX = 0.0;\n    let texcoordNormalization2DY = 0.0;\n    if (compute2dAttributes) {\n      segmentLength2D = Cartesian3.distance(start2D, end2D);\n\n      encodedStart2D = EncodedCartesian3.fromCartesian(\n        start2D,\n        encodeScratch2D\n      );\n      forwardOffset2D = Cartesian3.subtract(\n        end2D,\n        start2D,\n        forwardOffset2DScratch\n      );\n\n      // Right direction is just forward direction rotated by -90 degrees around Z\n      // Similarly with plane normals\n      right2D = Cartesian3.normalize(forwardOffset2D, right2DScratch);\n      const swap = right2D.x;\n      right2D.x = right2D.y;\n      right2D.y = -swap;\n\n      texcoordNormalization2DX = segmentLength2D / length2D;\n      texcoordNormalization2DY = lengthSoFar2D / length2D;\n    }\n    /** Pack **/\n    for (j = 0; j < 8; j++) {\n      const vec4Index = vec4sWriteIndex + j * 4;\n      const vec2Index = vec2sWriteIndex + j * 2;\n      const wIndex = vec4Index + 3;\n\n      // Encode sidedness of vertex relative to right plane in texture coordinate normalization X,\n      // whether vertex is top or bottom of volume in sign/magnitude of normalization Y.\n      const rightPlaneSide = j < 4 ? 1.0 : -1.0;\n      const topBottomSide =\n        j === 2 || j === 3 || j === 6 || j === 7 ? 1.0 : -1.0;\n\n      // 3D\n      Cartesian3.pack(encodedStart.high, startHiAndForwardOffsetX, vec4Index);\n      startHiAndForwardOffsetX[wIndex] = forwardOffset.x;\n\n      Cartesian3.pack(encodedStart.low, startLoAndForwardOffsetY, vec4Index);\n      startLoAndForwardOffsetY[wIndex] = forwardOffset.y;\n\n      Cartesian3.pack(\n        startPlaneNormal,\n        startNormalAndForwardOffsetZ,\n        vec4Index\n      );\n      startNormalAndForwardOffsetZ[wIndex] = forwardOffset.z;\n\n      Cartesian3.pack(\n        endPlaneNormal,\n        endNormalAndTextureCoordinateNormalizationX,\n        vec4Index\n      );\n      endNormalAndTextureCoordinateNormalizationX[wIndex] =\n        texcoordNormalization3DX * rightPlaneSide;\n\n      Cartesian3.pack(\n        rightNormal,\n        rightNormalAndTextureCoordinateNormalizationY,\n        vec4Index\n      );\n\n      let texcoordNormalization = texcoordNormalization3DY * topBottomSide;\n      if (texcoordNormalization === 0.0 && topBottomSide < 0.0) {\n        texcoordNormalization = 9.0; // some value greater than 1.0\n      }\n      rightNormalAndTextureCoordinateNormalizationY[\n        wIndex\n      ] = texcoordNormalization;\n\n      // 2D\n      if (compute2dAttributes) {\n        startHiLo2D[vec4Index] = encodedStart2D.high.x;\n        startHiLo2D[vec4Index + 1] = encodedStart2D.high.y;\n        startHiLo2D[vec4Index + 2] = encodedStart2D.low.x;\n        startHiLo2D[vec4Index + 3] = encodedStart2D.low.y;\n\n        startEndNormals2D[vec4Index] = -startGeometryNormal2D.y;\n        startEndNormals2D[vec4Index + 1] = startGeometryNormal2D.x;\n        startEndNormals2D[vec4Index + 2] = endGeometryNormal2D.y;\n        startEndNormals2D[vec4Index + 3] = -endGeometryNormal2D.x;\n\n        offsetAndRight2D[vec4Index] = forwardOffset2D.x;\n        offsetAndRight2D[vec4Index + 1] = forwardOffset2D.y;\n        offsetAndRight2D[vec4Index + 2] = right2D.x;\n        offsetAndRight2D[vec4Index + 3] = right2D.y;\n\n        texcoordNormalization2D[vec2Index] =\n          texcoordNormalization2DX * rightPlaneSide;\n\n        texcoordNormalization = texcoordNormalization2DY * topBottomSide;\n        if (texcoordNormalization === 0.0 && topBottomSide < 0.0) {\n          texcoordNormalization = 9.0; // some value greater than 1.0\n        }\n        texcoordNormalization2D[vec2Index + 1] = texcoordNormalization;\n      }\n    }\n\n    // Adjust height of volume in 3D\n    const adjustHeightStartBottom = adjustHeightStartBottomScratch;\n    const adjustHeightEndBottom = adjustHeightEndBottomScratch;\n    const adjustHeightStartTop = adjustHeightStartTopScratch;\n    const adjustHeightEndTop = adjustHeightEndTopScratch;\n\n    const getHeightsRectangle = Rectangle.fromCartographicArray(\n      getHeightCartographics,\n      getHeightRectangleScratch\n    );\n    const minMaxHeights = ApproximateTerrainHeights.getMinimumMaximumHeights(\n      getHeightsRectangle,\n      ellipsoid\n    );\n    const minHeight = minMaxHeights.minimumTerrainHeight;\n    const maxHeight = minMaxHeights.maximumTerrainHeight;\n\n    // Sum using abs() to properly account for negative eleavtions in calculating bounding sphere radius\n    sumHeights += Math.abs(minHeight);\n    sumHeights += Math.abs(maxHeight);\n\n    adjustHeights(\n      startBottom,\n      startTop,\n      minHeight,\n      maxHeight,\n      adjustHeightStartBottom,\n      adjustHeightStartTop\n    );\n    adjustHeights(\n      endBottom,\n      endTop,\n      minHeight,\n      maxHeight,\n      adjustHeightEndBottom,\n      adjustHeightEndTop\n    );\n\n    // Nudge the positions away from the \"polyline\" a little bit to prevent errors in GeometryPipeline\n    let normalNudge = Cartesian3.multiplyByScalar(\n      rightNormal,\n      CesiumMath.EPSILON5,\n      normalNudgeScratch\n    );\n    Cartesian3.add(\n      adjustHeightStartBottom,\n      normalNudge,\n      adjustHeightStartBottom\n    );\n    Cartesian3.add(adjustHeightEndBottom, normalNudge, adjustHeightEndBottom);\n    Cartesian3.add(adjustHeightStartTop, normalNudge, adjustHeightStartTop);\n    Cartesian3.add(adjustHeightEndTop, normalNudge, adjustHeightEndTop);\n\n    // If the segment is very close to the XZ plane, nudge the vertices slightly to avoid touching it.\n    nudgeXZ(adjustHeightStartBottom, adjustHeightEndBottom);\n    nudgeXZ(adjustHeightStartTop, adjustHeightEndTop);\n\n    Cartesian3.pack(adjustHeightStartBottom, positionsArray, vec3sWriteIndex);\n    Cartesian3.pack(adjustHeightEndBottom, positionsArray, vec3sWriteIndex + 3);\n    Cartesian3.pack(adjustHeightEndTop, positionsArray, vec3sWriteIndex + 6);\n    Cartesian3.pack(adjustHeightStartTop, positionsArray, vec3sWriteIndex + 9);\n\n    normalNudge = Cartesian3.multiplyByScalar(\n      rightNormal,\n      -2.0 * CesiumMath.EPSILON5,\n      normalNudgeScratch\n    );\n    Cartesian3.add(\n      adjustHeightStartBottom,\n      normalNudge,\n      adjustHeightStartBottom\n    );\n    Cartesian3.add(adjustHeightEndBottom, normalNudge, adjustHeightEndBottom);\n    Cartesian3.add(adjustHeightStartTop, normalNudge, adjustHeightStartTop);\n    Cartesian3.add(adjustHeightEndTop, normalNudge, adjustHeightEndTop);\n\n    nudgeXZ(adjustHeightStartBottom, adjustHeightEndBottom);\n    nudgeXZ(adjustHeightStartTop, adjustHeightEndTop);\n\n    Cartesian3.pack(\n      adjustHeightStartBottom,\n      positionsArray,\n      vec3sWriteIndex + 12\n    );\n    Cartesian3.pack(\n      adjustHeightEndBottom,\n      positionsArray,\n      vec3sWriteIndex + 15\n    );\n    Cartesian3.pack(adjustHeightEndTop, positionsArray, vec3sWriteIndex + 18);\n    Cartesian3.pack(adjustHeightStartTop, positionsArray, vec3sWriteIndex + 21);\n\n    cartographicsIndex += 2;\n    index += 3;\n\n    vec2sWriteIndex += 16;\n    vec3sWriteIndex += 24;\n    vec4sWriteIndex += 32;\n\n    lengthSoFar3D += segmentLength3D;\n    lengthSoFar2D += segmentLength2D;\n  }\n\n  index = 0;\n  let indexOffset = 0;\n  for (i = 0; i < segmentCount; i++) {\n    for (j = 0; j < REFERENCE_INDICES_LENGTH; j++) {\n      indices[index + j] = REFERENCE_INDICES[j] + indexOffset;\n    }\n    indexOffset += 8;\n    index += REFERENCE_INDICES_LENGTH;\n  }\n\n  const boundingSpheres = scratchBoundingSpheres;\n  BoundingSphere.fromVertices(\n    bottomPositionsArray,\n    Cartesian3.ZERO,\n    3,\n    boundingSpheres[0]\n  );\n  BoundingSphere.fromVertices(\n    topPositionsArray,\n    Cartesian3.ZERO,\n    3,\n    boundingSpheres[1]\n  );\n  const boundingSphere = BoundingSphere.fromBoundingSpheres(boundingSpheres);\n\n  // Adjust bounding sphere height and radius to cover more of the volume\n  boundingSphere.radius += sumHeights / (segmentCount * 2.0);\n\n  const attributes = {\n    position: new GeometryAttribute({\n      componentDatatype: ComponentDatatype.DOUBLE,\n      componentsPerAttribute: 3,\n      normalize: false,\n      values: positionsArray,\n    }),\n    startHiAndForwardOffsetX: getVec4GeometryAttribute(\n      startHiAndForwardOffsetX\n    ),\n    startLoAndForwardOffsetY: getVec4GeometryAttribute(\n      startLoAndForwardOffsetY\n    ),\n    startNormalAndForwardOffsetZ: getVec4GeometryAttribute(\n      startNormalAndForwardOffsetZ\n    ),\n    endNormalAndTextureCoordinateNormalizationX: getVec4GeometryAttribute(\n      endNormalAndTextureCoordinateNormalizationX\n    ),\n    rightNormalAndTextureCoordinateNormalizationY: getVec4GeometryAttribute(\n      rightNormalAndTextureCoordinateNormalizationY\n    ),\n  };\n\n  if (compute2dAttributes) {\n    attributes.startHiLo2D = getVec4GeometryAttribute(startHiLo2D);\n    attributes.offsetAndRight2D = getVec4GeometryAttribute(offsetAndRight2D);\n    attributes.startEndNormals2D = getVec4GeometryAttribute(startEndNormals2D);\n    attributes.texcoordNormalization2D = new GeometryAttribute({\n      componentDatatype: ComponentDatatype.FLOAT,\n      componentsPerAttribute: 2,\n      normalize: false,\n      values: texcoordNormalization2D,\n    });\n  }\n\n  return new Geometry({\n    attributes: attributes,\n    indices: indices,\n    boundingSphere: boundingSphere,\n  });\n}\n\nfunction getVec4GeometryAttribute(typedArray) {\n  return new GeometryAttribute({\n    componentDatatype: ComponentDatatype.FLOAT,\n    componentsPerAttribute: 4,\n    normalize: false,\n    values: typedArray,\n  });\n}\n\n/**\n * Approximates an ellipsoid-tangent vector in 2D by projecting the end point into 2D.\n * Exposed for testing.\n *\n * @param {MapProjection} projection Map Projection for projecting coordinates to 2D.\n * @param {Cartographic} cartographic The cartographic origin point of the normal.\n *   Used to check if the normal crosses the IDL during projection.\n * @param {Cartesian3} normal The normal in 3D.\n * @param {Cartesian3} projectedPosition The projected origin point of the normal in 2D.\n * @param {Cartesian3} result Result parameter on which to store the projected normal.\n * @private\n */\nGroundPolylineGeometry._projectNormal = projectNormal;\nexport default GroundPolylineGeometry;\n","//This file is automatically rebuilt by the Cesium build process.\nexport default \"in vec4 v_startPlaneNormalEcAndHalfWidth;\\n\\\nin vec4 v_endPlaneNormalEcAndBatchId;\\n\\\nin vec4 v_rightPlaneEC; // Technically can compute distance for this here\\n\\\nin vec4 v_endEcAndStartEcX;\\n\\\nin vec4 v_texcoordNormalizationAndStartEcYZ;\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\nin vec4 v_color;\\n\\\n#endif\\n\\\n\\n\\\nvoid main(void)\\n\\\n{\\n\\\n    float logDepthOrDepth = czm_branchFreeTernary(czm_sceneMode == czm_sceneMode2D, gl_FragCoord.z, czm_unpackDepth(texture(czm_globeDepthTexture, gl_FragCoord.xy / czm_viewport.zw)));\\n\\\n    vec3 ecStart = vec3(v_endEcAndStartEcX.w, v_texcoordNormalizationAndStartEcYZ.zw);\\n\\\n\\n\\\n    // Discard for sky\\n\\\n    if (logDepthOrDepth == 0.0) {\\n\\\n#ifdef DEBUG_SHOW_VOLUME\\n\\\n        out_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\\n\\\n        return;\\n\\\n#else // DEBUG_SHOW_VOLUME\\n\\\n        discard;\\n\\\n#endif // DEBUG_SHOW_VOLUME\\n\\\n    }\\n\\\n\\n\\\n    vec4 eyeCoordinate = czm_windowToEyeCoordinates(gl_FragCoord.xy, logDepthOrDepth);\\n\\\n    eyeCoordinate /= eyeCoordinate.w;\\n\\\n\\n\\\n    float halfMaxWidth = v_startPlaneNormalEcAndHalfWidth.w * czm_metersPerPixel(eyeCoordinate);\\n\\\n    // Check distance of the eye coordinate against the right-facing plane\\n\\\n    float widthwiseDistance = czm_planeDistance(v_rightPlaneEC, eyeCoordinate.xyz);\\n\\\n\\n\\\n    // Check eye coordinate against the mitering planes\\n\\\n    float distanceFromStart = czm_planeDistance(v_startPlaneNormalEcAndHalfWidth.xyz, -dot(ecStart, v_startPlaneNormalEcAndHalfWidth.xyz), eyeCoordinate.xyz);\\n\\\n    float distanceFromEnd = czm_planeDistance(v_endPlaneNormalEcAndBatchId.xyz, -dot(v_endEcAndStartEcX.xyz, v_endPlaneNormalEcAndBatchId.xyz), eyeCoordinate.xyz);\\n\\\n\\n\\\n    if (abs(widthwiseDistance) > halfMaxWidth || distanceFromStart < 0.0 || distanceFromEnd < 0.0) {\\n\\\n#ifdef DEBUG_SHOW_VOLUME\\n\\\n        out_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\\n\\\n        return;\\n\\\n#else // DEBUG_SHOW_VOLUME\\n\\\n        discard;\\n\\\n#endif // DEBUG_SHOW_VOLUME\\n\\\n    }\\n\\\n\\n\\\n    // Check distance of the eye coordinate against start and end planes with normals in the right plane.\\n\\\n    // For computing unskewed lengthwise texture coordinate.\\n\\\n    // Can also be used for clipping extremely pointy miters, but in practice unnecessary because of miter breaking.\\n\\\n\\n\\\n    // aligned plane: cross the right plane normal with miter plane normal, then cross the result with right again to point it more \\\"forward\\\"\\n\\\n    vec3 alignedPlaneNormal;\\n\\\n\\n\\\n    // start aligned plane\\n\\\n    alignedPlaneNormal = cross(v_rightPlaneEC.xyz, v_startPlaneNormalEcAndHalfWidth.xyz);\\n\\\n    alignedPlaneNormal = normalize(cross(alignedPlaneNormal, v_rightPlaneEC.xyz));\\n\\\n    distanceFromStart = czm_planeDistance(alignedPlaneNormal, -dot(alignedPlaneNormal, ecStart), eyeCoordinate.xyz);\\n\\\n\\n\\\n    // end aligned plane\\n\\\n    alignedPlaneNormal = cross(v_rightPlaneEC.xyz, v_endPlaneNormalEcAndBatchId.xyz);\\n\\\n    alignedPlaneNormal = normalize(cross(alignedPlaneNormal, v_rightPlaneEC.xyz));\\n\\\n    distanceFromEnd = czm_planeDistance(alignedPlaneNormal, -dot(alignedPlaneNormal, v_endEcAndStartEcX.xyz), eyeCoordinate.xyz);\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\n    out_FragColor = czm_gammaCorrect(v_color);\\n\\\n#else // PER_INSTANCE_COLOR\\n\\\n    // Clamp - distance to aligned planes may be negative due to mitering,\\n\\\n    // so fragment texture coordinate might be out-of-bounds.\\n\\\n    float s = clamp(distanceFromStart / (distanceFromStart + distanceFromEnd), 0.0, 1.0);\\n\\\n    s = (s * v_texcoordNormalizationAndStartEcYZ.x) + v_texcoordNormalizationAndStartEcYZ.y;\\n\\\n    float t = (widthwiseDistance + halfMaxWidth) / (2.0 * halfMaxWidth);\\n\\\n\\n\\\n    czm_materialInput materialInput;\\n\\\n\\n\\\n    materialInput.s = s;\\n\\\n    materialInput.st = vec2(s, t);\\n\\\n    materialInput.str = vec3(s, t, 0.0);\\n\\\n\\n\\\n    czm_material material = czm_getMaterial(materialInput);\\n\\\n    out_FragColor = vec4(material.diffuse + material.emission, material.alpha);\\n\\\n#endif // PER_INSTANCE_COLOR\\n\\\n\\n\\\n    // Premultiply alpha. Required for classification primitives on translucent globe.\\n\\\n    out_FragColor.rgb *= out_FragColor.a;\\n\\\n\\n\\\n    czm_writeDepthClamp();\\n\\\n}\\n\\\n\";\n","//This file is automatically rebuilt by the Cesium build process.\nexport default \"in vec3 v_forwardDirectionEC;\\n\\\nin vec3 v_texcoordNormalizationAndHalfWidth;\\n\\\nin float v_batchId;\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\nin vec4 v_color;\\n\\\n#else\\n\\\nin vec2 v_alignedPlaneDistances;\\n\\\nin float v_texcoordT;\\n\\\n#endif\\n\\\n\\n\\\nfloat rayPlaneDistanceUnsafe(vec3 origin, vec3 direction, vec3 planeNormal, float planeDistance) {\\n\\\n    // We don't expect the ray to ever be parallel to the plane\\n\\\n    return (-planeDistance - dot(planeNormal, origin)) / dot(planeNormal, direction);\\n\\\n}\\n\\\n\\n\\\nvoid main(void)\\n\\\n{\\n\\\n    vec4 eyeCoordinate = gl_FragCoord;\\n\\\n    eyeCoordinate /= eyeCoordinate.w;\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\n    out_FragColor = czm_gammaCorrect(v_color);\\n\\\n#else // PER_INSTANCE_COLOR\\n\\\n    // Use distances for planes aligned with segment to prevent skew in dashing\\n\\\n    float distanceFromStart = rayPlaneDistanceUnsafe(eyeCoordinate.xyz, -v_forwardDirectionEC, v_forwardDirectionEC.xyz, v_alignedPlaneDistances.x);\\n\\\n    float distanceFromEnd = rayPlaneDistanceUnsafe(eyeCoordinate.xyz, v_forwardDirectionEC, -v_forwardDirectionEC.xyz, v_alignedPlaneDistances.y);\\n\\\n\\n\\\n    // Clamp - distance to aligned planes may be negative due to mitering\\n\\\n    distanceFromStart = max(0.0, distanceFromStart);\\n\\\n    distanceFromEnd = max(0.0, distanceFromEnd);\\n\\\n\\n\\\n    float s = distanceFromStart / (distanceFromStart + distanceFromEnd);\\n\\\n    s = (s * v_texcoordNormalizationAndHalfWidth.x) + v_texcoordNormalizationAndHalfWidth.y;\\n\\\n\\n\\\n    czm_materialInput materialInput;\\n\\\n\\n\\\n    materialInput.s = s;\\n\\\n    materialInput.st = vec2(s, v_texcoordT);\\n\\\n    materialInput.str = vec3(s, v_texcoordT, 0.0);\\n\\\n\\n\\\n    czm_material material = czm_getMaterial(materialInput);\\n\\\n    out_FragColor = vec4(material.diffuse + material.emission, material.alpha);\\n\\\n#endif // PER_INSTANCE_COLOR\\n\\\n}\\n\\\n\";\n","//This file is automatically rebuilt by the Cesium build process.\nexport default \"in vec3 position3DHigh;\\n\\\nin vec3 position3DLow;\\n\\\n\\n\\\nin vec4 startHiAndForwardOffsetX;\\n\\\nin vec4 startLoAndForwardOffsetY;\\n\\\nin vec4 startNormalAndForwardOffsetZ;\\n\\\nin vec4 endNormalAndTextureCoordinateNormalizationX;\\n\\\nin vec4 rightNormalAndTextureCoordinateNormalizationY;\\n\\\nin vec4 startHiLo2D;\\n\\\nin vec4 offsetAndRight2D;\\n\\\nin vec4 startEndNormals2D;\\n\\\nin vec2 texcoordNormalization2D;\\n\\\n\\n\\\nin float batchId;\\n\\\n\\n\\\nout vec3 v_forwardDirectionEC;\\n\\\nout vec3 v_texcoordNormalizationAndHalfWidth;\\n\\\nout float v_batchId;\\n\\\n\\n\\\n// For materials\\n\\\n#ifdef WIDTH_VARYING\\n\\\nout float v_width;\\n\\\n#endif\\n\\\n#ifdef ANGLE_VARYING\\n\\\nout float v_polylineAngle;\\n\\\n#endif\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\nout vec4 v_color;\\n\\\n#else\\n\\\nout vec2 v_alignedPlaneDistances;\\n\\\nout float v_texcoordT;\\n\\\n#endif\\n\\\n\\n\\\n// Morphing planes using SLERP or NLERP doesn't seem to work, so instead draw the material directly on the shadow volume.\\n\\\n// Morph views are from very far away and aren't meant to be used precisely, so this should be sufficient.\\n\\\nvoid main()\\n\\\n{\\n\\\n    v_batchId = batchId;\\n\\\n\\n\\\n    // Start position\\n\\\n    vec4 posRelativeToEye2D = czm_translateRelativeToEye(vec3(0.0, startHiLo2D.xy), vec3(0.0, startHiLo2D.zw));\\n\\\n    vec4 posRelativeToEye3D = czm_translateRelativeToEye(startHiAndForwardOffsetX.xyz, startLoAndForwardOffsetY.xyz);\\n\\\n    vec4 posRelativeToEye = czm_columbusViewMorph(posRelativeToEye2D, posRelativeToEye3D, czm_morphTime);\\n\\\n    vec3 posEc2D = (czm_modelViewRelativeToEye * posRelativeToEye2D).xyz;\\n\\\n    vec3 posEc3D = (czm_modelViewRelativeToEye * posRelativeToEye3D).xyz;\\n\\\n    vec3 startEC = (czm_modelViewRelativeToEye * posRelativeToEye).xyz;\\n\\\n\\n\\\n    // Start plane\\n\\\n    vec4 startPlane2D;\\n\\\n    vec4 startPlane3D;\\n\\\n    startPlane2D.xyz = czm_normal * vec3(0.0, startEndNormals2D.xy);\\n\\\n    startPlane3D.xyz = czm_normal * startNormalAndForwardOffsetZ.xyz;\\n\\\n    startPlane2D.w = -dot(startPlane2D.xyz, posEc2D);\\n\\\n    startPlane3D.w = -dot(startPlane3D.xyz, posEc3D);\\n\\\n\\n\\\n    // Right plane\\n\\\n    vec4 rightPlane2D;\\n\\\n    vec4 rightPlane3D;\\n\\\n    rightPlane2D.xyz = czm_normal * vec3(0.0, offsetAndRight2D.zw);\\n\\\n    rightPlane3D.xyz = czm_normal * rightNormalAndTextureCoordinateNormalizationY.xyz;\\n\\\n    rightPlane2D.w = -dot(rightPlane2D.xyz, posEc2D);\\n\\\n    rightPlane3D.w = -dot(rightPlane3D.xyz, posEc3D);\\n\\\n\\n\\\n    // End position\\n\\\n    posRelativeToEye2D = posRelativeToEye2D + vec4(0.0, offsetAndRight2D.xy, 0.0);\\n\\\n    posRelativeToEye3D = posRelativeToEye3D + vec4(startHiAndForwardOffsetX.w, startLoAndForwardOffsetY.w, startNormalAndForwardOffsetZ.w, 0.0);\\n\\\n    posRelativeToEye = czm_columbusViewMorph(posRelativeToEye2D, posRelativeToEye3D, czm_morphTime);\\n\\\n    posEc2D = (czm_modelViewRelativeToEye * posRelativeToEye2D).xyz;\\n\\\n    posEc3D = (czm_modelViewRelativeToEye * posRelativeToEye3D).xyz;\\n\\\n    vec3 endEC = (czm_modelViewRelativeToEye * posRelativeToEye).xyz;\\n\\\n    vec3 forwardEc3D = czm_normal * normalize(vec3(startHiAndForwardOffsetX.w, startLoAndForwardOffsetY.w, startNormalAndForwardOffsetZ.w));\\n\\\n    vec3 forwardEc2D = czm_normal * normalize(vec3(0.0, offsetAndRight2D.xy));\\n\\\n\\n\\\n    // End plane\\n\\\n    vec4 endPlane2D;\\n\\\n    vec4 endPlane3D;\\n\\\n    endPlane2D.xyz = czm_normal * vec3(0.0, startEndNormals2D.zw);\\n\\\n    endPlane3D.xyz = czm_normal * endNormalAndTextureCoordinateNormalizationX.xyz;\\n\\\n    endPlane2D.w = -dot(endPlane2D.xyz, posEc2D);\\n\\\n    endPlane3D.w = -dot(endPlane3D.xyz, posEc3D);\\n\\\n\\n\\\n    // Forward direction\\n\\\n    v_forwardDirectionEC = normalize(endEC - startEC);\\n\\\n\\n\\\n    vec2 cleanTexcoordNormalization2D;\\n\\\n    cleanTexcoordNormalization2D.x = abs(texcoordNormalization2D.x);\\n\\\n    cleanTexcoordNormalization2D.y = czm_branchFreeTernary(texcoordNormalization2D.y > 1.0, 0.0, abs(texcoordNormalization2D.y));\\n\\\n    vec2 cleanTexcoordNormalization3D;\\n\\\n    cleanTexcoordNormalization3D.x = abs(endNormalAndTextureCoordinateNormalizationX.w);\\n\\\n    cleanTexcoordNormalization3D.y = rightNormalAndTextureCoordinateNormalizationY.w;\\n\\\n    cleanTexcoordNormalization3D.y = czm_branchFreeTernary(cleanTexcoordNormalization3D.y > 1.0, 0.0, abs(cleanTexcoordNormalization3D.y));\\n\\\n\\n\\\n    v_texcoordNormalizationAndHalfWidth.xy = mix(cleanTexcoordNormalization2D, cleanTexcoordNormalization3D, czm_morphTime);\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\n    v_color = czm_batchTable_color(batchId);\\n\\\n#else // PER_INSTANCE_COLOR\\n\\\n    // For computing texture coordinates\\n\\\n\\n\\\n    v_alignedPlaneDistances.x = -dot(v_forwardDirectionEC, startEC);\\n\\\n    v_alignedPlaneDistances.y = -dot(-v_forwardDirectionEC, endEC);\\n\\\n#endif // PER_INSTANCE_COLOR\\n\\\n\\n\\\n#ifdef WIDTH_VARYING\\n\\\n    float width = czm_batchTable_width(batchId);\\n\\\n    float halfWidth = width * 0.5;\\n\\\n    v_width = width;\\n\\\n    v_texcoordNormalizationAndHalfWidth.z = halfWidth;\\n\\\n#else\\n\\\n    float halfWidth = 0.5 * czm_batchTable_width(batchId);\\n\\\n    v_texcoordNormalizationAndHalfWidth.z = halfWidth;\\n\\\n#endif\\n\\\n\\n\\\n    // Compute a normal along which to \\\"push\\\" the position out, extending the miter depending on view distance.\\n\\\n    // Position has already been \\\"pushed\\\" by unit length along miter normal, and miter normals are encoded in the planes.\\n\\\n    // Decode the normal to use at this specific vertex, push the position back, and then push to where it needs to be.\\n\\\n    // Since this is morphing, compute both 3D and 2D positions and then blend.\\n\\\n\\n\\\n    // ****** 3D ******\\n\\\n    // Check distance to the end plane and start plane, pick the plane that is closer\\n\\\n    vec4 positionEc3D = czm_modelViewRelativeToEye * czm_translateRelativeToEye(position3DHigh, position3DLow); // w = 1.0, see czm_computePosition\\n\\\n    float absStartPlaneDistance = abs(czm_planeDistance(startPlane3D, positionEc3D.xyz));\\n\\\n    float absEndPlaneDistance = abs(czm_planeDistance(endPlane3D, positionEc3D.xyz));\\n\\\n    vec3 planeDirection = czm_branchFreeTernary(absStartPlaneDistance < absEndPlaneDistance, startPlane3D.xyz, endPlane3D.xyz);\\n\\\n    vec3 upOrDown = normalize(cross(rightPlane3D.xyz, planeDirection)); // Points \\\"up\\\" for start plane, \\\"down\\\" at end plane.\\n\\\n    vec3 normalEC = normalize(cross(planeDirection, upOrDown));         // In practice, the opposite seems to work too.\\n\\\n\\n\\\n    // Nudge the top vertex upwards to prevent flickering\\n\\\n    vec3 geodeticSurfaceNormal = normalize(cross(normalEC, forwardEc3D));\\n\\\n    geodeticSurfaceNormal *= float(0.0 <= rightNormalAndTextureCoordinateNormalizationY.w && rightNormalAndTextureCoordinateNormalizationY.w <= 1.0);\\n\\\n    geodeticSurfaceNormal *= MAX_TERRAIN_HEIGHT;\\n\\\n    positionEc3D.xyz += geodeticSurfaceNormal;\\n\\\n\\n\\\n    // Determine if this vertex is on the \\\"left\\\" or \\\"right\\\"\\n\\\n    normalEC *= sign(endNormalAndTextureCoordinateNormalizationX.w);\\n\\\n\\n\\\n    // A \\\"perfect\\\" implementation would push along normals according to the angle against forward.\\n\\\n    // In practice, just pushing the normal out by halfWidth is sufficient for morph views.\\n\\\n    positionEc3D.xyz += halfWidth * max(0.0, czm_metersPerPixel(positionEc3D)) * normalEC; // prevent artifacts when czm_metersPerPixel is negative (behind camera)\\n\\\n\\n\\\n    // ****** 2D ******\\n\\\n    // Check distance to the end plane and start plane, pick the plane that is closer\\n\\\n    vec4 positionEc2D = czm_modelViewRelativeToEye * czm_translateRelativeToEye(position2DHigh.zxy, position2DLow.zxy); // w = 1.0, see czm_computePosition\\n\\\n    absStartPlaneDistance = abs(czm_planeDistance(startPlane2D, positionEc2D.xyz));\\n\\\n    absEndPlaneDistance = abs(czm_planeDistance(endPlane2D, positionEc2D.xyz));\\n\\\n    planeDirection = czm_branchFreeTernary(absStartPlaneDistance < absEndPlaneDistance, startPlane2D.xyz, endPlane2D.xyz);\\n\\\n    upOrDown = normalize(cross(rightPlane2D.xyz, planeDirection)); // Points \\\"up\\\" for start plane, \\\"down\\\" at end plane.\\n\\\n    normalEC = normalize(cross(planeDirection, upOrDown));         // In practice, the opposite seems to work too.\\n\\\n\\n\\\n    // Nudge the top vertex upwards to prevent flickering\\n\\\n    geodeticSurfaceNormal = normalize(cross(normalEC, forwardEc2D));\\n\\\n    geodeticSurfaceNormal *= float(0.0 <= texcoordNormalization2D.y && texcoordNormalization2D.y <= 1.0);\\n\\\n    geodeticSurfaceNormal *= MAX_TERRAIN_HEIGHT;\\n\\\n    positionEc2D.xyz += geodeticSurfaceNormal;\\n\\\n\\n\\\n    // Determine if this vertex is on the \\\"left\\\" or \\\"right\\\"\\n\\\n    normalEC *= sign(texcoordNormalization2D.x);\\n\\\n#ifndef PER_INSTANCE_COLOR\\n\\\n    // Use vertex's sidedness to compute its texture coordinate.\\n\\\n    v_texcoordT = clamp(sign(texcoordNormalization2D.x), 0.0, 1.0);\\n\\\n#endif\\n\\\n\\n\\\n    // A \\\"perfect\\\" implementation would push along normals according to the angle against forward.\\n\\\n    // In practice, just pushing the normal out by halfWidth is sufficient for morph views.\\n\\\n    positionEc2D.xyz += halfWidth * max(0.0, czm_metersPerPixel(positionEc2D)) * normalEC; // prevent artifacts when czm_metersPerPixel is negative (behind camera)\\n\\\n\\n\\\n    // Blend for actual position\\n\\\n    gl_Position = czm_projection * mix(positionEc2D, positionEc3D, czm_morphTime);\\n\\\n\\n\\\n#ifdef ANGLE_VARYING\\n\\\n    // Approximate relative screen space direction of the line.\\n\\\n    vec2 approxLineDirection = normalize(vec2(v_forwardDirectionEC.x, -v_forwardDirectionEC.y));\\n\\\n    approxLineDirection.y = czm_branchFreeTernary(approxLineDirection.x == 0.0 && approxLineDirection.y == 0.0, -1.0, approxLineDirection.y);\\n\\\n    v_polylineAngle = czm_fastApproximateAtan(approxLineDirection.x, approxLineDirection.y);\\n\\\n#endif\\n\\\n}\\n\\\n\";\n","//This file is automatically rebuilt by the Cesium build process.\nexport default \"in vec3 position3DHigh;\\n\\\nin vec3 position3DLow;\\n\\\n\\n\\\n// In 2D and in 3D, texture coordinate normalization component signs encodes:\\n\\\n// * X sign - sidedness relative to right plane\\n\\\n// * Y sign - is negative OR magnitude is greater than 1.0 if vertex is on bottom of volume\\n\\\n#ifndef COLUMBUS_VIEW_2D\\n\\\nin vec4 startHiAndForwardOffsetX;\\n\\\nin vec4 startLoAndForwardOffsetY;\\n\\\nin vec4 startNormalAndForwardOffsetZ;\\n\\\nin vec4 endNormalAndTextureCoordinateNormalizationX;\\n\\\nin vec4 rightNormalAndTextureCoordinateNormalizationY;\\n\\\n#else\\n\\\nin vec4 startHiLo2D;\\n\\\nin vec4 offsetAndRight2D;\\n\\\nin vec4 startEndNormals2D;\\n\\\nin vec2 texcoordNormalization2D;\\n\\\n#endif\\n\\\n\\n\\\nin float batchId;\\n\\\n\\n\\\nout vec4 v_startPlaneNormalEcAndHalfWidth;\\n\\\nout vec4 v_endPlaneNormalEcAndBatchId;\\n\\\nout vec4 v_rightPlaneEC;\\n\\\nout vec4 v_endEcAndStartEcX;\\n\\\nout vec4 v_texcoordNormalizationAndStartEcYZ;\\n\\\n\\n\\\n// For materials\\n\\\n#ifdef WIDTH_VARYING\\n\\\nout float v_width;\\n\\\n#endif\\n\\\n#ifdef ANGLE_VARYING\\n\\\nout float v_polylineAngle;\\n\\\n#endif\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\nout vec4 v_color;\\n\\\n#endif\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n#ifdef COLUMBUS_VIEW_2D\\n\\\n    vec3 ecStart = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(vec3(0.0, startHiLo2D.xy), vec3(0.0, startHiLo2D.zw))).xyz;\\n\\\n\\n\\\n    vec3 forwardDirectionEC = czm_normal * vec3(0.0, offsetAndRight2D.xy);\\n\\\n    vec3 ecEnd = forwardDirectionEC + ecStart;\\n\\\n    forwardDirectionEC = normalize(forwardDirectionEC);\\n\\\n\\n\\\n    // Right plane\\n\\\n    v_rightPlaneEC.xyz = czm_normal * vec3(0.0, offsetAndRight2D.zw);\\n\\\n    v_rightPlaneEC.w = -dot(v_rightPlaneEC.xyz, ecStart);\\n\\\n\\n\\\n    // start plane\\n\\\n    vec4 startPlaneEC;\\n\\\n    startPlaneEC.xyz =  czm_normal * vec3(0.0, startEndNormals2D.xy);\\n\\\n    startPlaneEC.w = -dot(startPlaneEC.xyz, ecStart);\\n\\\n\\n\\\n    // end plane\\n\\\n    vec4 endPlaneEC;\\n\\\n    endPlaneEC.xyz =  czm_normal * vec3(0.0, startEndNormals2D.zw);\\n\\\n    endPlaneEC.w = -dot(endPlaneEC.xyz, ecEnd);\\n\\\n\\n\\\n    v_texcoordNormalizationAndStartEcYZ.x = abs(texcoordNormalization2D.x);\\n\\\n    v_texcoordNormalizationAndStartEcYZ.y = texcoordNormalization2D.y;\\n\\\n\\n\\\n#else // COLUMBUS_VIEW_2D\\n\\\n    vec3 ecStart = (czm_modelViewRelativeToEye * czm_translateRelativeToEye(startHiAndForwardOffsetX.xyz, startLoAndForwardOffsetY.xyz)).xyz;\\n\\\n    vec3 offset = czm_normal * vec3(startHiAndForwardOffsetX.w, startLoAndForwardOffsetY.w, startNormalAndForwardOffsetZ.w);\\n\\\n    vec3 ecEnd = ecStart + offset;\\n\\\n\\n\\\n    vec3 forwardDirectionEC = normalize(offset);\\n\\\n\\n\\\n    // start plane\\n\\\n    vec4 startPlaneEC;\\n\\\n    startPlaneEC.xyz = czm_normal * startNormalAndForwardOffsetZ.xyz;\\n\\\n    startPlaneEC.w = -dot(startPlaneEC.xyz, ecStart);\\n\\\n\\n\\\n    // end plane\\n\\\n    vec4 endPlaneEC;\\n\\\n    endPlaneEC.xyz = czm_normal * endNormalAndTextureCoordinateNormalizationX.xyz;\\n\\\n    endPlaneEC.w = -dot(endPlaneEC.xyz, ecEnd);\\n\\\n\\n\\\n    // Right plane\\n\\\n    v_rightPlaneEC.xyz = czm_normal * rightNormalAndTextureCoordinateNormalizationY.xyz;\\n\\\n    v_rightPlaneEC.w = -dot(v_rightPlaneEC.xyz, ecStart);\\n\\\n\\n\\\n    v_texcoordNormalizationAndStartEcYZ.x = abs(endNormalAndTextureCoordinateNormalizationX.w);\\n\\\n    v_texcoordNormalizationAndStartEcYZ.y = rightNormalAndTextureCoordinateNormalizationY.w;\\n\\\n\\n\\\n#endif // COLUMBUS_VIEW_2D\\n\\\n\\n\\\n    v_endEcAndStartEcX.xyz = ecEnd;\\n\\\n    v_endEcAndStartEcX.w = ecStart.x;\\n\\\n    v_texcoordNormalizationAndStartEcYZ.zw = ecStart.yz;\\n\\\n\\n\\\n#ifdef PER_INSTANCE_COLOR\\n\\\n    v_color = czm_batchTable_color(batchId);\\n\\\n#endif // PER_INSTANCE_COLOR\\n\\\n\\n\\\n    // Compute a normal along which to \\\"push\\\" the position out, extending the miter depending on view distance.\\n\\\n    // Position has already been \\\"pushed\\\" by unit length along miter normal, and miter normals are encoded in the planes.\\n\\\n    // Decode the normal to use at this specific vertex, push the position back, and then push to where it needs to be.\\n\\\n    vec4 positionRelativeToEye = czm_computePosition();\\n\\\n\\n\\\n    // Check distance to the end plane and start plane, pick the plane that is closer\\n\\\n    vec4 positionEC = czm_modelViewRelativeToEye * positionRelativeToEye; // w = 1.0, see czm_computePosition\\n\\\n    float absStartPlaneDistance = abs(czm_planeDistance(startPlaneEC, positionEC.xyz));\\n\\\n    float absEndPlaneDistance = abs(czm_planeDistance(endPlaneEC, positionEC.xyz));\\n\\\n    vec3 planeDirection = czm_branchFreeTernary(absStartPlaneDistance < absEndPlaneDistance, startPlaneEC.xyz, endPlaneEC.xyz);\\n\\\n    vec3 upOrDown = normalize(cross(v_rightPlaneEC.xyz, planeDirection)); // Points \\\"up\\\" for start plane, \\\"down\\\" at end plane.\\n\\\n    vec3 normalEC = normalize(cross(planeDirection, upOrDown));           // In practice, the opposite seems to work too.\\n\\\n\\n\\\n    // Extrude bottom vertices downward for far view distances, like for GroundPrimitives\\n\\\n    upOrDown = cross(forwardDirectionEC, normalEC);\\n\\\n    upOrDown = float(czm_sceneMode == czm_sceneMode3D) * upOrDown;\\n\\\n    upOrDown = float(v_texcoordNormalizationAndStartEcYZ.y > 1.0 || v_texcoordNormalizationAndStartEcYZ.y < 0.0) * upOrDown;\\n\\\n    upOrDown = min(GLOBE_MINIMUM_ALTITUDE, czm_geometricToleranceOverMeter * length(positionRelativeToEye.xyz)) * upOrDown;\\n\\\n    positionEC.xyz += upOrDown;\\n\\\n\\n\\\n    v_texcoordNormalizationAndStartEcYZ.y = czm_branchFreeTernary(v_texcoordNormalizationAndStartEcYZ.y > 1.0, 0.0, abs(v_texcoordNormalizationAndStartEcYZ.y));\\n\\\n\\n\\\n    // Determine distance along normalEC to push for a volume of appropriate width.\\n\\\n    // Make volumes about double pixel width for a conservative fit - in practice the\\n\\\n    // extra cost here is minimal compared to the loose volume heights.\\n\\\n    //\\n\\\n    // N = normalEC (guaranteed \\\"right-facing\\\")\\n\\\n    // R = rightEC\\n\\\n    // p = angle between N and R\\n\\\n    // w = distance to push along R if R == N\\n\\\n    // d = distance to push along N\\n\\\n    //\\n\\\n    //   N   R\\n\\\n    //  { \\ p| }      * cos(p) = dot(N, R) = w / d\\n\\\n    //  d\\ \\ |  |w    * d = w / dot(N, R)\\n\\\n    //    { \\| }\\n\\\n    //       o---------- polyline segment ---->\\n\\\n    //\\n\\\n    float width = czm_batchTable_width(batchId);\\n\\\n#ifdef WIDTH_VARYING\\n\\\n    v_width = width;\\n\\\n#endif\\n\\\n\\n\\\n    v_startPlaneNormalEcAndHalfWidth.xyz = startPlaneEC.xyz;\\n\\\n    v_startPlaneNormalEcAndHalfWidth.w = width * 0.5;\\n\\\n\\n\\\n    v_endPlaneNormalEcAndBatchId.xyz = endPlaneEC.xyz;\\n\\\n    v_endPlaneNormalEcAndBatchId.w = batchId;\\n\\\n\\n\\\n    width = width * max(0.0, czm_metersPerPixel(positionEC)); // width = distance to push along R\\n\\\n    width = width / dot(normalEC, v_rightPlaneEC.xyz); // width = distance to push along N\\n\\\n\\n\\\n    // Determine if this vertex is on the \\\"left\\\" or \\\"right\\\"\\n\\\n#ifdef COLUMBUS_VIEW_2D\\n\\\n        normalEC *= sign(texcoordNormalization2D.x);\\n\\\n#else\\n\\\n        normalEC *= sign(endNormalAndTextureCoordinateNormalizationX.w);\\n\\\n#endif\\n\\\n\\n\\\n    positionEC.xyz += width * normalEC;\\n\\\n    gl_Position = czm_depthClamp(czm_projection * positionEC);\\n\\\n\\n\\\n#ifdef ANGLE_VARYING\\n\\\n    // Approximate relative screen space direction of the line.\\n\\\n    vec2 approxLineDirection = normalize(vec2(forwardDirectionEC.x, -forwardDirectionEC.y));\\n\\\n    approxLineDirection.y = czm_branchFreeTernary(approxLineDirection.x == 0.0 && approxLineDirection.y == 0.0, -1.0, approxLineDirection.y);\\n\\\n    v_polylineAngle = czm_fastApproximateAtan(approxLineDirection.x, approxLineDirection.y);\\n\\\n#endif\\n\\\n}\\n\\\n\";\n","//This file is automatically rebuilt by the Cesium build process.\nexport default \"in vec3 position3DHigh;\\n\\\nin vec3 position3DLow;\\n\\\nin vec3 prevPosition3DHigh;\\n\\\nin vec3 prevPosition3DLow;\\n\\\nin vec3 nextPosition3DHigh;\\n\\\nin vec3 nextPosition3DLow;\\n\\\nin vec2 expandAndWidth;\\n\\\nin vec4 color;\\n\\\nin float batchId;\\n\\\n\\n\\\nout vec4 v_color;\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n    float expandDir = expandAndWidth.x;\\n\\\n    float width = abs(expandAndWidth.y) + 0.5;\\n\\\n    bool usePrev = expandAndWidth.y < 0.0;\\n\\\n\\n\\\n    vec4 p = czm_computePosition();\\n\\\n    vec4 prev = czm_computePrevPosition();\\n\\\n    vec4 next = czm_computeNextPosition();\\n\\\n\\n\\\n    float angle;\\n\\\n    vec4 positionWC = getPolylineWindowCoordinates(p, prev, next, expandDir, width, usePrev, angle);\\n\\\n    gl_Position = czm_viewportOrthographic * positionWC;\\n\\\n\\n\\\n    v_color = color;\\n\\\n}\\n\\\n\";\n","import defaultValue from \"../Core/defaultValue.js\";\nimport FeatureDetection from \"../Core/FeatureDetection.js\";\nimport VertexFormat from \"../Core/VertexFormat.js\";\nimport PerInstanceFlatColorAppearanceFS from \"../Shaders/Appearances/PerInstanceFlatColorAppearanceFS.js\";\nimport PolylineColorAppearanceVS from \"../Shaders/Appearances/PolylineColorAppearanceVS.js\";\nimport PolylineCommon from \"../Shaders/PolylineCommon.js\";\nimport Appearance from \"./Appearance.js\";\n\nlet defaultVertexShaderSource = `${PolylineCommon}\\n${PolylineColorAppearanceVS}`;\nconst defaultFragmentShaderSource = PerInstanceFlatColorAppearanceFS;\n\nif (!FeatureDetection.isInternetExplorer()) {\n  defaultVertexShaderSource = `#define CLIP_POLYLINE \\n${defaultVertexShaderSource}`;\n}\n\n/**\n * An appearance for {@link GeometryInstance} instances with color attributes and\n * {@link PolylineGeometry} or {@link GroundPolylineGeometry}.\n * This allows several geometry instances, each with a different color, to\n * be drawn with the same {@link Primitive}.\n *\n * @alias PolylineColorAppearance\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {boolean} [options.translucent=true] When <code>true</code>, the geometry is expected to appear translucent so {@link PolylineColorAppearance#renderState} has alpha blending enabled.\n * @param {string} [options.vertexShaderSource] Optional GLSL vertex shader source to override the default vertex shader.\n * @param {string} [options.fragmentShaderSource] Optional GLSL fragment shader source to override the default fragment shader.\n * @param {object} [options.renderState] Optional render state to override the default render state.\n *\n * @example\n * // A solid white line segment\n * const primitive = new Cesium.Primitive({\n *   geometryInstances : new Cesium.GeometryInstance({\n *     geometry : new Cesium.PolylineGeometry({\n *       positions : Cesium.Cartesian3.fromDegreesArray([\n *         0.0, 0.0,\n *         5.0, 0.0\n *       ]),\n *       width : 10.0,\n *       vertexFormat : Cesium.PolylineColorAppearance.VERTEX_FORMAT\n *     }),\n *     attributes : {\n *       color : Cesium.ColorGeometryInstanceAttribute.fromColor(new Cesium.Color(1.0, 1.0, 1.0, 1.0))\n *     }\n *   }),\n *   appearance : new Cesium.PolylineColorAppearance({\n *     translucent : false\n *   })\n * });\n */\nfunction PolylineColorAppearance(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  const translucent = defaultValue(options.translucent, true);\n  const closed = false;\n  const vertexFormat = PolylineColorAppearance.VERTEX_FORMAT;\n\n  /**\n   * This property is part of the {@link Appearance} interface, but is not\n   * used by {@link PolylineColorAppearance} since a fully custom fragment shader is used.\n   *\n   * @type Material\n   *\n   * @default undefined\n   */\n  this.material = undefined;\n\n  /**\n   * When <code>true</code>, the geometry is expected to appear translucent so\n   * {@link PolylineColorAppearance#renderState} has alpha blending enabled.\n   *\n   * @type {boolean}\n   *\n   * @default true\n   */\n  this.translucent = translucent;\n\n  this._vertexShaderSource = defaultValue(\n    options.vertexShaderSource,\n    defaultVertexShaderSource\n  );\n  this._fragmentShaderSource = defaultValue(\n    options.fragmentShaderSource,\n    defaultFragmentShaderSource\n  );\n  this._renderState = Appearance.getDefaultRenderState(\n    translucent,\n    closed,\n    options.renderState\n  );\n  this._closed = closed;\n\n  // Non-derived members\n\n  this._vertexFormat = vertexFormat;\n}\n\nObject.defineProperties(PolylineColorAppearance.prototype, {\n  /**\n   * The GLSL source code for the vertex shader.\n   *\n   * @memberof PolylineColorAppearance.prototype\n   *\n   * @type {string}\n   * @readonly\n   */\n  vertexShaderSource: {\n    get: function () {\n      return this._vertexShaderSource;\n    },\n  },\n\n  /**\n   * The GLSL source code for the fragment shader.\n   *\n   * @memberof PolylineColorAppearance.prototype\n   *\n   * @type {string}\n   * @readonly\n   */\n  fragmentShaderSource: {\n    get: function () {\n      return this._fragmentShaderSource;\n    },\n  },\n\n  /**\n   * The WebGL fixed-function state to use when rendering the geometry.\n   * <p>\n   * The render state can be explicitly defined when constructing a {@link PolylineColorAppearance}\n   * instance, or it is set implicitly via {@link PolylineColorAppearance#translucent}.\n   * </p>\n   *\n   * @memberof PolylineColorAppearance.prototype\n   *\n   * @type {object}\n   * @readonly\n   */\n  renderState: {\n    get: function () {\n      return this._renderState;\n    },\n  },\n\n  /**\n   * When <code>true</code>, the geometry is expected to be closed so\n   * {@link PolylineColorAppearance#renderState} has backface culling enabled.\n   * This is always <code>false</code> for <code>PolylineColorAppearance</code>.\n   *\n   * @memberof PolylineColorAppearance.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default false\n   */\n  closed: {\n    get: function () {\n      return this._closed;\n    },\n  },\n\n  /**\n   * The {@link VertexFormat} that this appearance instance is compatible with.\n   * A geometry can have more vertex attributes and still be compatible - at a\n   * potential performance cost - but it can't have less.\n   *\n   * @memberof PolylineColorAppearance.prototype\n   *\n   * @type VertexFormat\n   * @readonly\n   *\n   * @default {@link PolylineColorAppearance.VERTEX_FORMAT}\n   */\n  vertexFormat: {\n    get: function () {\n      return this._vertexFormat;\n    },\n  },\n});\n\n/**\n * The {@link VertexFormat} that all {@link PolylineColorAppearance} instances\n * are compatible with. This requires only a <code>position</code> attribute.\n *\n * @type VertexFormat\n *\n * @constant\n */\nPolylineColorAppearance.VERTEX_FORMAT = VertexFormat.POSITION_ONLY;\n\n/**\n * Procedurally creates the full GLSL fragment shader source.\n *\n * @function\n *\n * @returns {string} The full GLSL fragment shader source.\n */\nPolylineColorAppearance.prototype.getFragmentShaderSource =\n  Appearance.prototype.getFragmentShaderSource;\n\n/**\n * Determines if the geometry is translucent based on {@link PolylineColorAppearance#translucent}.\n *\n * @function\n *\n * @returns {boolean} <code>true</code> if the appearance is translucent.\n */\nPolylineColorAppearance.prototype.isTranslucent =\n  Appearance.prototype.isTranslucent;\n\n/**\n * Creates a render state.  This is not the final render state instance; instead,\n * it can contain a subset of render state properties identical to the render state\n * created in the context.\n *\n * @function\n *\n * @returns {object} The render state.\n */\nPolylineColorAppearance.prototype.getRenderState =\n  Appearance.prototype.getRenderState;\nexport default PolylineColorAppearance;\n","//This file is automatically rebuilt by the Cesium build process.\nexport default \"in vec3 position3DHigh;\\n\\\nin vec3 position3DLow;\\n\\\nin vec3 prevPosition3DHigh;\\n\\\nin vec3 prevPosition3DLow;\\n\\\nin vec3 nextPosition3DHigh;\\n\\\nin vec3 nextPosition3DLow;\\n\\\nin vec2 expandAndWidth;\\n\\\nin vec2 st;\\n\\\nin float batchId;\\n\\\n\\n\\\nout float v_width;\\n\\\nout vec2 v_st;\\n\\\nout float v_polylineAngle;\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n    float expandDir = expandAndWidth.x;\\n\\\n    float width = abs(expandAndWidth.y) + 0.5;\\n\\\n    bool usePrev = expandAndWidth.y < 0.0;\\n\\\n\\n\\\n    vec4 p = czm_computePosition();\\n\\\n    vec4 prev = czm_computePrevPosition();\\n\\\n    vec4 next = czm_computeNextPosition();\\n\\\n\\n\\\n    float angle;\\n\\\n    vec4 positionWC = getPolylineWindowCoordinates(p, prev, next, expandDir, width, usePrev, angle);\\n\\\n    gl_Position = czm_viewportOrthographic * positionWC;\\n\\\n\\n\\\n    v_width = width;\\n\\\n    v_st.s = st.s;\\n\\\n    v_st.t = czm_writeNonPerspective(st.t, gl_Position.w);\\n\\\n    v_polylineAngle = angle;\\n\\\n}\\n\\\n\";\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport FeatureDetection from \"../Core/FeatureDetection.js\";\nimport VertexFormat from \"../Core/VertexFormat.js\";\nimport PolylineMaterialAppearanceVS from \"../Shaders/Appearances/PolylineMaterialAppearanceVS.js\";\nimport PolylineCommon from \"../Shaders/PolylineCommon.js\";\nimport PolylineFS from \"../Shaders/PolylineFS.js\";\nimport Appearance from \"./Appearance.js\";\nimport Material from \"./Material.js\";\n\nlet defaultVertexShaderSource = `${PolylineCommon}\\n${PolylineMaterialAppearanceVS}`;\nconst defaultFragmentShaderSource = PolylineFS;\n\nif (!FeatureDetection.isInternetExplorer()) {\n  defaultVertexShaderSource = `#define CLIP_POLYLINE \\n${defaultVertexShaderSource}`;\n}\n\n/**\n * An appearance for {@link PolylineGeometry} that supports shading with materials.\n *\n * @alias PolylineMaterialAppearance\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {boolean} [options.translucent=true] When <code>true</code>, the geometry is expected to appear translucent so {@link PolylineMaterialAppearance#renderState} has alpha blending enabled.\n * @param {Material} [options.material=Material.ColorType] The material used to determine the fragment color.\n * @param {string} [options.vertexShaderSource] Optional GLSL vertex shader source to override the default vertex shader.\n * @param {string} [options.fragmentShaderSource] Optional GLSL fragment shader source to override the default fragment shader.\n * @param {object} [options.renderState] Optional render state to override the default render state.\n *\n * @see {@link https://github.com/CesiumGS/cesium/wiki/Fabric|Fabric}\n *\n * @example\n * const primitive = new Cesium.Primitive({\n *   geometryInstances : new Cesium.GeometryInstance({\n *     geometry : new Cesium.PolylineGeometry({\n *       positions : Cesium.Cartesian3.fromDegreesArray([\n *         0.0, 0.0,\n *         5.0, 0.0\n *       ]),\n *       width : 10.0,\n *       vertexFormat : Cesium.PolylineMaterialAppearance.VERTEX_FORMAT\n *     })\n *   }),\n *   appearance : new Cesium.PolylineMaterialAppearance({\n *     material : Cesium.Material.fromType('Color')\n *   })\n * });\n */\nfunction PolylineMaterialAppearance(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  const translucent = defaultValue(options.translucent, true);\n  const closed = false;\n  const vertexFormat = PolylineMaterialAppearance.VERTEX_FORMAT;\n\n  /**\n   * The material used to determine the fragment color.  Unlike other {@link PolylineMaterialAppearance}\n   * properties, this is not read-only, so an appearance's material can change on the fly.\n   *\n   * @type Material\n   *\n   * @default {@link Material.ColorType}\n   *\n   * @see {@link https://github.com/CesiumGS/cesium/wiki/Fabric|Fabric}\n   */\n  this.material = defined(options.material)\n    ? options.material\n    : Material.fromType(Material.ColorType);\n\n  /**\n   * When <code>true</code>, the geometry is expected to appear translucent so\n   * {@link PolylineMaterialAppearance#renderState} has alpha blending enabled.\n   *\n   * @type {boolean}\n   *\n   * @default true\n   */\n  this.translucent = translucent;\n\n  this._vertexShaderSource = defaultValue(\n    options.vertexShaderSource,\n    defaultVertexShaderSource\n  );\n  this._fragmentShaderSource = defaultValue(\n    options.fragmentShaderSource,\n    defaultFragmentShaderSource\n  );\n  this._renderState = Appearance.getDefaultRenderState(\n    translucent,\n    closed,\n    options.renderState\n  );\n  this._closed = closed;\n\n  // Non-derived members\n\n  this._vertexFormat = vertexFormat;\n}\n\nObject.defineProperties(PolylineMaterialAppearance.prototype, {\n  /**\n   * The GLSL source code for the vertex shader.\n   *\n   * @memberof PolylineMaterialAppearance.prototype\n   *\n   * @type {string}\n   * @readonly\n   */\n  vertexShaderSource: {\n    get: function () {\n      let vs = this._vertexShaderSource;\n      if (\n        this.material.shaderSource.search(/in\\s+float\\s+v_polylineAngle;/g) !==\n        -1\n      ) {\n        vs = `#define POLYLINE_DASH\\n${vs}`;\n      }\n      return vs;\n    },\n  },\n\n  /**\n   * The GLSL source code for the fragment shader.\n   *\n   * @memberof PolylineMaterialAppearance.prototype\n   *\n   * @type {string}\n   * @readonly\n   */\n  fragmentShaderSource: {\n    get: function () {\n      return this._fragmentShaderSource;\n    },\n  },\n\n  /**\n   * The WebGL fixed-function state to use when rendering the geometry.\n   * <p>\n   * The render state can be explicitly defined when constructing a {@link PolylineMaterialAppearance}\n   * instance, or it is set implicitly via {@link PolylineMaterialAppearance#translucent}\n   * and {@link PolylineMaterialAppearance#closed}.\n   * </p>\n   *\n   * @memberof PolylineMaterialAppearance.prototype\n   *\n   * @type {object}\n   * @readonly\n   */\n  renderState: {\n    get: function () {\n      return this._renderState;\n    },\n  },\n\n  /**\n   * When <code>true</code>, the geometry is expected to be closed so\n   * {@link PolylineMaterialAppearance#renderState} has backface culling enabled.\n   * This is always <code>false</code> for <code>PolylineMaterialAppearance</code>.\n   *\n   * @memberof PolylineMaterialAppearance.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default false\n   */\n  closed: {\n    get: function () {\n      return this._closed;\n    },\n  },\n\n  /**\n   * The {@link VertexFormat} that this appearance instance is compatible with.\n   * A geometry can have more vertex attributes and still be compatible - at a\n   * potential performance cost - but it can't have less.\n   *\n   * @memberof PolylineMaterialAppearance.prototype\n   *\n   * @type VertexFormat\n   * @readonly\n   *\n   * @default {@link PolylineMaterialAppearance.VERTEX_FORMAT}\n   */\n  vertexFormat: {\n    get: function () {\n      return this._vertexFormat;\n    },\n  },\n});\n\n/**\n * The {@link VertexFormat} that all {@link PolylineMaterialAppearance} instances\n * are compatible with. This requires <code>position</code> and <code>st</code> attributes.\n *\n * @type VertexFormat\n *\n * @constant\n */\nPolylineMaterialAppearance.VERTEX_FORMAT = VertexFormat.POSITION_AND_ST;\n\n/**\n * Procedurally creates the full GLSL fragment shader source.  For {@link PolylineMaterialAppearance},\n * this is derived from {@link PolylineMaterialAppearance#fragmentShaderSource} and {@link PolylineMaterialAppearance#material}.\n *\n * @function\n *\n * @returns {string} The full GLSL fragment shader source.\n */\nPolylineMaterialAppearance.prototype.getFragmentShaderSource =\n  Appearance.prototype.getFragmentShaderSource;\n\n/**\n * Determines if the geometry is translucent based on {@link PolylineMaterialAppearance#translucent} and {@link Material#isTranslucent}.\n *\n * @function\n *\n * @returns {boolean} <code>true</code> if the appearance is translucent.\n */\nPolylineMaterialAppearance.prototype.isTranslucent =\n  Appearance.prototype.isTranslucent;\n\n/**\n * Creates a render state.  This is not the final render state instance; instead,\n * it can contain a subset of render state properties identical to the render state\n * created in the context.\n *\n * @function\n *\n * @returns {object} The render state.\n */\nPolylineMaterialAppearance.prototype.getRenderState =\n  Appearance.prototype.getRenderState;\nexport default PolylineMaterialAppearance;\n","import ApproximateTerrainHeights from \"../Core/ApproximateTerrainHeights.js\";\nimport ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport GeometryInstance from \"../Core/GeometryInstance.js\";\nimport GeometryInstanceAttribute from \"../Core/GeometryInstanceAttribute.js\";\nimport GroundPolylineGeometry from \"../Core/GroundPolylineGeometry.js\";\nimport DrawCommand from \"../Renderer/DrawCommand.js\";\nimport Pass from \"../Renderer/Pass.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport ShaderProgram from \"../Renderer/ShaderProgram.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport PolylineShadowVolumeFS from \"../Shaders/PolylineShadowVolumeFS.js\";\nimport PolylineShadowVolumeMorphFS from \"../Shaders/PolylineShadowVolumeMorphFS.js\";\nimport PolylineShadowVolumeMorphVS from \"../Shaders/PolylineShadowVolumeMorphVS.js\";\nimport PolylineShadowVolumeVS from \"../Shaders/PolylineShadowVolumeVS.js\";\nimport BlendingState from \"./BlendingState.js\";\nimport ClassificationType from \"./ClassificationType.js\";\nimport CullFace from \"./CullFace.js\";\nimport PolylineColorAppearance from \"./PolylineColorAppearance.js\";\nimport PolylineMaterialAppearance from \"./PolylineMaterialAppearance.js\";\nimport Primitive from \"./Primitive.js\";\nimport SceneMode from \"./SceneMode.js\";\nimport StencilConstants from \"./StencilConstants.js\";\nimport StencilFunction from \"./StencilFunction.js\";\nimport StencilOperation from \"./StencilOperation.js\";\n\n/**\n * A GroundPolylinePrimitive represents a polyline draped over the terrain or 3D Tiles in the {@link Scene}.\n * <p>\n * Only to be used with GeometryInstances containing {@link GroundPolylineGeometry}.\n * </p>\n *\n * @alias GroundPolylinePrimitive\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Array|GeometryInstance} [options.geometryInstances] GeometryInstances containing GroundPolylineGeometry\n * @param {Appearance} [options.appearance] The Appearance used to render the polyline. Defaults to a white color {@link Material} on a {@link PolylineMaterialAppearance}.\n * @param {boolean} [options.show=true] Determines if this primitive will be shown.\n * @param {boolean} [options.interleave=false] When <code>true</code>, geometry vertex attributes are interleaved, which can slightly improve rendering performance but increases load time.\n * @param {boolean} [options.releaseGeometryInstances=true] When <code>true</code>, the primitive does not keep a reference to the input <code>geometryInstances</code> to save memory.\n * @param {boolean} [options.allowPicking=true] When <code>true</code>, each geometry instance will only be pickable with {@link Scene#pick}.  When <code>false</code>, GPU memory is saved.\n * @param {boolean} [options.asynchronous=true] Determines if the primitive will be created asynchronously or block until ready. If false initializeTerrainHeights() must be called first.\n * @param {ClassificationType} [options.classificationType=ClassificationType.BOTH] Determines whether terrain, 3D Tiles or both will be classified.\n * @param {boolean} [options.debugShowBoundingVolume=false] For debugging only. Determines if this primitive's commands' bounding spheres are shown.\n * @param {boolean} [options.debugShowShadowVolume=false] For debugging only. Determines if the shadow volume for each geometry in the primitive is drawn. Must be <code>true</code> on creation to have effect.\n *\n * @example\n * // 1. Draw a polyline on terrain with a basic color material\n *\n * const instance = new Cesium.GeometryInstance({\n *   geometry : new Cesium.GroundPolylineGeometry({\n *      positions : Cesium.Cartesian3.fromDegreesArray([\n *          -112.1340164450331, 36.05494287836128,\n *          -112.08821010582645, 36.097804071380715\n *      ]),\n *      width : 4.0\n *   }),\n *   id : 'object returned when this instance is picked and to get/set per-instance attributes'\n * });\n *\n * scene.groundPrimitives.add(new Cesium.GroundPolylinePrimitive({\n *   geometryInstances : instance,\n *   appearance : new Cesium.PolylineMaterialAppearance()\n * }));\n *\n * // 2. Draw a looped polyline on terrain with per-instance color and a distance display condition.\n * // Distance display conditions for polylines on terrain are based on an approximate terrain height\n * // instead of true terrain height.\n *\n * const instance2 = new Cesium.GeometryInstance({\n *   geometry : new Cesium.GroundPolylineGeometry({\n *      positions : Cesium.Cartesian3.fromDegreesArray([\n *          -112.1340164450331, 36.05494287836128,\n *          -112.08821010582645, 36.097804071380715,\n *          -112.13296079730024, 36.168769146801104\n *      ]),\n *      loop : true,\n *      width : 4.0\n *   }),\n *   attributes : {\n *      color : Cesium.ColorGeometryInstanceAttribute.fromColor(Cesium.Color.fromCssColorString('green').withAlpha(0.7)),\n *      distanceDisplayCondition : new Cesium.DistanceDisplayConditionGeometryInstanceAttribute(1000, 30000)\n *   },\n *   id : 'object returned when this instance is picked and to get/set per-instance attributes'\n * });\n *\n * scene.groundPrimitives.add(new Cesium.GroundPolylinePrimitive({\n *   geometryInstances : instance2,\n *   appearance : new Cesium.PolylineColorAppearance()\n * }));\n */\nfunction GroundPolylinePrimitive(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  /**\n   * The geometry instances rendered with this primitive. This may\n   * be <code>undefined</code> if <code>options.releaseGeometryInstances</code>\n   * is <code>true</code> when the primitive is constructed.\n   * <p>\n   * Changing this property after the primitive is rendered has no effect.\n   * </p>\n   *\n   * @readonly\n   * @type {Array|GeometryInstance}\n   *\n   * @default undefined\n   */\n  this.geometryInstances = options.geometryInstances;\n  this._hasPerInstanceColors = true;\n\n  let appearance = options.appearance;\n  if (!defined(appearance)) {\n    appearance = new PolylineMaterialAppearance();\n  }\n  /**\n   * The {@link Appearance} used to shade this primitive. Each geometry\n   * instance is shaded with the same appearance.  Some appearances, like\n   * {@link PolylineColorAppearance} allow giving each instance unique\n   * properties.\n   *\n   * @type Appearance\n   *\n   * @default undefined\n   */\n  this.appearance = appearance;\n\n  /**\n   * Determines if the primitive will be shown.  This affects all geometry\n   * instances in the primitive.\n   *\n   * @type {boolean}\n   *\n   * @default true\n   */\n  this.show = defaultValue(options.show, true);\n\n  /**\n   * Determines whether terrain, 3D Tiles or both will be classified.\n   *\n   * @type {ClassificationType}\n   *\n   * @default ClassificationType.BOTH\n   */\n  this.classificationType = defaultValue(\n    options.classificationType,\n    ClassificationType.BOTH\n  );\n\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the bounding sphere for each draw command in the primitive.\n   * </p>\n   *\n   * @type {boolean}\n   *\n   * @default false\n   */\n  this.debugShowBoundingVolume = defaultValue(\n    options.debugShowBoundingVolume,\n    false\n  );\n\n  // Shadow volume is shown by removing a discard in the shader, so this isn't toggleable.\n  this._debugShowShadowVolume = defaultValue(\n    options.debugShowShadowVolume,\n    false\n  );\n\n  this._primitiveOptions = {\n    geometryInstances: undefined,\n    appearance: undefined,\n    vertexCacheOptimize: false,\n    interleave: defaultValue(options.interleave, false),\n    releaseGeometryInstances: defaultValue(\n      options.releaseGeometryInstances,\n      true\n    ),\n    allowPicking: defaultValue(options.allowPicking, true),\n    asynchronous: defaultValue(options.asynchronous, true),\n    compressVertices: false,\n    _createShaderProgramFunction: undefined,\n    _createCommandsFunction: undefined,\n    _updateAndQueueCommandsFunction: undefined,\n  };\n\n  // Used when inserting in an OrderedPrimitiveCollection\n  this._zIndex = undefined;\n\n  this._ready = false;\n  this._primitive = undefined;\n\n  this._sp = undefined;\n  this._sp2D = undefined;\n  this._spMorph = undefined;\n\n  this._renderState = getRenderState(false);\n  this._renderState3DTiles = getRenderState(true);\n\n  this._renderStateMorph = RenderState.fromCache({\n    cull: {\n      enabled: true,\n      face: CullFace.FRONT, // Geometry is \"inverted,\" so cull front when materials on volume instead of on terrain (morph)\n    },\n    depthTest: {\n      enabled: true,\n    },\n    blending: BlendingState.PRE_MULTIPLIED_ALPHA_BLEND,\n    depthMask: false,\n  });\n}\n\nObject.defineProperties(GroundPolylinePrimitive.prototype, {\n  /**\n   * Determines if geometry vertex attributes are interleaved, which can slightly improve rendering performance.\n   *\n   * @memberof GroundPolylinePrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default false\n   */\n  interleave: {\n    get: function () {\n      return this._primitiveOptions.interleave;\n    },\n  },\n\n  /**\n   * When <code>true</code>, the primitive does not keep a reference to the input <code>geometryInstances</code> to save memory.\n   *\n   * @memberof GroundPolylinePrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  releaseGeometryInstances: {\n    get: function () {\n      return this._primitiveOptions.releaseGeometryInstances;\n    },\n  },\n\n  /**\n   * When <code>true</code>, each geometry instance will only be pickable with {@link Scene#pick}.  When <code>false</code>, GPU memory is saved.\n   *\n   * @memberof GroundPolylinePrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  allowPicking: {\n    get: function () {\n      return this._primitiveOptions.allowPicking;\n    },\n  },\n\n  /**\n   * Determines if the geometry instances will be created and batched on a web worker.\n   *\n   * @memberof GroundPolylinePrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  asynchronous: {\n    get: function () {\n      return this._primitiveOptions.asynchronous;\n    },\n  },\n\n  /**\n   * Determines if the primitive is complete and ready to render.  If this property is\n   * true, the primitive will be rendered the next time that {@link GroundPolylinePrimitive#update}\n   * is called.\n   *\n   * @memberof GroundPolylinePrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  ready: {\n    get: function () {\n      return this._ready;\n    },\n  },\n\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * If true, draws the shadow volume for each geometry in the primitive.\n   * </p>\n   *\n   * @memberof GroundPolylinePrimitive.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   *\n   * @default false\n   */\n  debugShowShadowVolume: {\n    get: function () {\n      return this._debugShowShadowVolume;\n    },\n  },\n});\n\n/**\n * Initializes the minimum and maximum terrain heights. This only needs to be called if you are creating the\n * GroundPolylinePrimitive synchronously.\n *\n * @returns {Promise<void>} A promise that will resolve once the terrain heights have been loaded.\n */\nGroundPolylinePrimitive.initializeTerrainHeights = function () {\n  return ApproximateTerrainHeights.initialize();\n};\n\nfunction createShaderProgram(groundPolylinePrimitive, frameState, appearance) {\n  const context = frameState.context;\n  const primitive = groundPolylinePrimitive._primitive;\n  const attributeLocations = primitive._attributeLocations;\n\n  let vs = primitive._batchTable.getVertexShaderCallback()(\n    PolylineShadowVolumeVS\n  );\n  vs = Primitive._appendShowToShader(primitive, vs);\n  vs = Primitive._appendDistanceDisplayConditionToShader(primitive, vs);\n  vs = Primitive._modifyShaderPosition(\n    groundPolylinePrimitive,\n    vs,\n    frameState.scene3DOnly\n  );\n\n  let vsMorph = primitive._batchTable.getVertexShaderCallback()(\n    PolylineShadowVolumeMorphVS\n  );\n  vsMorph = Primitive._appendShowToShader(primitive, vsMorph);\n  vsMorph = Primitive._appendDistanceDisplayConditionToShader(\n    primitive,\n    vsMorph\n  );\n  vsMorph = Primitive._modifyShaderPosition(\n    groundPolylinePrimitive,\n    vsMorph,\n    frameState.scene3DOnly\n  );\n\n  // Access pick color from fragment shader.\n  // Helps with varying budget.\n  let fs = primitive._batchTable.getVertexShaderCallback()(\n    PolylineShadowVolumeFS\n  );\n\n  const vsDefines = [\n    `GLOBE_MINIMUM_ALTITUDE ${frameState.mapProjection.ellipsoid.minimumRadius.toFixed(\n      1\n    )}`,\n  ];\n  let colorDefine = \"\";\n  let materialShaderSource = \"\";\n  if (defined(appearance.material)) {\n    materialShaderSource = defined(appearance.material)\n      ? appearance.material.shaderSource\n      : \"\";\n\n    // Check for use of v_width and v_polylineAngle in material shader\n    // to determine whether these varyings should be active in the vertex shader.\n    if (materialShaderSource.search(/in\\s+float\\s+v_polylineAngle;/g) !== -1) {\n      vsDefines.push(\"ANGLE_VARYING\");\n    }\n    if (materialShaderSource.search(/in\\s+float\\s+v_width;/g) !== -1) {\n      vsDefines.push(\"WIDTH_VARYING\");\n    }\n  } else {\n    colorDefine = \"PER_INSTANCE_COLOR\";\n  }\n\n  vsDefines.push(colorDefine);\n  const fsDefines = groundPolylinePrimitive.debugShowShadowVolume\n    ? [\"DEBUG_SHOW_VOLUME\", colorDefine]\n    : [colorDefine];\n\n  const vsColor3D = new ShaderSource({\n    defines: vsDefines,\n    sources: [vs],\n  });\n  const fsColor3D = new ShaderSource({\n    defines: fsDefines,\n    sources: [materialShaderSource, fs],\n  });\n  groundPolylinePrimitive._sp = ShaderProgram.replaceCache({\n    context: context,\n    shaderProgram: primitive._sp,\n    vertexShaderSource: vsColor3D,\n    fragmentShaderSource: fsColor3D,\n    attributeLocations: attributeLocations,\n  });\n\n  // Derive 2D/CV\n  let colorProgram2D = context.shaderCache.getDerivedShaderProgram(\n    groundPolylinePrimitive._sp,\n    \"2dColor\"\n  );\n  if (!defined(colorProgram2D)) {\n    const vsColor2D = new ShaderSource({\n      defines: vsDefines.concat([\"COLUMBUS_VIEW_2D\"]),\n      sources: [vs],\n    });\n    colorProgram2D = context.shaderCache.createDerivedShaderProgram(\n      groundPolylinePrimitive._sp,\n      \"2dColor\",\n      {\n        context: context,\n        shaderProgram: groundPolylinePrimitive._sp2D,\n        vertexShaderSource: vsColor2D,\n        fragmentShaderSource: fsColor3D,\n        attributeLocations: attributeLocations,\n      }\n    );\n  }\n  groundPolylinePrimitive._sp2D = colorProgram2D;\n\n  // Derive Morph\n  let colorProgramMorph = context.shaderCache.getDerivedShaderProgram(\n    groundPolylinePrimitive._sp,\n    \"MorphColor\"\n  );\n  if (!defined(colorProgramMorph)) {\n    const vsColorMorph = new ShaderSource({\n      defines: vsDefines.concat([\n        `MAX_TERRAIN_HEIGHT ${ApproximateTerrainHeights._defaultMaxTerrainHeight.toFixed(\n          1\n        )}`,\n      ]),\n      sources: [vsMorph],\n    });\n\n    fs = primitive._batchTable.getVertexShaderCallback()(\n      PolylineShadowVolumeMorphFS\n    );\n    const fsColorMorph = new ShaderSource({\n      defines: fsDefines,\n      sources: [materialShaderSource, fs],\n    });\n    colorProgramMorph = context.shaderCache.createDerivedShaderProgram(\n      groundPolylinePrimitive._sp,\n      \"MorphColor\",\n      {\n        context: context,\n        shaderProgram: groundPolylinePrimitive._spMorph,\n        vertexShaderSource: vsColorMorph,\n        fragmentShaderSource: fsColorMorph,\n        attributeLocations: attributeLocations,\n      }\n    );\n  }\n  groundPolylinePrimitive._spMorph = colorProgramMorph;\n}\n\nfunction getRenderState(mask3DTiles) {\n  return RenderState.fromCache({\n    cull: {\n      enabled: true, // prevent double-draw. Geometry is \"inverted\" (reversed winding order) so we're drawing backfaces.\n    },\n    blending: BlendingState.PRE_MULTIPLIED_ALPHA_BLEND,\n    depthMask: false,\n    stencilTest: {\n      enabled: mask3DTiles,\n      frontFunction: StencilFunction.EQUAL,\n      frontOperation: {\n        fail: StencilOperation.KEEP,\n        zFail: StencilOperation.KEEP,\n        zPass: StencilOperation.KEEP,\n      },\n      backFunction: StencilFunction.EQUAL,\n      backOperation: {\n        fail: StencilOperation.KEEP,\n        zFail: StencilOperation.KEEP,\n        zPass: StencilOperation.KEEP,\n      },\n      reference: StencilConstants.CESIUM_3D_TILE_MASK,\n      mask: StencilConstants.CESIUM_3D_TILE_MASK,\n    },\n  });\n}\n\nfunction createCommands(\n  groundPolylinePrimitive,\n  appearance,\n  material,\n  translucent,\n  colorCommands,\n  pickCommands\n) {\n  const primitive = groundPolylinePrimitive._primitive;\n  const length = primitive._va.length;\n  colorCommands.length = length;\n  pickCommands.length = length;\n\n  const isPolylineColorAppearance =\n    appearance instanceof PolylineColorAppearance;\n\n  const materialUniforms = isPolylineColorAppearance ? {} : material._uniforms;\n  const uniformMap = primitive._batchTable.getUniformMapCallback()(\n    materialUniforms\n  );\n\n  for (let i = 0; i < length; i++) {\n    const vertexArray = primitive._va[i];\n\n    let command = colorCommands[i];\n    if (!defined(command)) {\n      command = colorCommands[i] = new DrawCommand({\n        owner: groundPolylinePrimitive,\n        primitiveType: primitive._primitiveType,\n      });\n    }\n\n    command.vertexArray = vertexArray;\n    command.renderState = groundPolylinePrimitive._renderState;\n    command.shaderProgram = groundPolylinePrimitive._sp;\n    command.uniformMap = uniformMap;\n    command.pass = Pass.TERRAIN_CLASSIFICATION;\n    command.pickId = \"czm_batchTable_pickColor(v_endPlaneNormalEcAndBatchId.w)\";\n\n    const derivedTilesetCommand = DrawCommand.shallowClone(\n      command,\n      command.derivedCommands.tileset\n    );\n    derivedTilesetCommand.renderState =\n      groundPolylinePrimitive._renderState3DTiles;\n    derivedTilesetCommand.pass = Pass.CESIUM_3D_TILE_CLASSIFICATION;\n    command.derivedCommands.tileset = derivedTilesetCommand;\n\n    // derive for 2D\n    const derived2DCommand = DrawCommand.shallowClone(\n      command,\n      command.derivedCommands.color2D\n    );\n    derived2DCommand.shaderProgram = groundPolylinePrimitive._sp2D;\n    command.derivedCommands.color2D = derived2DCommand;\n\n    const derived2DTilesetCommand = DrawCommand.shallowClone(\n      derivedTilesetCommand,\n      derivedTilesetCommand.derivedCommands.color2D\n    );\n    derived2DTilesetCommand.shaderProgram = groundPolylinePrimitive._sp2D;\n    derivedTilesetCommand.derivedCommands.color2D = derived2DTilesetCommand;\n\n    // derive for Morph\n    const derivedMorphCommand = DrawCommand.shallowClone(\n      command,\n      command.derivedCommands.colorMorph\n    );\n    derivedMorphCommand.renderState = groundPolylinePrimitive._renderStateMorph;\n    derivedMorphCommand.shaderProgram = groundPolylinePrimitive._spMorph;\n    derivedMorphCommand.pickId = \"czm_batchTable_pickColor(v_batchId)\";\n    command.derivedCommands.colorMorph = derivedMorphCommand;\n  }\n}\n\nfunction updateAndQueueCommand(\n  groundPolylinePrimitive,\n  command,\n  frameState,\n  modelMatrix,\n  cull,\n  boundingVolume,\n  debugShowBoundingVolume\n) {\n  // Use derived appearance command for morph and 2D\n  if (frameState.mode === SceneMode.MORPHING) {\n    command = command.derivedCommands.colorMorph;\n  } else if (frameState.mode !== SceneMode.SCENE3D) {\n    command = command.derivedCommands.color2D;\n  }\n  command.modelMatrix = modelMatrix;\n  command.boundingVolume = boundingVolume;\n  command.cull = cull;\n  command.debugShowBoundingVolume = debugShowBoundingVolume;\n\n  frameState.commandList.push(command);\n}\n\nfunction updateAndQueueCommands(\n  groundPolylinePrimitive,\n  frameState,\n  colorCommands,\n  pickCommands,\n  modelMatrix,\n  cull,\n  debugShowBoundingVolume\n) {\n  const primitive = groundPolylinePrimitive._primitive;\n\n  Primitive._updateBoundingVolumes(primitive, frameState, modelMatrix); // Expected to be identity - GroundPrimitives don't support other model matrices\n\n  let boundingSpheres;\n  if (frameState.mode === SceneMode.SCENE3D) {\n    boundingSpheres = primitive._boundingSphereWC;\n  } else if (frameState.mode === SceneMode.COLUMBUS_VIEW) {\n    boundingSpheres = primitive._boundingSphereCV;\n  } else if (\n    frameState.mode === SceneMode.SCENE2D &&\n    defined(primitive._boundingSphere2D)\n  ) {\n    boundingSpheres = primitive._boundingSphere2D;\n  } else if (defined(primitive._boundingSphereMorph)) {\n    boundingSpheres = primitive._boundingSphereMorph;\n  }\n\n  const morphing = frameState.mode === SceneMode.MORPHING;\n  const classificationType = groundPolylinePrimitive.classificationType;\n  const queueTerrainCommands =\n    classificationType !== ClassificationType.CESIUM_3D_TILE;\n  const queue3DTilesCommands =\n    classificationType !== ClassificationType.TERRAIN && !morphing;\n\n  let command;\n  const passes = frameState.passes;\n  if (passes.render || (passes.pick && primitive.allowPicking)) {\n    const colorLength = colorCommands.length;\n    for (let j = 0; j < colorLength; ++j) {\n      const boundingVolume = boundingSpheres[j];\n      if (queueTerrainCommands) {\n        command = colorCommands[j];\n        updateAndQueueCommand(\n          groundPolylinePrimitive,\n          command,\n          frameState,\n          modelMatrix,\n          cull,\n          boundingVolume,\n          debugShowBoundingVolume\n        );\n      }\n      if (queue3DTilesCommands) {\n        command = colorCommands[j].derivedCommands.tileset;\n        updateAndQueueCommand(\n          groundPolylinePrimitive,\n          command,\n          frameState,\n          modelMatrix,\n          cull,\n          boundingVolume,\n          debugShowBoundingVolume\n        );\n      }\n    }\n  }\n}\n\n/**\n * Called when {@link Viewer} or {@link CesiumWidget} render the scene to\n * get the draw commands needed to render this primitive.\n * <p>\n * Do not call this function directly.  This is documented just to\n * list the exceptions that may be propagated when the scene is rendered:\n * </p>\n *\n * @exception {DeveloperError} For synchronous GroundPolylinePrimitives, you must call GroundPolylinePrimitives.initializeTerrainHeights() and wait for the returned promise to resolve.\n * @exception {DeveloperError} All GeometryInstances must have color attributes to use PolylineColorAppearance with GroundPolylinePrimitive.\n */\nGroundPolylinePrimitive.prototype.update = function (frameState) {\n  if (!defined(this._primitive) && !defined(this.geometryInstances)) {\n    return;\n  }\n\n  if (!ApproximateTerrainHeights.initialized) {\n    //>>includeStart('debug', pragmas.debug);\n    if (!this.asynchronous) {\n      throw new DeveloperError(\n        \"For synchronous GroundPolylinePrimitives, you must call GroundPolylinePrimitives.initializeTerrainHeights() and wait for the returned promise to resolve.\"\n      );\n    }\n    //>>includeEnd('debug');\n\n    GroundPolylinePrimitive.initializeTerrainHeights();\n    return;\n  }\n\n  let i;\n\n  const that = this;\n  const primitiveOptions = this._primitiveOptions;\n  if (!defined(this._primitive)) {\n    const geometryInstances = Array.isArray(this.geometryInstances)\n      ? this.geometryInstances\n      : [this.geometryInstances];\n    const geometryInstancesLength = geometryInstances.length;\n    const groundInstances = new Array(geometryInstancesLength);\n\n    let attributes;\n\n    // Check if each instance has a color attribute.\n    for (i = 0; i < geometryInstancesLength; ++i) {\n      attributes = geometryInstances[i].attributes;\n      if (!defined(attributes) || !defined(attributes.color)) {\n        this._hasPerInstanceColors = false;\n        break;\n      }\n    }\n\n    for (i = 0; i < geometryInstancesLength; ++i) {\n      const geometryInstance = geometryInstances[i];\n      attributes = {};\n      const instanceAttributes = geometryInstance.attributes;\n      for (const attributeKey in instanceAttributes) {\n        if (instanceAttributes.hasOwnProperty(attributeKey)) {\n          attributes[attributeKey] = instanceAttributes[attributeKey];\n        }\n      }\n\n      // Automatically create line width attribute if not already given\n      if (!defined(attributes.width)) {\n        attributes.width = new GeometryInstanceAttribute({\n          componentDatatype: ComponentDatatype.UNSIGNED_BYTE,\n          componentsPerAttribute: 1.0,\n          value: [geometryInstance.geometry.width],\n        });\n      }\n\n      // Update each geometry for framestate.scene3DOnly = true and projection\n      geometryInstance.geometry._scene3DOnly = frameState.scene3DOnly;\n      GroundPolylineGeometry.setProjectionAndEllipsoid(\n        geometryInstance.geometry,\n        frameState.mapProjection\n      );\n\n      groundInstances[i] = new GeometryInstance({\n        geometry: geometryInstance.geometry,\n        attributes: attributes,\n        id: geometryInstance.id,\n        pickPrimitive: that,\n      });\n    }\n\n    primitiveOptions.geometryInstances = groundInstances;\n    primitiveOptions.appearance = this.appearance;\n\n    primitiveOptions._createShaderProgramFunction = function (\n      primitive,\n      frameState,\n      appearance\n    ) {\n      createShaderProgram(that, frameState, appearance);\n    };\n    primitiveOptions._createCommandsFunction = function (\n      primitive,\n      appearance,\n      material,\n      translucent,\n      twoPasses,\n      colorCommands,\n      pickCommands\n    ) {\n      createCommands(\n        that,\n        appearance,\n        material,\n        translucent,\n        colorCommands,\n        pickCommands\n      );\n    };\n    primitiveOptions._updateAndQueueCommandsFunction = function (\n      primitive,\n      frameState,\n      colorCommands,\n      pickCommands,\n      modelMatrix,\n      cull,\n      debugShowBoundingVolume,\n      twoPasses\n    ) {\n      updateAndQueueCommands(\n        that,\n        frameState,\n        colorCommands,\n        pickCommands,\n        modelMatrix,\n        cull,\n        debugShowBoundingVolume\n      );\n    };\n\n    this._primitive = new Primitive(primitiveOptions);\n  }\n\n  if (\n    this.appearance instanceof PolylineColorAppearance &&\n    !this._hasPerInstanceColors\n  ) {\n    throw new DeveloperError(\n      \"All GeometryInstances must have color attributes to use PolylineColorAppearance with GroundPolylinePrimitive.\"\n    );\n  }\n\n  this._primitive.appearance = this.appearance;\n  this._primitive.show = this.show;\n  this._primitive.debugShowBoundingVolume = this.debugShowBoundingVolume;\n  this._primitive.update(frameState);\n  frameState.afterRender.push(() => {\n    if (!this._ready && defined(this._primitive) && this._primitive.ready) {\n      this._ready = true;\n\n      if (this.releaseGeometryInstances) {\n        this.geometryInstances = undefined;\n      }\n    }\n  });\n};\n\n/**\n * Returns the modifiable per-instance attributes for a {@link GeometryInstance}.\n *\n * @param {*} id The id of the {@link GeometryInstance}.\n * @returns {object} The typed array in the attribute's format or undefined if the is no instance with id.\n *\n * @exception {DeveloperError} must call update before calling getGeometryInstanceAttributes.\n *\n * @example\n * const attributes = primitive.getGeometryInstanceAttributes('an id');\n * attributes.color = Cesium.ColorGeometryInstanceAttribute.toValue(Cesium.Color.AQUA);\n * attributes.show = Cesium.ShowGeometryInstanceAttribute.toValue(true);\n */\nGroundPolylinePrimitive.prototype.getGeometryInstanceAttributes = function (\n  id\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(this._primitive)) {\n    throw new DeveloperError(\n      \"must call update before calling getGeometryInstanceAttributes\"\n    );\n  }\n  //>>includeEnd('debug');\n  return this._primitive.getGeometryInstanceAttributes(id);\n};\n\n/**\n * Checks if the given Scene supports GroundPolylinePrimitives.\n * GroundPolylinePrimitives require support for the WEBGL_depth_texture extension.\n *\n * @param {Scene} scene The current scene.\n * @returns {boolean} Whether or not the current scene supports GroundPolylinePrimitives.\n */\nGroundPolylinePrimitive.isSupported = function (scene) {\n  return scene.frameState.context.depthTexture;\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see GroundPolylinePrimitive#destroy\n */\nGroundPolylinePrimitive.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * e = e && e.destroy();\n *\n * @see GroundPolylinePrimitive#isDestroyed\n */\nGroundPolylinePrimitive.prototype.destroy = function () {\n  this._primitive = this._primitive && this._primitive.destroy();\n  this._sp = this._sp && this._sp.destroy();\n\n  // Derived programs, destroyed above if they existed.\n  this._sp2D = undefined;\n  this._spMorph = undefined;\n\n  return destroyObject(this);\n};\nexport default GroundPolylinePrimitive;\n","import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\n\nconst defaultRepeat = new Cartesian2(1, 1);\nconst defaultTransparent = false;\nconst defaultColor = Color.WHITE;\n\n/**\n * A {@link MaterialProperty} that maps to image {@link Material} uniforms.\n * @alias ImageMaterialProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|string|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} [options.image] A Property specifying the Image, URL, Canvas, or Video.\n * @param {Property|Cartesian2} [options.repeat=new Cartesian2(1.0, 1.0)] A {@link Cartesian2} Property specifying the number of times the image repeats in each direction.\n * @param {Property|Color} [options.color=Color.WHITE] The color applied to the image\n * @param {Property|boolean} [options.transparent=false] Set to true when the image has transparency (for example, when a png has transparent sections)\n */\nfunction ImageMaterialProperty(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  this._definitionChanged = new Event();\n  this._image = undefined;\n  this._imageSubscription = undefined;\n  this._repeat = undefined;\n  this._repeatSubscription = undefined;\n  this._color = undefined;\n  this._colorSubscription = undefined;\n  this._transparent = undefined;\n  this._transparentSubscription = undefined;\n\n  this.image = options.image;\n  this.repeat = options.repeat;\n  this.color = options.color;\n  this.transparent = options.transparent;\n}\n\nObject.defineProperties(ImageMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof ImageMaterialProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        Property.isConstant(this._image) && Property.isConstant(this._repeat)\n      );\n    },\n  },\n\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof ImageMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the Property specifying Image, URL, Canvas, or Video to use.\n   * @memberof ImageMaterialProperty.prototype\n   * @type {Property|undefined}\n   */\n  image: createPropertyDescriptor(\"image\"),\n\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying the number of times the image repeats in each direction.\n   * @memberof ImageMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default new Cartesian2(1, 1)\n   */\n  repeat: createPropertyDescriptor(\"repeat\"),\n\n  /**\n   * Gets or sets the Color Property specifying the desired color applied to the image.\n   * @memberof ImageMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  color: createPropertyDescriptor(\"color\"),\n\n  /**\n   * Gets or sets the Boolean Property specifying whether the image has transparency\n   * @memberof ImageMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  transparent: createPropertyDescriptor(\"transparent\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {string} The type of material.\n */\nImageMaterialProperty.prototype.getType = function (time) {\n  return \"Image\";\n};\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nImageMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(result)) {\n    result = {};\n  }\n\n  result.image = Property.getValueOrUndefined(this._image, time);\n  result.repeat = Property.getValueOrClonedDefault(\n    this._repeat,\n    time,\n    defaultRepeat,\n    result.repeat\n  );\n  result.color = Property.getValueOrClonedDefault(\n    this._color,\n    time,\n    defaultColor,\n    result.color\n  );\n  if (Property.getValueOrDefault(this._transparent, time, defaultTransparent)) {\n    result.color.alpha = Math.min(0.99, result.color.alpha);\n  }\n\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nImageMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other ||\n    (other instanceof ImageMaterialProperty &&\n      Property.equals(this._image, other._image) &&\n      Property.equals(this._repeat, other._repeat) &&\n      Property.equals(this._color, other._color) &&\n      Property.equals(this._transparent, other._transparent))\n  );\n};\nexport default ImageMaterialProperty;\n","import Color from \"../Core/Color.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Resource from \"../Core/Resource.js\";\nimport ColorMaterialProperty from \"./ColorMaterialProperty.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport ImageMaterialProperty from \"./ImageMaterialProperty.js\";\n\nfunction createMaterialProperty(value) {\n  if (value instanceof Color) {\n    return new ColorMaterialProperty(value);\n  }\n\n  if (\n    typeof value === \"string\" ||\n    value instanceof Resource ||\n    value instanceof HTMLCanvasElement ||\n    value instanceof HTMLVideoElement\n  ) {\n    const result = new ImageMaterialProperty();\n    result.image = value;\n    return result;\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  throw new DeveloperError(`Unable to infer material type: ${value}`);\n  //>>includeEnd('debug');\n}\n\n/**\n * @private\n */\nfunction createMaterialPropertyDescriptor(name, configurable) {\n  return createPropertyDescriptor(name, configurable, createMaterialProperty);\n}\nexport default createMaterialPropertyDescriptor;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} BoxGraphics.ConstructorOptions\n *\n * Initialization options for the BoxGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the box.\n * @property {Property | Cartesian3} [dimensions] A {@link Cartesian3} Property specifying the length, width, and height of the box.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height from the entity position is relative to.\n * @property {Property | boolean} [fill=true] A boolean Property specifying whether the box is filled with the provided material.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to fill the box.\n * @property {Property | boolean} [outline=false] A boolean Property specifying whether the box is outlined.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the width of the outline.\n * @property {Property | ShadowMode} [shadows=ShadowMode.DISABLED] An enum Property specifying whether the box casts or receives shadows from light sources.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this box will be displayed.\n *\n */\n\n/**\n * Describes a box. The center position and orientation are determined by the containing {@link Entity}.\n *\n * @alias BoxGraphics\n * @constructor\n *\n * @param {BoxGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Box.html|Cesium Sandcastle Box Demo}\n */\nfunction BoxGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._dimensions = undefined;\n  this._dimensionsSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._fill = undefined;\n  this._fillSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._outline = undefined;\n  this._outlineSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(BoxGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof BoxGraphics.prototype\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the box.\n   * @memberof BoxGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets {@link Cartesian3} Property property specifying the length, width, and height of the box.\n   * @memberof BoxGraphics.prototype\n   * @type {Property|undefined}\n   */\n  dimensions: createPropertyDescriptor(\"dimensions\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof BoxGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the box is filled with the provided material.\n   * @memberof BoxGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  fill: createPropertyDescriptor(\"fill\"),\n\n  /**\n   * Gets or sets the material used to fill the box.\n   * @memberof BoxGraphics.prototype\n   * @type {MaterialProperty|undefined}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the Property specifying whether the box is outlined.\n   * @memberof BoxGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  outline: createPropertyDescriptor(\"outline\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof BoxGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * <p>\n   * Note: This property will be ignored on all major browsers on Windows platforms. For details, see (@link https://github.com/CesiumGS/cesium/issues/40}.\n   * </p>\n   * @memberof BoxGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the box\n   * casts or receives shadows from light sources.\n   * @memberof BoxGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.DISABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this box will be displayed.\n   * @memberof BoxGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {BoxGraphics} [result] The object onto which to store the result.\n * @returns {BoxGraphics} The modified result parameter or a new instance if one was not provided.\n */\nBoxGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new BoxGraphics(this);\n  }\n  result.show = this.show;\n  result.dimensions = this.dimensions;\n  result.heightReference = this.heightReference;\n  result.fill = this.fill;\n  result.material = this.material;\n  result.outline = this.outline;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.shadows = this.shadows;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {BoxGraphics} source The object to be merged into this object.\n */\nBoxGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.dimensions = defaultValue(this.dimensions, source.dimensions);\n  this.heightReference = defaultValue(\n    this.heightReference,\n    source.heightReference\n  );\n  this.fill = defaultValue(this.fill, source.fill);\n  this.material = defaultValue(this.material, source.material);\n  this.outline = defaultValue(this.outline, source.outline);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n};\nexport default BoxGraphics;\n","/**\n * Constants for identifying well-known reference frames.\n *\n * @enum {number}\n */\nconst ReferenceFrame = {\n  /**\n   * The fixed frame.\n   *\n   * @type {number}\n   * @constant\n   */\n  FIXED: 0,\n\n  /**\n   * The inertial frame.\n   *\n   * @type {number}\n   * @constant\n   */\n  INERTIAL: 1,\n};\nexport default Object.freeze(ReferenceFrame);\n","import Cartesian3 from \"../Core/Cartesian3.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport ReferenceFrame from \"../Core/ReferenceFrame.js\";\nimport Transforms from \"../Core/Transforms.js\";\n\n/**\n * The interface for all {@link Property} objects that define a world\n * location as a {@link Cartesian3} with an associated {@link ReferenceFrame}.\n * This type defines an interface and cannot be instantiated directly.\n *\n * @alias PositionProperty\n * @constructor\n * @abstract\n *\n * @see CompositePositionProperty\n * @see ConstantPositionProperty\n * @see SampledPositionProperty\n * @see TimeIntervalCollectionPositionProperty\n */\nfunction PositionProperty() {\n  DeveloperError.throwInstantiationError();\n}\n\nObject.defineProperties(PositionProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof PositionProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: DeveloperError.throwInstantiationError,\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof PositionProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: DeveloperError.throwInstantiationError,\n  },\n  /**\n   * Gets the reference frame that the position is defined in.\n   * @memberof PositionProperty.prototype\n   * @type {ReferenceFrame}\n   */\n  referenceFrame: {\n    get: DeveloperError.throwInstantiationError,\n  },\n});\n\n/**\n * Gets the value of the property at the provided time in the fixed frame.\n * @function\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3 | undefined} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPositionProperty.prototype.getValue = DeveloperError.throwInstantiationError;\n\n/**\n * Gets the value of the property at the provided time and in the provided reference frame.\n * @function\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3 | undefined} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPositionProperty.prototype.getValueInReferenceFrame =\n  DeveloperError.throwInstantiationError;\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n * @function\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nPositionProperty.prototype.equals = DeveloperError.throwInstantiationError;\n\nconst scratchMatrix3 = new Matrix3();\n\n/**\n * @private\n */\nPositionProperty.convertToReferenceFrame = function (\n  time,\n  value,\n  inputFrame,\n  outputFrame,\n  result\n) {\n  if (!defined(value)) {\n    return value;\n  }\n  if (!defined(result)) {\n    result = new Cartesian3();\n  }\n\n  if (inputFrame === outputFrame) {\n    return Cartesian3.clone(value, result);\n  }\n\n  let icrfToFixed = Transforms.computeIcrfToFixedMatrix(time, scratchMatrix3);\n  if (!defined(icrfToFixed)) {\n    icrfToFixed = Transforms.computeTemeToPseudoFixedMatrix(\n      time,\n      scratchMatrix3\n    );\n  }\n  if (inputFrame === ReferenceFrame.INERTIAL) {\n    return Matrix3.multiplyByVector(icrfToFixed, value, result);\n  }\n  if (inputFrame === ReferenceFrame.FIXED) {\n    return Matrix3.multiplyByVector(\n      Matrix3.transpose(icrfToFixed, scratchMatrix3),\n      value,\n      result\n    );\n  }\n};\nexport default PositionProperty;\n","import Cartesian3 from \"../Core/Cartesian3.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport ReferenceFrame from \"../Core/ReferenceFrame.js\";\nimport PositionProperty from \"./PositionProperty.js\";\n\n/**\n * A {@link PositionProperty} whose value does not change in respect to the\n * {@link ReferenceFrame} in which is it defined.\n *\n * @alias ConstantPositionProperty\n * @constructor\n *\n * @param {Cartesian3} [value] The property value.\n * @param {ReferenceFrame} [referenceFrame=ReferenceFrame.FIXED] The reference frame in which the position is defined.\n */\nfunction ConstantPositionProperty(value, referenceFrame) {\n  this._definitionChanged = new Event();\n  this._value = Cartesian3.clone(value);\n  this._referenceFrame = defaultValue(referenceFrame, ReferenceFrame.FIXED);\n}\n\nObject.defineProperties(ConstantPositionProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof ConstantPositionProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        !defined(this._value) || this._referenceFrame === ReferenceFrame.FIXED\n      );\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof ConstantPositionProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the reference frame in which the position is defined.\n   * @memberof ConstantPositionProperty.prototype\n   * @type {ReferenceFrame}\n   * @default ReferenceFrame.FIXED;\n   */\n  referenceFrame: {\n    get: function () {\n      return this._referenceFrame;\n    },\n  },\n});\n\n/**\n * Gets the value of the property at the provided time in the fixed frame.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nConstantPositionProperty.prototype.getValue = function (time, result) {\n  return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n};\n\n/**\n * Sets the value of the property.\n *\n * @param {Cartesian3} value The property value.\n * @param {ReferenceFrame} [referenceFrame=this.referenceFrame] The reference frame in which the position is defined.\n */\nConstantPositionProperty.prototype.setValue = function (value, referenceFrame) {\n  let definitionChanged = false;\n  if (!Cartesian3.equals(this._value, value)) {\n    definitionChanged = true;\n    this._value = Cartesian3.clone(value);\n  }\n  if (defined(referenceFrame) && this._referenceFrame !== referenceFrame) {\n    definitionChanged = true;\n    this._referenceFrame = referenceFrame;\n  }\n  if (definitionChanged) {\n    this._definitionChanged.raiseEvent(this);\n  }\n};\n\n/**\n * Gets the value of the property at the provided time and in the provided reference frame.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nConstantPositionProperty.prototype.getValueInReferenceFrame = function (\n  time,\n  referenceFrame,\n  result\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required.\");\n  }\n  if (!defined(referenceFrame)) {\n    throw new DeveloperError(\"referenceFrame is required.\");\n  }\n  //>>includeEnd('debug');\n\n  return PositionProperty.convertToReferenceFrame(\n    time,\n    this._value,\n    this._referenceFrame,\n    referenceFrame,\n    result\n  );\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nConstantPositionProperty.prototype.equals = function (other) {\n  return (\n    this === other ||\n    (other instanceof ConstantPositionProperty &&\n      Cartesian3.equals(this._value, other._value) &&\n      this._referenceFrame === other._referenceFrame)\n  );\n};\nexport default ConstantPositionProperty;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} CorridorGraphics.ConstructorOptions\n *\n * Initialization options for the CorridorGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the corridor.\n * @property {Property | Cartesian3[]} [positions] A Property specifying the array of {@link Cartesian3} positions that define the centerline of the corridor.\n * @property {Property | number} [width] A numeric Property specifying the distance between the edges of the corridor.\n * @property {Property | number} [height=0] A numeric Property specifying the altitude of the corridor relative to the ellipsoid surface.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height is relative to.\n * @property {Property | number} [extrudedHeight] A numeric Property specifying the altitude of the corridor's extruded face relative to the ellipsoid surface.\n * @property {Property | HeightReference} [extrudedHeightReference=HeightReference.NONE] A Property specifying what the extrudedHeight is relative to.\n * @property {Property | CornerType} [cornerType=CornerType.ROUNDED] A {@link CornerType} Property specifying the style of the corners.\n * @property {Property | number} [granularity=Cesium.Math.RADIANS_PER_DEGREE] A numeric Property specifying the distance between each latitude and longitude.\n * @property {Property | boolean} [fill=true] A boolean Property specifying whether the corridor is filled with the provided material.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to fill the corridor.\n * @property {Property | boolean} [outline=false] A boolean Property specifying whether the corridor is outlined.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the width of the outline.\n * @property {Property | ShadowMode} [shadows=ShadowMode.DISABLED] An enum Property specifying whether the corridor casts or receives shadows from light sources.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this corridor will be displayed.\n * @property {Property | ClassificationType} [classificationType=ClassificationType.BOTH] An enum Property specifying whether this corridor will classify terrain, 3D Tiles, or both when on the ground.\n * @property {ConstantProperty | number} [zIndex] A Property specifying the zIndex of the corridor, used for ordering.  Only has an effect if height and extrudedHeight are undefined, and if the corridor is static.\n */\n\n/**\n * Describes a corridor, which is a shape defined by a centerline and width that\n * conforms to the curvature of the globe. It can be placed on the surface or at altitude\n * and can optionally be extruded into a volume.\n *\n * @alias CorridorGraphics\n * @constructor\n *\n * @param {CorridorGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @see Entity\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Corridor.html|Cesium Sandcastle Corridor Demo}\n */\nfunction CorridorGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._positions = undefined;\n  this._positionsSubscription = undefined;\n  this._width = undefined;\n  this._widthSubscription = undefined;\n  this._height = undefined;\n  this._heightSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._extrudedHeight = undefined;\n  this._extrudedHeightSubscription = undefined;\n  this._extrudedHeightReference = undefined;\n  this._extrudedHeightReferenceSubscription = undefined;\n  this._cornerType = undefined;\n  this._cornerTypeSubscription = undefined;\n  this._granularity = undefined;\n  this._granularitySubscription = undefined;\n  this._fill = undefined;\n  this._fillSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._outline = undefined;\n  this._outlineSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n  this._classificationType = undefined;\n  this._classificationTypeSubscription = undefined;\n  this._zIndex = undefined;\n  this._zIndexSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(CorridorGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof CorridorGraphics.prototype\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the corridor.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets a Property specifying the array of {@link Cartesian3} positions that define the centerline of the corridor.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   */\n  positions: createPropertyDescriptor(\"positions\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   */\n  width: createPropertyDescriptor(\"width\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the altitude of the corridor.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0.0\n   */\n  height: createPropertyDescriptor(\"height\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the altitude of the corridor extrusion.\n   * Setting this property creates a corridor shaped volume starting at height and ending\n   * at this altitude.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   */\n  extrudedHeight: createPropertyDescriptor(\"extrudedHeight\"),\n\n  /**\n   * Gets or sets the Property specifying the extruded {@link HeightReference}.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  extrudedHeightReference: createPropertyDescriptor(\"extrudedHeightReference\"),\n\n  /**\n   * Gets or sets the {@link CornerType} Property specifying how corners are styled.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   * @default CornerType.ROUNDED\n   */\n  cornerType: createPropertyDescriptor(\"cornerType\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the sampling distance between each latitude and longitude point.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   * @default {CesiumMath.RADIANS_PER_DEGREE}\n   */\n  granularity: createPropertyDescriptor(\"granularity\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the corridor is filled with the provided material.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  fill: createPropertyDescriptor(\"fill\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to fill the corridor.\n   * @memberof CorridorGraphics.prototype\n   * @type {MaterialProperty|undefined}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the Property specifying whether the corridor is outlined.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  outline: createPropertyDescriptor(\"outline\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * <p>\n   * Note: This property will be ignored on all major browsers on Windows platforms. For details, see (@link https://github.com/CesiumGS/cesium/issues/40}.\n   * </p>\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the corridor\n   * casts or receives shadows from light sources.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.DISABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this corridor will be displayed.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n\n  /**\n   * Gets or sets the {@link ClassificationType} Property specifying whether this corridor will classify terrain, 3D Tiles, or both when on the ground.\n   * @memberof CorridorGraphics.prototype\n   * @type {Property|undefined}\n   * @default ClassificationType.BOTH\n   */\n  classificationType: createPropertyDescriptor(\"classificationType\"),\n\n  /**\n   * Gets or sets the zIndex Property specifying the ordering of the corridor.  Only has an effect if the coridor is static and neither height or exturdedHeight are specified.\n   * @memberof CorridorGraphics.prototype\n   * @type {ConstantProperty|undefined}\n   * @default 0\n   */\n  zIndex: createPropertyDescriptor(\"zIndex\"),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {CorridorGraphics} [result] The object onto which to store the result.\n * @returns {CorridorGraphics} The modified result parameter or a new instance if one was not provided.\n */\nCorridorGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new CorridorGraphics(this);\n  }\n  result.show = this.show;\n  result.positions = this.positions;\n  result.width = this.width;\n  result.height = this.height;\n  result.heightReference = this.heightReference;\n  result.extrudedHeight = this.extrudedHeight;\n  result.extrudedHeightReference = this.extrudedHeightReference;\n  result.cornerType = this.cornerType;\n  result.granularity = this.granularity;\n  result.fill = this.fill;\n  result.material = this.material;\n  result.outline = this.outline;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.shadows = this.shadows;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  result.classificationType = this.classificationType;\n  result.zIndex = this.zIndex;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {CorridorGraphics} source The object to be merged into this object.\n */\nCorridorGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.positions = defaultValue(this.positions, source.positions);\n  this.width = defaultValue(this.width, source.width);\n  this.height = defaultValue(this.height, source.height);\n  this.heightReference = defaultValue(\n    this.heightReference,\n    source.heightReference\n  );\n  this.extrudedHeight = defaultValue(\n    this.extrudedHeight,\n    source.extrudedHeight\n  );\n  this.extrudedHeightReference = defaultValue(\n    this.extrudedHeightReference,\n    source.extrudedHeightReference\n  );\n  this.cornerType = defaultValue(this.cornerType, source.cornerType);\n  this.granularity = defaultValue(this.granularity, source.granularity);\n  this.fill = defaultValue(this.fill, source.fill);\n  this.material = defaultValue(this.material, source.material);\n  this.outline = defaultValue(this.outline, source.outline);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n  this.classificationType = defaultValue(\n    this.classificationType,\n    source.classificationType\n  );\n  this.zIndex = defaultValue(this.zIndex, source.zIndex);\n};\nexport default CorridorGraphics;\n","import createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\nfunction createRawProperty(value) {\n  return value;\n}\n\n/**\n * @private\n */\nfunction createRawPropertyDescriptor(name, configurable) {\n  return createPropertyDescriptor(name, configurable, createRawProperty);\n}\nexport default createRawPropertyDescriptor;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} CylinderGraphics.ConstructorOptions\n *\n * Initialization options for the CylinderGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the cylinder.\n * @property {Property | number} [length] A numeric Property specifying the length of the cylinder.\n * @property {Property | number} [topRadius] A numeric Property specifying the radius of the top of the cylinder.\n * @property {Property | number} [bottomRadius] A numeric Property specifying the radius of the bottom of the cylinder.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height from the entity position is relative to.\n * @property {Property | boolean} [fill=true] A boolean Property specifying whether the cylinder is filled with the provided material.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to fill the cylinder.\n * @property {Property | boolean} [outline=false] A boolean Property specifying whether the cylinder is outlined.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the width of the outline.\n * @property {Property | number} [numberOfVerticalLines=16] A numeric Property specifying the number of vertical lines to draw along the perimeter for the outline.\n * @property {Property | number} [slices=128] The number of edges around the perimeter of the cylinder.\n * @property {Property | ShadowMode} [shadows=ShadowMode.DISABLED] An enum Property specifying whether the cylinder casts or receives shadows from light sources.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this cylinder will be displayed.\n */\n\n/**\n * Describes a cylinder, truncated cone, or cone defined by a length, top radius, and bottom radius.\n * The center position and orientation are determined by the containing {@link Entity}.\n *\n * @alias CylinderGraphics\n * @constructor\n *\n * @param {CylinderGraphics.ConstructorOptions} [options] Object describing initialization options\n */\nfunction CylinderGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._length = undefined;\n  this._lengthSubscription = undefined;\n  this._topRadius = undefined;\n  this._topRadiusSubscription = undefined;\n  this._bottomRadius = undefined;\n  this._bottomRadiusSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._fill = undefined;\n  this._fillSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._outline = undefined;\n  this._outlineSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._numberOfVerticalLines = undefined;\n  this._numberOfVerticalLinesSubscription = undefined;\n  this._slices = undefined;\n  this._slicesSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(CylinderGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof CylinderGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the cylinder.\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the length of the cylinder.\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   */\n  length: createPropertyDescriptor(\"length\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the radius of the top of the cylinder.\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   */\n  topRadius: createPropertyDescriptor(\"topRadius\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the radius of the bottom of the cylinder.\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   */\n  bottomRadius: createPropertyDescriptor(\"bottomRadius\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the cylinder is filled with the provided material.\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  fill: createPropertyDescriptor(\"fill\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to fill the cylinder.\n   * @memberof CylinderGraphics.prototype\n   * @type {MaterialProperty|undefined}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the cylinder is outlined.\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  outline: createPropertyDescriptor(\"outline\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * <p>\n   * Note: This property will be ignored on all major browsers on Windows platforms. For details, see (@link https://github.com/CesiumGS/cesium/issues/40}.\n   * </p>\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Gets or sets the Property specifying the number of vertical lines to draw along the perimeter for the outline.\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   * @default 16\n   */\n  numberOfVerticalLines: createPropertyDescriptor(\"numberOfVerticalLines\"),\n\n  /**\n   * Gets or sets the Property specifying the number of edges around the perimeter of the cylinder.\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   * @default 128\n   */\n  slices: createPropertyDescriptor(\"slices\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the cylinder\n   * casts or receives shadows from light sources.\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.DISABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this cylinder will be displayed.\n   * @memberof CylinderGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {CylinderGraphics} [result] The object onto which to store the result.\n * @returns {CylinderGraphics} The modified result parameter or a new instance if one was not provided.\n */\nCylinderGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new CylinderGraphics(this);\n  }\n  result.show = this.show;\n  result.length = this.length;\n  result.topRadius = this.topRadius;\n  result.bottomRadius = this.bottomRadius;\n  result.heightReference = this.heightReference;\n  result.fill = this.fill;\n  result.material = this.material;\n  result.outline = this.outline;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.numberOfVerticalLines = this.numberOfVerticalLines;\n  result.slices = this.slices;\n  result.shadows = this.shadows;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {CylinderGraphics} source The object to be merged into this object.\n */\nCylinderGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.length = defaultValue(this.length, source.length);\n  this.topRadius = defaultValue(this.topRadius, source.topRadius);\n  this.bottomRadius = defaultValue(this.bottomRadius, source.bottomRadius);\n  this.heightReference = defaultValue(\n    this.heightReference,\n    source.heightReference\n  );\n  this.fill = defaultValue(this.fill, source.fill);\n  this.material = defaultValue(this.material, source.material);\n  this.outline = defaultValue(this.outline, source.outline);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.numberOfVerticalLines = defaultValue(\n    this.numberOfVerticalLines,\n    source.numberOfVerticalLines\n  );\n  this.slices = defaultValue(this.slices, source.slices);\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n};\nexport default CylinderGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} EllipseGraphics.ConstructorOptions\n *\n * Initialization options for the EllipseGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the ellipse.\n * @property {Property | number} [semiMajorAxis] The numeric Property specifying the semi-major axis.\n * @property {Property | number} [semiMinorAxis] The numeric Property specifying the semi-minor axis.\n * @property {Property | number} [height=0] A numeric Property specifying the altitude of the ellipse relative to the ellipsoid surface.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height is relative to.\n * @property {Property | number} [extrudedHeight] A numeric Property specifying the altitude of the ellipse's extruded face relative to the ellipsoid surface.\n * @property {Property | HeightReference} [extrudedHeightReference=HeightReference.NONE] A Property specifying what the extrudedHeight is relative to.\n * @property {Property | number} [rotation=0.0] A numeric property specifying the rotation of the ellipse counter-clockwise from north.\n * @property {Property | number} [stRotation=0.0] A numeric property specifying the rotation of the ellipse texture counter-clockwise from north.\n * @property {Property | number} [granularity=Cesium.Math.RADIANS_PER_DEGREE] A numeric Property specifying the angular distance between points on the ellipse.\n * @property {Property | boolean} [fill=true] A boolean Property specifying whether the ellipse is filled with the provided material.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to fill the ellipse.\n * @property {Property | boolean} [outline=false] A boolean Property specifying whether the ellipse is outlined.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the width of the outline.\n * @property {Property | number} [numberOfVerticalLines=16] A numeric Property specifying the number of vertical lines to draw along the perimeter for the outline.\n * @property {Property | ShadowMode} [shadows=ShadowMode.DISABLED] An enum Property specifying whether the ellipse casts or receives shadows from light sources.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this ellipse will be displayed.\n * @property {Property | ClassificationType} [classificationType=ClassificationType.BOTH] An enum Property specifying whether this ellipse will classify terrain, 3D Tiles, or both when on the ground.\n * @property {ConstantProperty | number} [zIndex=0] A property specifying the zIndex of the Ellipse.  Used for ordering ground geometry.  Only has an effect if the ellipse is constant and neither height or exturdedHeight are specified.\n */\n\n/**\n * Describes an ellipse defined by a center point and semi-major and semi-minor axes.\n * The ellipse conforms to the curvature of the globe and can be placed on the surface or\n * at altitude and can optionally be extruded into a volume.\n * The center point is determined by the containing {@link Entity}.\n *\n * @alias EllipseGraphics\n * @constructor\n *\n * @param {EllipseGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Circles and Ellipses.html|Cesium Sandcastle Circles and Ellipses Demo}\n */\nfunction EllipseGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._semiMajorAxis = undefined;\n  this._semiMajorAxisSubscription = undefined;\n  this._semiMinorAxis = undefined;\n  this._semiMinorAxisSubscription = undefined;\n  this._height = undefined;\n  this._heightSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._extrudedHeight = undefined;\n  this._extrudedHeightSubscription = undefined;\n  this._extrudedHeightReference = undefined;\n  this._extrudedHeightReferenceSubscription = undefined;\n  this._rotation = undefined;\n  this._rotationSubscription = undefined;\n  this._stRotation = undefined;\n  this._stRotationSubscription = undefined;\n  this._granularity = undefined;\n  this._granularitySubscription = undefined;\n  this._fill = undefined;\n  this._fillSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._outline = undefined;\n  this._outlineSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._numberOfVerticalLines = undefined;\n  this._numberOfVerticalLinesSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n  this._classificationType = undefined;\n  this._classificationTypeSubscription = undefined;\n  this._zIndex = undefined;\n  this._zIndexSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(EllipseGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof EllipseGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the ellipse.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the semi-major axis.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   */\n  semiMajorAxis: createPropertyDescriptor(\"semiMajorAxis\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the semi-minor axis.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   */\n  semiMinorAxis: createPropertyDescriptor(\"semiMinorAxis\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the altitude of the ellipse.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0.0\n   */\n  height: createPropertyDescriptor(\"height\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the altitude of the ellipse extrusion.\n   * Setting this property creates volume starting at height and ending at this altitude.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   */\n  extrudedHeight: createPropertyDescriptor(\"extrudedHeight\"),\n\n  /**\n   * Gets or sets the Property specifying the extruded {@link HeightReference}.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  extrudedHeightReference: createPropertyDescriptor(\"extrudedHeightReference\"),\n\n  /**\n   * Gets or sets the numeric property specifying the rotation of the ellipse counter-clockwise from north.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0\n   */\n  rotation: createPropertyDescriptor(\"rotation\"),\n\n  /**\n   * Gets or sets the numeric property specifying the rotation of the ellipse texture counter-clockwise from north.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0\n   */\n  stRotation: createPropertyDescriptor(\"stRotation\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the angular distance between points on the ellipse.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default {CesiumMath.RADIANS_PER_DEGREE}\n   */\n  granularity: createPropertyDescriptor(\"granularity\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the ellipse is filled with the provided material.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  fill: createPropertyDescriptor(\"fill\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to fill the ellipse.\n   * @memberof EllipseGraphics.prototype\n   * @type {MaterialProperty|undefined}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the Property specifying whether the ellipse is outlined.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  outline: createPropertyDescriptor(\"outline\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * <p>\n   * Note: This property will be ignored on all major browsers on Windows platforms. For details, see (@link https://github.com/CesiumGS/cesium/issues/40}.\n   * </p>\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the number of vertical lines to draw along the perimeter for the outline.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default 16\n   */\n  numberOfVerticalLines: createPropertyDescriptor(\"numberOfVerticalLines\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the ellipse\n   * casts or receives shadows from light sources.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.DISABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this ellipse will be displayed.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n\n  /**\n   * Gets or sets the {@link ClassificationType} Property specifying whether this ellipse will classify terrain, 3D Tiles, or both when on the ground.\n   * @memberof EllipseGraphics.prototype\n   * @type {Property|undefined}\n   * @default ClassificationType.BOTH\n   */\n  classificationType: createPropertyDescriptor(\"classificationType\"),\n\n  /**\n   * Gets or sets the zIndex Property specifying the ellipse ordering.  Only has an effect if the ellipse is constant and neither height or extrudedHeight are specified\n   * @memberof EllipseGraphics.prototype\n   * @type {ConstantProperty|undefined}\n   * @default 0\n   */\n  zIndex: createPropertyDescriptor(\"zIndex\"),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {EllipseGraphics} [result] The object onto which to store the result.\n * @returns {EllipseGraphics} The modified result parameter or a new instance if one was not provided.\n */\nEllipseGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new EllipseGraphics(this);\n  }\n  result.show = this.show;\n  result.semiMajorAxis = this.semiMajorAxis;\n  result.semiMinorAxis = this.semiMinorAxis;\n  result.height = this.height;\n  result.heightReference = this.heightReference;\n  result.extrudedHeight = this.extrudedHeight;\n  result.extrudedHeightReference = this.extrudedHeightReference;\n  result.rotation = this.rotation;\n  result.stRotation = this.stRotation;\n  result.granularity = this.granularity;\n  result.fill = this.fill;\n  result.material = this.material;\n  result.outline = this.outline;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.numberOfVerticalLines = this.numberOfVerticalLines;\n  result.shadows = this.shadows;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  result.classificationType = this.classificationType;\n  result.zIndex = this.zIndex;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {EllipseGraphics} source The object to be merged into this object.\n */\nEllipseGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.semiMajorAxis = defaultValue(this.semiMajorAxis, source.semiMajorAxis);\n  this.semiMinorAxis = defaultValue(this.semiMinorAxis, source.semiMinorAxis);\n  this.height = defaultValue(this.height, source.height);\n  this.heightReference = defaultValue(\n    this.heightReference,\n    source.heightReference\n  );\n  this.extrudedHeight = defaultValue(\n    this.extrudedHeight,\n    source.extrudedHeight\n  );\n  this.extrudedHeightReference = defaultValue(\n    this.extrudedHeightReference,\n    source.extrudedHeightReference\n  );\n  this.rotation = defaultValue(this.rotation, source.rotation);\n  this.stRotation = defaultValue(this.stRotation, source.stRotation);\n  this.granularity = defaultValue(this.granularity, source.granularity);\n  this.fill = defaultValue(this.fill, source.fill);\n  this.material = defaultValue(this.material, source.material);\n  this.outline = defaultValue(this.outline, source.outline);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.numberOfVerticalLines = defaultValue(\n    this.numberOfVerticalLines,\n    source.numberOfVerticalLines\n  );\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n  this.classificationType = defaultValue(\n    this.classificationType,\n    source.classificationType\n  );\n  this.zIndex = defaultValue(this.zIndex, source.zIndex);\n};\nexport default EllipseGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} EllipsoidGraphics.ConstructorOptions\n *\n * Initialization options for the EllipsoidGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the ellipsoid.\n * @property {Property | Cartesian3} [radii] A {@link Cartesian3} Property specifying the radii of the ellipsoid.\n * @property {Property | Cartesian3} [innerRadii] A {@link Cartesian3} Property specifying the inner radii of the ellipsoid.\n * @property {Property | number} [minimumClock=0.0] A Property specifying the minimum clock angle of the ellipsoid.\n * @property {Property | number} [maximumClock=2*PI] A Property specifying the maximum clock angle of the ellipsoid.\n * @property {Property | number} [minimumCone=0.0] A Property specifying the minimum cone angle of the ellipsoid.\n * @property {Property | number} [maximumCone=PI] A Property specifying the maximum cone angle of the ellipsoid.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height from the entity position is relative to.\n * @property {Property | boolean} [fill=true] A boolean Property specifying whether the ellipsoid is filled with the provided material.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to fill the ellipsoid.\n * @property {Property | boolean} [outline=false] A boolean Property specifying whether the ellipsoid is outlined.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the width of the outline.\n * @property {Property | number} [stackPartitions=64] A Property specifying the number of stacks.\n * @property {Property | number} [slicePartitions=64] A Property specifying the number of radial slices.\n * @property {Property | number} [subdivisions=128] A Property specifying the number of samples per outline ring, determining the granularity of the curvature.\n * @property {Property | ShadowMode} [shadows=ShadowMode.DISABLED] An enum Property specifying whether the ellipsoid casts or receives shadows from light sources.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this ellipsoid will be displayed.\n */\n\n/**\n * Describe an ellipsoid or sphere.  The center position and orientation are determined by the containing {@link Entity}.\n *\n * @alias EllipsoidGraphics\n * @constructor\n *\n * @param {EllipsoidGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Spheres%20and%20Ellipsoids.html|Cesium Sandcastle Spheres and Ellipsoids Demo}\n */\nfunction EllipsoidGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._radii = undefined;\n  this._radiiSubscription = undefined;\n  this._innerRadii = undefined;\n  this._innerRadiiSubscription = undefined;\n  this._minimumClock = undefined;\n  this._minimumClockSubscription = undefined;\n  this._maximumClock = undefined;\n  this._maximumClockSubscription = undefined;\n  this._minimumCone = undefined;\n  this._minimumConeSubscription = undefined;\n  this._maximumCone = undefined;\n  this._maximumConeSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._fill = undefined;\n  this._fillSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._outline = undefined;\n  this._outlineSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._stackPartitions = undefined;\n  this._stackPartitionsSubscription = undefined;\n  this._slicePartitions = undefined;\n  this._slicePartitionsSubscription = undefined;\n  this._subdivisions = undefined;\n  this._subdivisionsSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(EllipsoidGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof EllipsoidGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the ellipsoid.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the {@link Cartesian3} {@link Property} specifying the radii of the ellipsoid.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   */\n  radii: createPropertyDescriptor(\"radii\"),\n\n  /**\n   * Gets or sets the {@link Cartesian3} {@link Property} specifying the inner radii of the ellipsoid.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default radii\n   */\n  innerRadii: createPropertyDescriptor(\"innerRadii\"),\n\n  /**\n   * Gets or sets the Property specifying the minimum clock angle of the ellipsoid.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0.0\n   */\n  minimumClock: createPropertyDescriptor(\"minimumClock\"),\n\n  /**\n   * Gets or sets the Property specifying the maximum clock angle of the ellipsoid.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default 2*PI\n   */\n  maximumClock: createPropertyDescriptor(\"maximumClock\"),\n\n  /**\n   * Gets or sets the Property specifying the minimum cone angle of the ellipsoid.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0.0\n   */\n  minimumCone: createPropertyDescriptor(\"minimumCone\"),\n\n  /**\n   * Gets or sets the Property specifying the maximum cone angle of the ellipsoid.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default PI\n   */\n  maximumCone: createPropertyDescriptor(\"maximumCone\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the ellipsoid is filled with the provided material.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  fill: createPropertyDescriptor(\"fill\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to fill the ellipsoid.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {MaterialProperty}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the Property specifying whether the ellipsoid is outlined.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  outline: createPropertyDescriptor(\"outline\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * <p>\n   * Note: This property will be ignored on all major browsers on Windows platforms. For details, see (@link https://github.com/CesiumGS/cesium/issues/40}.\n   * </p>\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Gets or sets the Property specifying the number of stacks.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default 64\n   */\n  stackPartitions: createPropertyDescriptor(\"stackPartitions\"),\n\n  /**\n   * Gets or sets the Property specifying the number of radial slices per 360 degrees.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default 64\n   */\n  slicePartitions: createPropertyDescriptor(\"slicePartitions\"),\n\n  /**\n   * Gets or sets the Property specifying the number of samples per outline ring, determining the granularity of the curvature.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default 128\n   */\n  subdivisions: createPropertyDescriptor(\"subdivisions\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the ellipsoid\n   * casts or receives shadows from light sources.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.DISABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this ellipsoid will be displayed.\n   * @memberof EllipsoidGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {EllipsoidGraphics} [result] The object onto which to store the result.\n * @returns {EllipsoidGraphics} The modified result parameter or a new instance if one was not provided.\n */\nEllipsoidGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new EllipsoidGraphics(this);\n  }\n  result.show = this.show;\n  result.radii = this.radii;\n  result.innerRadii = this.innerRadii;\n  result.minimumClock = this.minimumClock;\n  result.maximumClock = this.maximumClock;\n  result.minimumCone = this.minimumCone;\n  result.maximumCone = this.maximumCone;\n  result.heightReference = this.heightReference;\n  result.fill = this.fill;\n  result.material = this.material;\n  result.outline = this.outline;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.stackPartitions = this.stackPartitions;\n  result.slicePartitions = this.slicePartitions;\n  result.subdivisions = this.subdivisions;\n  result.shadows = this.shadows;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {EllipsoidGraphics} source The object to be merged into this object.\n */\nEllipsoidGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.radii = defaultValue(this.radii, source.radii);\n  this.innerRadii = defaultValue(this.innerRadii, source.innerRadii);\n  this.minimumClock = defaultValue(this.minimumClock, source.minimumClock);\n  this.maximumClock = defaultValue(this.maximumClock, source.maximumClock);\n  this.minimumCone = defaultValue(this.minimumCone, source.minimumCone);\n  this.maximumCone = defaultValue(this.maximumCone, source.maximumCone);\n  this.heightReference = defaultValue(\n    this.heightReference,\n    source.heightReference\n  );\n  this.fill = defaultValue(this.fill, source.fill);\n  this.material = defaultValue(this.material, source.material);\n  this.outline = defaultValue(this.outline, source.outline);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.stackPartitions = defaultValue(\n    this.stackPartitions,\n    source.stackPartitions\n  );\n  this.slicePartitions = defaultValue(\n    this.slicePartitions,\n    source.slicePartitions\n  );\n  this.subdivisions = defaultValue(this.subdivisions, source.subdivisions);\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n};\nexport default EllipsoidGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} LabelGraphics.ConstructorOptions\n *\n * Initialization options for the LabelGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the label.\n * @property {Property | string} [text] A Property specifying the text. Explicit newlines '\\n' are supported.\n * @property {Property | string} [font='30px sans-serif'] A Property specifying the CSS font.\n * @property {Property | LabelStyle} [style=LabelStyle.FILL] A Property specifying the {@link LabelStyle}.\n * @property {Property | number} [scale=1.0] A numeric Property specifying the scale to apply to the text.\n * @property {Property | boolean} [showBackground=false] A boolean Property specifying the visibility of the background behind the label.\n * @property {Property | Color} [backgroundColor=new Color(0.165, 0.165, 0.165, 0.8)] A Property specifying the background {@link Color}.\n * @property {Property | Cartesian2} [backgroundPadding=new Cartesian2(7, 5)] A {@link Cartesian2} Property specifying the horizontal and vertical background padding in pixels.\n * @property {Property | Cartesian2} [pixelOffset=Cartesian2.ZERO] A {@link Cartesian2} Property specifying the pixel offset.\n * @property {Property | Cartesian3} [eyeOffset=Cartesian3.ZERO] A {@link Cartesian3} Property specifying the eye offset.\n * @property {Property | HorizontalOrigin} [horizontalOrigin=HorizontalOrigin.CENTER] A Property specifying the {@link HorizontalOrigin}.\n * @property {Property | VerticalOrigin} [verticalOrigin=VerticalOrigin.CENTER] A Property specifying the {@link VerticalOrigin}.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height is relative to.\n * @property {Property | Color} [fillColor=Color.WHITE] A Property specifying the fill {@link Color}.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the outline {@link Color}.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the outline width.\n * @property {Property | NearFarScalar} [translucencyByDistance] A {@link NearFarScalar} Property used to set translucency based on distance from the camera.\n * @property {Property | NearFarScalar} [pixelOffsetScaleByDistance] A {@link NearFarScalar} Property used to set pixelOffset based on distance from the camera.\n * @property {Property | NearFarScalar} [scaleByDistance] A {@link NearFarScalar} Property used to set scale based on distance from the camera.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this label will be displayed.\n * @property {Property | number} [disableDepthTestDistance] A Property specifying the distance from the camera at which to disable the depth test to.\n */\n\n/**\n * Describes a two dimensional label located at the position of the containing {@link Entity}.\n * <p>\n * <div align='center'>\n * <img src='Images/Label.png' width='400' height='300' /><br />\n * Example labels\n * </div>\n * </p>\n *\n * @alias LabelGraphics\n * @constructor\n *\n * @param {LabelGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Labels.html|Cesium Sandcastle Labels Demo}\n */\nfunction LabelGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._text = undefined;\n  this._textSubscription = undefined;\n  this._font = undefined;\n  this._fontSubscription = undefined;\n  this._style = undefined;\n  this._styleSubscription = undefined;\n  this._scale = undefined;\n  this._scaleSubscription = undefined;\n  this._showBackground = undefined;\n  this._showBackgroundSubscription = undefined;\n  this._backgroundColor = undefined;\n  this._backgroundColorSubscription = undefined;\n  this._backgroundPadding = undefined;\n  this._backgroundPaddingSubscription = undefined;\n  this._pixelOffset = undefined;\n  this._pixelOffsetSubscription = undefined;\n  this._eyeOffset = undefined;\n  this._eyeOffsetSubscription = undefined;\n  this._horizontalOrigin = undefined;\n  this._horizontalOriginSubscription = undefined;\n  this._verticalOrigin = undefined;\n  this._verticalOriginSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._fillColor = undefined;\n  this._fillColorSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._translucencyByDistance = undefined;\n  this._translucencyByDistanceSubscription = undefined;\n  this._pixelOffsetScaleByDistance = undefined;\n  this._pixelOffsetScaleByDistanceSubscription = undefined;\n  this._scaleByDistance = undefined;\n  this._scaleByDistanceSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n  this._disableDepthTestDistance = undefined;\n  this._disableDepthTestDistanceSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(LabelGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof LabelGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the label.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the string Property specifying the text of the label.\n   * Explicit newlines '\\n' are supported.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  text: createPropertyDescriptor(\"text\"),\n\n  /**\n   * Gets or sets the string Property specifying the font in CSS syntax.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/font|CSS font on MDN}\n   */\n  font: createPropertyDescriptor(\"font\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link LabelStyle}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  style: createPropertyDescriptor(\"style\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the uniform scale to apply to the image.\n   * A scale greater than <code>1.0</code> enlarges the label while a scale less than <code>1.0</code> shrinks it.\n   * <p>\n   * <div align='center'>\n   * <img src='Images/Label.setScale.png' width='400' height='300' /><br/>\n   * From left to right in the above image, the scales are <code>0.5</code>, <code>1.0</code>,\n   * and <code>2.0</code>.\n   * </div>\n   * </p>\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  scale: createPropertyDescriptor(\"scale\"),\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the background behind the label.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  showBackground: createPropertyDescriptor(\"showBackground\"),\n\n  /**\n   * Gets or sets the Property specifying the background {@link Color}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default new Color(0.165, 0.165, 0.165, 0.8)\n   */\n  backgroundColor: createPropertyDescriptor(\"backgroundColor\"),\n\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying the label's horizontal and vertical\n   * background padding in pixels.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default new Cartesian2(7, 5)\n   */\n  backgroundPadding: createPropertyDescriptor(\"backgroundPadding\"),\n\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying the label's pixel offset in screen space\n   * from the origin of this label.  This is commonly used to align multiple labels and labels at\n   * the same position, e.g., an image and text.  The screen space origin is the top, left corner of the\n   * canvas; <code>x</code> increases from left to right, and <code>y</code> increases from top to bottom.\n   * <p>\n   * <div align='center'>\n   * <table border='0' cellpadding='5'><tr>\n   * <td align='center'><code>default</code><br/><img src='Images/Label.setPixelOffset.default.png' width='250' height='188' /></td>\n   * <td align='center'><code>l.pixeloffset = new Cartesian2(25, 75);</code><br/><img src='Images/Label.setPixelOffset.x50y-25.png' width='250' height='188' /></td>\n   * </tr></table>\n   * The label's origin is indicated by the yellow point.\n   * </div>\n   * </p>\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default Cartesian2.ZERO\n   */\n  pixelOffset: createPropertyDescriptor(\"pixelOffset\"),\n\n  /**\n   * Gets or sets the {@link Cartesian3} Property specifying the label's offset in eye coordinates.\n   * Eye coordinates is a left-handed coordinate system, where <code>x</code> points towards the viewer's\n   * right, <code>y</code> points up, and <code>z</code> points into the screen.\n   * <p>\n   * An eye offset is commonly used to arrange multiple labels or objects at the same position, e.g., to\n   * arrange a label above its corresponding 3D model.\n   * </p>\n   * Below, the label is positioned at the center of the Earth but an eye offset makes it always\n   * appear on top of the Earth regardless of the viewer's or Earth's orientation.\n   * <p>\n   * <div align='center'>\n   * <table border='0' cellpadding='5'><tr>\n   * <td align='center'><img src='Images/Billboard.setEyeOffset.one.png' width='250' height='188' /></td>\n   * <td align='center'><img src='Images/Billboard.setEyeOffset.two.png' width='250' height='188' /></td>\n   * </tr></table>\n   * <code>l.eyeOffset = new Cartesian3(0.0, 8000000.0, 0.0);</code><br /><br />\n   * </div>\n   * </p>\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default Cartesian3.ZERO\n   */\n  eyeOffset: createPropertyDescriptor(\"eyeOffset\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HorizontalOrigin}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  horizontalOrigin: createPropertyDescriptor(\"horizontalOrigin\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link VerticalOrigin}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  verticalOrigin: createPropertyDescriptor(\"verticalOrigin\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n\n  /**\n   * Gets or sets the Property specifying the fill {@link Color}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  fillColor: createPropertyDescriptor(\"fillColor\"),\n\n  /**\n   * Gets or sets the Property specifying the outline {@link Color}.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the outline width.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Gets or sets {@link NearFarScalar} Property specifying the translucency of the label based on the distance from the camera.\n   * A label's translucency will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the label's translucency remains clamped to the nearest bound.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  translucencyByDistance: createPropertyDescriptor(\"translucencyByDistance\"),\n\n  /**\n   * Gets or sets {@link NearFarScalar} Property specifying the pixel offset of the label based on the distance from the camera.\n   * A label's pixel offset will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the label's pixel offset remains clamped to the nearest bound.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  pixelOffsetScaleByDistance: createPropertyDescriptor(\n    \"pixelOffsetScaleByDistance\"\n  ),\n\n  /**\n   * Gets or sets near and far scaling properties of a Label based on the label's distance from the camera.\n   * A label's scale will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the label's scale remains clamped to the nearest bound.  If undefined,\n   * scaleByDistance will be disabled.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  scaleByDistance: createPropertyDescriptor(\"scaleByDistance\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this label will be displayed.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n\n  /**\n   * Gets or sets the distance from the camera at which to disable the depth test to, for example, prevent clipping against terrain.\n   * When set to zero, the depth test is always applied. When set to Number.POSITIVE_INFINITY, the depth test is never applied.\n   * @memberof LabelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  disableDepthTestDistance: createPropertyDescriptor(\n    \"disableDepthTestDistance\"\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {LabelGraphics} [result] The object onto which to store the result.\n * @returns {LabelGraphics} The modified result parameter or a new instance if one was not provided.\n */\nLabelGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new LabelGraphics(this);\n  }\n  result.show = this.show;\n  result.text = this.text;\n  result.font = this.font;\n  result.style = this.style;\n  result.scale = this.scale;\n  result.showBackground = this.showBackground;\n  result.backgroundColor = this.backgroundColor;\n  result.backgroundPadding = this.backgroundPadding;\n  result.pixelOffset = this.pixelOffset;\n  result.eyeOffset = this.eyeOffset;\n  result.horizontalOrigin = this.horizontalOrigin;\n  result.verticalOrigin = this.verticalOrigin;\n  result.heightReference = this.heightReference;\n  result.fillColor = this.fillColor;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.translucencyByDistance = this.translucencyByDistance;\n  result.pixelOffsetScaleByDistance = this.pixelOffsetScaleByDistance;\n  result.scaleByDistance = this.scaleByDistance;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  result.disableDepthTestDistance = this.disableDepthTestDistance;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {LabelGraphics} source The object to be merged into this object.\n */\nLabelGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.text = defaultValue(this.text, source.text);\n  this.font = defaultValue(this.font, source.font);\n  this.style = defaultValue(this.style, source.style);\n  this.scale = defaultValue(this.scale, source.scale);\n  this.showBackground = defaultValue(\n    this.showBackground,\n    source.showBackground\n  );\n  this.backgroundColor = defaultValue(\n    this.backgroundColor,\n    source.backgroundColor\n  );\n  this.backgroundPadding = defaultValue(\n    this.backgroundPadding,\n    source.backgroundPadding\n  );\n  this.pixelOffset = defaultValue(this.pixelOffset, source.pixelOffset);\n  this.eyeOffset = defaultValue(this.eyeOffset, source.eyeOffset);\n  this.horizontalOrigin = defaultValue(\n    this.horizontalOrigin,\n    source.horizontalOrigin\n  );\n  this.verticalOrigin = defaultValue(\n    this.verticalOrigin,\n    source.verticalOrigin\n  );\n  this.heightReference = defaultValue(\n    this.heightReference,\n    source.heightReference\n  );\n  this.fillColor = defaultValue(this.fillColor, source.fillColor);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.translucencyByDistance = defaultValue(\n    this.translucencyByDistance,\n    source.translucencyByDistance\n  );\n  this.pixelOffsetScaleByDistance = defaultValue(\n    this.pixelOffsetScaleByDistance,\n    source.pixelOffsetScaleByDistance\n  );\n  this.scaleByDistance = defaultValue(\n    this.scaleByDistance,\n    source.scaleByDistance\n  );\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n  this.disableDepthTestDistance = defaultValue(\n    this.disableDepthTestDistance,\n    source.disableDepthTestDistance\n  );\n};\nexport default LabelGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport TranslationRotationScale from \"../Core/TranslationRotationScale.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\n\nconst defaultNodeTransformation = new TranslationRotationScale();\n\n/**\n * A {@link Property} that produces {@link TranslationRotationScale} data.\n * @alias NodeTransformationProperty\n * @constructor\n *\n * @param {object} [options] Object with the following properties:\n * @param {Property|Cartesian3} [options.translation=Cartesian3.ZERO] A {@link Cartesian3} Property specifying the (x, y, z) translation to apply to the node.\n * @param {Property|Quaternion} [options.rotation=Quaternion.IDENTITY] A {@link Quaternion} Property specifying the (x, y, z, w) rotation to apply to the node.\n * @param {Property|Cartesian3} [options.scale=new Cartesian3(1.0, 1.0, 1.0)] A {@link Cartesian3} Property specifying the (x, y, z) scaling to apply to the node.\n */\nfunction NodeTransformationProperty(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  this._definitionChanged = new Event();\n  this._translation = undefined;\n  this._translationSubscription = undefined;\n  this._rotation = undefined;\n  this._rotationSubscription = undefined;\n  this._scale = undefined;\n  this._scaleSubscription = undefined;\n\n  this.translation = options.translation;\n  this.rotation = options.rotation;\n  this.scale = options.scale;\n}\n\nObject.defineProperties(NodeTransformationProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof NodeTransformationProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        Property.isConstant(this._translation) &&\n        Property.isConstant(this._rotation) &&\n        Property.isConstant(this._scale)\n      );\n    },\n  },\n\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof NodeTransformationProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the {@link Cartesian3} Property specifying the (x, y, z) translation to apply to the node.\n   * @memberof NodeTransformationProperty.prototype\n   * @type {Property|undefined}\n   * @default Cartesian3.ZERO\n   */\n  translation: createPropertyDescriptor(\"translation\"),\n\n  /**\n   * Gets or sets the {@link Quaternion} Property specifying the (x, y, z, w) rotation to apply to the node.\n   * @memberof NodeTransformationProperty.prototype\n   * @type {Property|undefined}\n   * @default Quaternion.IDENTITY\n   */\n  rotation: createPropertyDescriptor(\"rotation\"),\n\n  /**\n   * Gets or sets the {@link Cartesian3} Property specifying the (x, y, z) scaling to apply to the node.\n   * @memberof NodeTransformationProperty.prototype\n   * @type {Property|undefined}\n   * @default new Cartesian3(1.0, 1.0, 1.0)\n   */\n  scale: createPropertyDescriptor(\"scale\"),\n});\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {TranslationRotationScale} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {TranslationRotationScale} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nNodeTransformationProperty.prototype.getValue = function (time, result) {\n  if (!defined(result)) {\n    result = new TranslationRotationScale();\n  }\n\n  result.translation = Property.getValueOrClonedDefault(\n    this._translation,\n    time,\n    defaultNodeTransformation.translation,\n    result.translation\n  );\n  result.rotation = Property.getValueOrClonedDefault(\n    this._rotation,\n    time,\n    defaultNodeTransformation.rotation,\n    result.rotation\n  );\n  result.scale = Property.getValueOrClonedDefault(\n    this._scale,\n    time,\n    defaultNodeTransformation.scale,\n    result.scale\n  );\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nNodeTransformationProperty.prototype.equals = function (other) {\n  return (\n    this === other ||\n    (other instanceof NodeTransformationProperty &&\n      Property.equals(this._translation, other._translation) &&\n      Property.equals(this._rotation, other._rotation) &&\n      Property.equals(this._scale, other._scale))\n  );\n};\nexport default NodeTransformationProperty;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport ConstantProperty from \"./ConstantProperty.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link Property} whose value is a key-value mapping of property names to the computed value of other properties.\n *\n * @alias PropertyBag\n * @implements Record<string, any>\n * @constructor\n *\n * @param {object} [value] An object, containing key-value mapping of property names to properties.\n * @param {Function} [createPropertyCallback] A function that will be called when the value of any of the properties in value are not a Property.\n */\nfunction PropertyBag(value, createPropertyCallback) {\n  this._propertyNames = [];\n  this._definitionChanged = new Event();\n\n  if (defined(value)) {\n    this.merge(value, createPropertyCallback);\n  }\n}\n\nObject.defineProperties(PropertyBag.prototype, {\n  /**\n   * Gets the names of all properties registered on this instance.\n   * @memberof PropertyBag.prototype\n   * @type {Array}\n   */\n  propertyNames: {\n    get: function () {\n      return this._propertyNames;\n    },\n  },\n  /**\n   * Gets a value indicating if this property is constant.  This property\n   * is considered constant if all property items in this object are constant.\n   * @memberof PropertyBag.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      const propertyNames = this._propertyNames;\n      for (let i = 0, len = propertyNames.length; i < len; i++) {\n        if (!Property.isConstant(this[propertyNames[i]])) {\n          return false;\n        }\n      }\n      return true;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the set of properties contained in this\n   * object changes, or one of the properties itself changes.\n   *\n   * @memberof PropertyBag.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n});\n\n/**\n * Determines if this object has defined a property with the given name.\n *\n * @param {string} propertyName The name of the property to check for.\n *\n * @returns {boolean} True if this object has defined a property with the given name, false otherwise.\n */\nPropertyBag.prototype.hasProperty = function (propertyName) {\n  return this._propertyNames.indexOf(propertyName) !== -1;\n};\n\nfunction createConstantProperty(value) {\n  return new ConstantProperty(value);\n}\n\n/**\n * Adds a property to this object.\n *\n * @param {string} propertyName The name of the property to add.\n * @param {*} [value] The value of the new property, if provided.\n * @param {Function} [createPropertyCallback] A function that will be called when the value of this new property is set to a value that is not a Property.\n *\n * @exception {DeveloperError} \"propertyName\" is already a registered property.\n */\nPropertyBag.prototype.addProperty = function (\n  propertyName,\n  value,\n  createPropertyCallback\n) {\n  const propertyNames = this._propertyNames;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(propertyName)) {\n    throw new DeveloperError(\"propertyName is required.\");\n  }\n  if (propertyNames.indexOf(propertyName) !== -1) {\n    throw new DeveloperError(\n      `${propertyName} is already a registered property.`\n    );\n  }\n  //>>includeEnd('debug');\n\n  propertyNames.push(propertyName);\n  Object.defineProperty(\n    this,\n    propertyName,\n    createPropertyDescriptor(\n      propertyName,\n      true,\n      defaultValue(createPropertyCallback, createConstantProperty)\n    )\n  );\n\n  if (defined(value)) {\n    this[propertyName] = value;\n  }\n\n  this._definitionChanged.raiseEvent(this);\n};\n\n/**\n * Removed a property previously added with addProperty.\n *\n * @param {string} propertyName The name of the property to remove.\n *\n * @exception {DeveloperError} \"propertyName\" is not a registered property.\n */\nPropertyBag.prototype.removeProperty = function (propertyName) {\n  const propertyNames = this._propertyNames;\n  const index = propertyNames.indexOf(propertyName);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(propertyName)) {\n    throw new DeveloperError(\"propertyName is required.\");\n  }\n  if (index === -1) {\n    throw new DeveloperError(`${propertyName} is not a registered property.`);\n  }\n  //>>includeEnd('debug');\n\n  this._propertyNames.splice(index, 1);\n  delete this[propertyName];\n\n  this._definitionChanged.raiseEvent(this);\n};\n\n/**\n * Gets the value of this property.  Each contained property will be evaluated at the given time, and the overall\n * result will be an object, mapping property names to those values.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * Note that any properties in result which are not part of this PropertyBag will be left as-is.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nPropertyBag.prototype.getValue = function (time, result) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required.\");\n  }\n  //>>includeEnd('debug');\n\n  if (!defined(result)) {\n    result = {};\n  }\n\n  const propertyNames = this._propertyNames;\n  for (let i = 0, len = propertyNames.length; i < len; i++) {\n    const propertyName = propertyNames[i];\n    result[propertyName] = Property.getValueOrUndefined(\n      this[propertyName],\n      time,\n      result[propertyName]\n    );\n  }\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {object} source The object to be merged into this object.\n * @param {Function} [createPropertyCallback] A function that will be called when the value of any of the properties in value are not a Property.\n */\nPropertyBag.prototype.merge = function (source, createPropertyCallback) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const propertyNames = this._propertyNames;\n  const sourcePropertyNames = defined(source._propertyNames)\n    ? source._propertyNames\n    : Object.keys(source);\n  for (let i = 0, len = sourcePropertyNames.length; i < len; i++) {\n    const name = sourcePropertyNames[i];\n\n    const targetProperty = this[name];\n    const sourceProperty = source[name];\n\n    //Custom properties that are registered on the source must also be added to this.\n    if (targetProperty === undefined && propertyNames.indexOf(name) === -1) {\n      this.addProperty(name, undefined, createPropertyCallback);\n    }\n\n    if (sourceProperty !== undefined) {\n      if (targetProperty !== undefined) {\n        if (defined(targetProperty) && defined(targetProperty.merge)) {\n          targetProperty.merge(sourceProperty);\n        }\n      } else if (\n        defined(sourceProperty) &&\n        defined(sourceProperty.merge) &&\n        defined(sourceProperty.clone)\n      ) {\n        this[name] = sourceProperty.clone();\n      } else {\n        this[name] = sourceProperty;\n      }\n    }\n  }\n};\n\nfunction propertiesEqual(a, b) {\n  const aPropertyNames = a._propertyNames;\n  const bPropertyNames = b._propertyNames;\n\n  const len = aPropertyNames.length;\n  if (len !== bPropertyNames.length) {\n    return false;\n  }\n\n  for (let aIndex = 0; aIndex < len; ++aIndex) {\n    const name = aPropertyNames[aIndex];\n    const bIndex = bPropertyNames.indexOf(name);\n    if (bIndex === -1) {\n      return false;\n    }\n    if (!Property.equals(a[name], b[name])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nPropertyBag.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof PropertyBag && //\n      propertiesEqual(this, other))\n  );\n};\nexport default PropertyBag;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport NodeTransformationProperty from \"./NodeTransformationProperty.js\";\nimport PropertyBag from \"./PropertyBag.js\";\n\nfunction createNodeTransformationProperty(value) {\n  return new NodeTransformationProperty(value);\n}\n\nfunction createNodeTransformationPropertyBag(value) {\n  return new PropertyBag(value, createNodeTransformationProperty);\n}\n\nfunction createArticulationStagePropertyBag(value) {\n  return new PropertyBag(value);\n}\n\n/**\n * @typedef {object} ModelGraphics.ConstructorOptions\n *\n * Initialization options for the ModelGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the model.\n * @property {Property | string | Resource} [uri] A string or Resource Property specifying the URI of the glTF asset.\n * @property {Property | number} [scale=1.0] A numeric Property specifying a uniform linear scale.\n * @property {Property | number} [minimumPixelSize=0.0] A numeric Property specifying the approximate minimum pixel size of the model regardless of zoom.\n * @property {Property | number} [maximumScale] The maximum scale size of a model. An upper limit for minimumPixelSize.\n * @property {Property | boolean} [incrementallyLoadTextures=true] Determine if textures may continue to stream in after the model is loaded.\n * @property {Property | boolean} [runAnimations=true] A boolean Property specifying if glTF animations specified in the model should be started.\n * @property {Property | boolean} [clampAnimations=true] A boolean Property specifying if glTF animations should hold the last pose for time durations with no keyframes.\n * @property {Property | ShadowMode} [shadows=ShadowMode.ENABLED] An enum Property specifying whether the model casts or receives shadows from light sources.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height is relative to.\n * @property {Property | Color} [silhouetteColor=Color.RED] A Property specifying the {@link Color} of the silhouette.\n * @property {Property | number} [silhouetteSize=0.0] A numeric Property specifying the size of the silhouette in pixels.\n * @property {Property | Color} [color=Color.WHITE] A Property specifying the {@link Color} that blends with the model's rendered color.\n * @property {Property | ColorBlendMode} [colorBlendMode=ColorBlendMode.HIGHLIGHT] An enum Property specifying how the color blends with the model.\n * @property {Property | number} [colorBlendAmount=0.5] A numeric Property specifying the color strength when the <code>colorBlendMode</code> is <code>MIX</code>. A value of 0.0 results in the model's rendered color while a value of 1.0 results in a solid color, with any value in-between resulting in a mix of the two.\n * @property {Property | Cartesian2} [imageBasedLightingFactor=new Cartesian2(1.0, 1.0)] A property specifying the contribution from diffuse and specular image-based lighting.\n * @property {Property | Color} [lightColor] A property specifying the light color when shading the model. When <code>undefined</code> the scene's light color is used instead.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this model will be displayed.\n * @property {PropertyBag | Object<string, TranslationRotationScale>} [nodeTransformations] An object, where keys are names of nodes, and values are {@link TranslationRotationScale} Properties describing the transformation to apply to that node. The transformation is applied after the node's existing transformation as specified in the glTF, and does not replace the node's existing transformation.\n * @property {PropertyBag | Object<string, number>} [articulations] An object, where keys are composed of an articulation name, a single space, and a stage name, and the values are numeric properties.\n * @property {Property | ClippingPlaneCollection} [clippingPlanes] A property specifying the {@link ClippingPlaneCollection} used to selectively disable rendering the model.\n * @property {Property | CustomShader} [customShader] A property specifying the {@link CustomShader} to apply to this model.\n */\n\n/**\n * A 3D model based on {@link https://github.com/KhronosGroup/glTF|glTF}, the runtime asset format for WebGL, OpenGL ES, and OpenGL.\n * The position and orientation of the model is determined by the containing {@link Entity}.\n * <p>\n * Cesium includes support for glTF geometry, materials, animations, and skinning.\n * Cameras and lights are not currently supported.\n * </p>\n *\n * @alias ModelGraphics\n * @constructor\n *\n * @param {ModelGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=3D%20Models.html|Cesium Sandcastle 3D Models Demo}\n */\nfunction ModelGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._uri = undefined;\n  this._uriSubscription = undefined;\n  this._scale = undefined;\n  this._scaleSubscription = undefined;\n  this._minimumPixelSize = undefined;\n  this._minimumPixelSizeSubscription = undefined;\n  this._maximumScale = undefined;\n  this._maximumScaleSubscription = undefined;\n  this._incrementallyLoadTextures = undefined;\n  this._incrementallyLoadTexturesSubscription = undefined;\n  this._runAnimations = undefined;\n  this._runAnimationsSubscription = undefined;\n  this._clampAnimations = undefined;\n  this._clampAnimationsSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._silhouetteColor = undefined;\n  this._silhouetteColorSubscription = undefined;\n  this._silhouetteSize = undefined;\n  this._silhouetteSizeSubscription = undefined;\n  this._color = undefined;\n  this._colorSubscription = undefined;\n  this._colorBlendMode = undefined;\n  this._colorBlendModeSubscription = undefined;\n  this._colorBlendAmount = undefined;\n  this._colorBlendAmountSubscription = undefined;\n  this._imageBasedLightingFactor = undefined;\n  this._imageBasedLightingFactorSubscription = undefined;\n  this._lightColor = undefined;\n  this._lightColorSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n  this._nodeTransformations = undefined;\n  this._nodeTransformationsSubscription = undefined;\n  this._articulations = undefined;\n  this._articulationsSubscription = undefined;\n  this._clippingPlanes = undefined;\n  this._clippingPlanesSubscription = undefined;\n  this._customShader = undefined;\n  this._customShaderSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(ModelGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof ModelGraphics.prototype\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the model.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the string Property specifying the URI of the glTF asset.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  uri: createPropertyDescriptor(\"uri\"),\n\n  /**\n   * Gets or sets the numeric Property specifying a uniform linear scale\n   * for this model. Values greater than 1.0 increase the size of the model while\n   * values less than 1.0 decrease it.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  scale: createPropertyDescriptor(\"scale\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the approximate minimum\n   * pixel size of the model regardless of zoom. This can be used to ensure that\n   * a model is visible even when the viewer zooms out.  When <code>0.0</code>,\n   * no minimum size is enforced.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0.0\n   */\n  minimumPixelSize: createPropertyDescriptor(\"minimumPixelSize\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the maximum scale\n   * size of a model. This property is used as an upper limit for\n   * {@link ModelGraphics#minimumPixelSize}.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  maximumScale: createPropertyDescriptor(\"maximumScale\"),\n\n  /**\n   * Get or sets the boolean Property specifying whether textures\n   * may continue to stream in after the model is loaded.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  incrementallyLoadTextures: createPropertyDescriptor(\n    \"incrementallyLoadTextures\"\n  ),\n\n  /**\n   * Gets or sets the boolean Property specifying if glTF animations should be run.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  runAnimations: createPropertyDescriptor(\"runAnimations\"),\n\n  /**\n   * Gets or sets the boolean Property specifying if glTF animations should hold the last pose for time durations with no keyframes.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  clampAnimations: createPropertyDescriptor(\"clampAnimations\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the model\n   * casts or receives shadows from light sources.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.ENABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the silhouette.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.RED\n   */\n  silhouetteColor: createPropertyDescriptor(\"silhouetteColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the size of the silhouette in pixels.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0.0\n   */\n  silhouetteSize: createPropertyDescriptor(\"silhouetteSize\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} that blends with the model's rendered color.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  color: createPropertyDescriptor(\"color\"),\n\n  /**\n   * Gets or sets the enum Property specifying how the color blends with the model.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   * @default ColorBlendMode.HIGHLIGHT\n   */\n  colorBlendMode: createPropertyDescriptor(\"colorBlendMode\"),\n\n  /**\n   * A numeric Property specifying the color strength when the <code>colorBlendMode</code> is MIX.\n   * A value of 0.0 results in the model's rendered color while a value of 1.0 results in a solid color, with\n   * any value in-between resulting in a mix of the two.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0.5\n   */\n  colorBlendAmount: createPropertyDescriptor(\"colorBlendAmount\"),\n\n  /**\n   * A property specifying the {@link Cartesian2} used to scale the diffuse and specular image-based lighting contribution to the final color.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  imageBasedLightingFactor: createPropertyDescriptor(\n    \"imageBasedLightingFactor\"\n  ),\n\n  /**\n   * A property specifying the {@link Cartesian3} light color when shading the model. When <code>undefined</code> the scene's light color is used instead.\n   * @memberOf ModelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  lightColor: createPropertyDescriptor(\"lightColor\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this model will be displayed.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n\n  /**\n   * Gets or sets the set of node transformations to apply to this model.  This is represented as an {@link PropertyBag}, where keys are\n   * names of nodes, and values are {@link TranslationRotationScale} Properties describing the transformation to apply to that node.\n   * The transformation is applied after the node's existing transformation as specified in the glTF, and does not replace the node's existing transformation.\n   * @memberof ModelGraphics.prototype\n   * @type {PropertyBag}\n   */\n  nodeTransformations: createPropertyDescriptor(\n    \"nodeTransformations\",\n    undefined,\n    createNodeTransformationPropertyBag\n  ),\n\n  /**\n   * Gets or sets the set of articulation values to apply to this model.  This is represented as an {@link PropertyBag}, where keys are\n   * composed as the name of the articulation, a single space, and the name of the stage.\n   * @memberof ModelGraphics.prototype\n   * @type {PropertyBag}\n   */\n  articulations: createPropertyDescriptor(\n    \"articulations\",\n    undefined,\n    createArticulationStagePropertyBag\n  ),\n\n  /**\n   * A property specifying the {@link ClippingPlaneCollection} used to selectively disable rendering the model.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  clippingPlanes: createPropertyDescriptor(\"clippingPlanes\"),\n\n  /**\n   * Gets or sets the {@link CustomShader} to apply to this model. When <code>undefined</code>, no custom shader code is used.\n   * @memberof ModelGraphics.prototype\n   * @type {Property|undefined}\n   */\n  customShader: createPropertyDescriptor(\"customShader\"),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {ModelGraphics} [result] The object onto which to store the result.\n * @returns {ModelGraphics} The modified result parameter or a new instance if one was not provided.\n */\nModelGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new ModelGraphics(this);\n  }\n  result.show = this.show;\n  result.uri = this.uri;\n  result.scale = this.scale;\n  result.minimumPixelSize = this.minimumPixelSize;\n  result.maximumScale = this.maximumScale;\n  result.incrementallyLoadTextures = this.incrementallyLoadTextures;\n  result.runAnimations = this.runAnimations;\n  result.clampAnimations = this.clampAnimations;\n  result.heightReference = this._heightReference;\n  result.silhouetteColor = this.silhouetteColor;\n  result.silhouetteSize = this.silhouetteSize;\n  result.color = this.color;\n  result.colorBlendMode = this.colorBlendMode;\n  result.colorBlendAmount = this.colorBlendAmount;\n  result.imageBasedLightingFactor = this.imageBasedLightingFactor;\n  result.lightColor = this.lightColor;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  result.nodeTransformations = this.nodeTransformations;\n  result.articulations = this.articulations;\n  result.clippingPlanes = this.clippingPlanes;\n  result.customShader = this.customShader;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {ModelGraphics} source The object to be merged into this object.\n */\nModelGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.uri = defaultValue(this.uri, source.uri);\n  this.scale = defaultValue(this.scale, source.scale);\n  this.minimumPixelSize = defaultValue(\n    this.minimumPixelSize,\n    source.minimumPixelSize\n  );\n  this.maximumScale = defaultValue(this.maximumScale, source.maximumScale);\n  this.incrementallyLoadTextures = defaultValue(\n    this.incrementallyLoadTextures,\n    source.incrementallyLoadTextures\n  );\n  this.runAnimations = defaultValue(this.runAnimations, source.runAnimations);\n  this.clampAnimations = defaultValue(\n    this.clampAnimations,\n    source.clampAnimations\n  );\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.heightReference = defaultValue(\n    this.heightReference,\n    source.heightReference\n  );\n  this.silhouetteColor = defaultValue(\n    this.silhouetteColor,\n    source.silhouetteColor\n  );\n  this.silhouetteSize = defaultValue(\n    this.silhouetteSize,\n    source.silhouetteSize\n  );\n  this.color = defaultValue(this.color, source.color);\n  this.colorBlendMode = defaultValue(\n    this.colorBlendMode,\n    source.colorBlendMode\n  );\n  this.colorBlendAmount = defaultValue(\n    this.colorBlendAmount,\n    source.colorBlendAmount\n  );\n  this.imageBasedLightingFactor = defaultValue(\n    this.imageBasedLightingFactor,\n    source.imageBasedLightingFactor\n  );\n  this.lightColor = defaultValue(this.lightColor, source.lightColor);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n  this.clippingPlanes = defaultValue(\n    this.clippingPlanes,\n    source.clippingPlanes\n  );\n  this.customShader = defaultValue(this.customShader, source.customShader);\n\n  const sourceNodeTransformations = source.nodeTransformations;\n  if (defined(sourceNodeTransformations)) {\n    const targetNodeTransformations = this.nodeTransformations;\n    if (defined(targetNodeTransformations)) {\n      targetNodeTransformations.merge(sourceNodeTransformations);\n    } else {\n      this.nodeTransformations = new PropertyBag(\n        sourceNodeTransformations,\n        createNodeTransformationProperty\n      );\n    }\n  }\n\n  const sourceArticulations = source.articulations;\n  if (defined(sourceArticulations)) {\n    const targetArticulations = this.articulations;\n    if (defined(targetArticulations)) {\n      targetArticulations.merge(sourceArticulations);\n    } else {\n      this.articulations = new PropertyBag(sourceArticulations);\n    }\n  }\n};\nexport default ModelGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} Cesium3DTilesetGraphics.ConstructorOptions\n *\n * Initialization options for the Cesium3DTilesetGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the tileset.\n * @property {Property | string | Resource} [uri] A string or Resource Property specifying the URI of the tileset.\n * @property {Property | number} [maximumScreenSpaceError] A number or Property specifying the maximum screen space error used to drive level of detail refinement.\n */\n\n/**\n * A 3D Tiles tileset represented by an {@link Entity}.\n * The tileset modelMatrix is determined by the containing Entity position and orientation\n * or is left unset if position is undefined.\n *\n * @alias Cesium3DTilesetGraphics\n * @constructor\n *\n * @param {Cesium3DTilesetGraphics.ConstructorOptions} [options] Object describing initialization options\n */\nfunction Cesium3DTilesetGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._uri = undefined;\n  this._uriSubscription = undefined;\n  this._maximumScreenSpaceError = undefined;\n  this._maximumScreenSpaceErrorSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(Cesium3DTilesetGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof Cesium3DTilesetGraphics.prototype\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the model.\n   * @memberof Cesium3DTilesetGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the string Property specifying the URI of the glTF asset.\n   * @memberof Cesium3DTilesetGraphics.prototype\n   * @type {Property|undefined}\n   */\n  uri: createPropertyDescriptor(\"uri\"),\n\n  /**\n   * Gets or sets the maximum screen space error used to drive level of detail refinement.\n   * @memberof Cesium3DTilesetGraphics.prototype\n   * @type {Property|undefined}\n   */\n  maximumScreenSpaceError: createPropertyDescriptor(\"maximumScreenSpaceError\"),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {Cesium3DTilesetGraphics} [result] The object onto which to store the result.\n * @returns {Cesium3DTilesetGraphics} The modified result parameter or a new instance if one was not provided.\n */\nCesium3DTilesetGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new Cesium3DTilesetGraphics(this);\n  }\n  result.show = this.show;\n  result.uri = this.uri;\n  result.maximumScreenSpaceError = this.maximumScreenSpaceError;\n\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {Cesium3DTilesetGraphics} source The object to be merged into this object.\n */\nCesium3DTilesetGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.uri = defaultValue(this.uri, source.uri);\n  this.maximumScreenSpaceError = defaultValue(\n    this.maximumScreenSpaceError,\n    source.maximumScreenSpaceError\n  );\n};\n\nexport default Cesium3DTilesetGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} PathGraphics.ConstructorOptions\n *\n * Initialization options for the PathGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the path.\n * @property {Property | number} [leadTime] A Property specifying the number of seconds in front the object to show.\n * @property {Property | number} [trailTime] A Property specifying the number of seconds behind of the object to show.\n * @property {Property | number} [width=1.0] A numeric Property specifying the width in pixels.\n * @property {Property | number} [resolution=60] A numeric Property specifying the maximum number of seconds to step when sampling the position.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to draw the path.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this path will be displayed.\n */\n\n/**\n * Describes a polyline defined as the path made by an {@link Entity} as it moves over time.\n *\n * @alias PathGraphics\n * @constructor\n *\n * @param {PathGraphics.ConstructorOptions} [options] Object describing initialization options\n */\nfunction PathGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._leadTime = undefined;\n  this._leadTimeSubscription = undefined;\n  this._trailTime = undefined;\n  this._trailTimeSubscription = undefined;\n  this._width = undefined;\n  this._widthSubscription = undefined;\n  this._resolution = undefined;\n  this._resolutionSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(PathGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof PathGraphics.prototype\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the path.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the Property specifying the number of seconds in front of the object to show.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   */\n  leadTime: createPropertyDescriptor(\"leadTime\"),\n\n  /**\n   * Gets or sets the Property specifying the number of seconds behind the object to show.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   */\n  trailTime: createPropertyDescriptor(\"trailTime\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width in pixels.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  width: createPropertyDescriptor(\"width\"),\n\n  /**\n   * Gets or sets the Property specifying the maximum number of seconds to step when sampling the position.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   * @default 60\n   */\n  resolution: createPropertyDescriptor(\"resolution\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to draw the path.\n   * @memberof PathGraphics.prototype\n   * @type {MaterialProperty}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this path will be displayed.\n   * @memberof PathGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {PathGraphics} [result] The object onto which to store the result.\n * @returns {PathGraphics} The modified result parameter or a new instance if one was not provided.\n */\nPathGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new PathGraphics(this);\n  }\n  result.show = this.show;\n  result.leadTime = this.leadTime;\n  result.trailTime = this.trailTime;\n  result.width = this.width;\n  result.resolution = this.resolution;\n  result.material = this.material;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {PathGraphics} source The object to be merged into this object.\n */\nPathGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.leadTime = defaultValue(this.leadTime, source.leadTime);\n  this.trailTime = defaultValue(this.trailTime, source.trailTime);\n  this.width = defaultValue(this.width, source.width);\n  this.resolution = defaultValue(this.resolution, source.resolution);\n  this.material = defaultValue(this.material, source.material);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n};\nexport default PathGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} PlaneGraphics.ConstructorOptions\n *\n * Initialization options for the PlaneGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the plane.\n * @property {Property | Plane} [plane] A {@link Plane} Property specifying the normal and distance for the plane.\n * @property {Property | Cartesian2} [dimensions] A {@link Cartesian2} Property specifying the width and height of the plane.\n * @property {Property | boolean} [fill=true] A boolean Property specifying whether the plane is filled with the provided material.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to fill the plane.\n * @property {Property | boolean} [outline=false] A boolean Property specifying whether the plane is outlined.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the width of the outline.\n * @property {Property | ShadowMode} [shadows=ShadowMode.DISABLED] An enum Property specifying whether the plane casts or receives shadows from light sources.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this plane will be displayed.\n */\n\n/**\n * Describes a plane. The center position and orientation are determined by the containing {@link Entity}.\n *\n * @alias PlaneGraphics\n * @constructor\n *\n * @param {PlaneGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Plane.html|Cesium Sandcastle Plane Demo}\n */\nfunction PlaneGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._plane = undefined;\n  this._planeSubscription = undefined;\n  this._dimensions = undefined;\n  this._dimensionsSubscription = undefined;\n  this._fill = undefined;\n  this._fillSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._outline = undefined;\n  this._outlineSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(PlaneGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof PlaneGraphics.prototype\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the plane.\n   * @memberof PlaneGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the {@link Plane} Property specifying the normal and distance of the plane.\n   *\n   * @memberof PlaneGraphics.prototype\n   * @type {Property|undefined}\n   */\n  plane: createPropertyDescriptor(\"plane\"),\n\n  /**\n   * Gets or sets the {@link Cartesian2} Property specifying the width and height of the plane.\n   *\n   * @memberof PlaneGraphics.prototype\n   * @type {Property|undefined}\n   */\n  dimensions: createPropertyDescriptor(\"dimensions\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the plane is filled with the provided material.\n   * @memberof PlaneGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  fill: createPropertyDescriptor(\"fill\"),\n\n  /**\n   * Gets or sets the material used to fill the plane.\n   * @memberof PlaneGraphics.prototype\n   * @type {MaterialProperty}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the Property specifying whether the plane is outlined.\n   * @memberof PlaneGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  outline: createPropertyDescriptor(\"outline\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof PlaneGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * <p>\n   * Note: This property will be ignored on all major browsers on Windows platforms. For details, see (@link https://github.com/CesiumGS/cesium/issues/40}.\n   * </p>\n   * @memberof PlaneGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the plane\n   * casts or receives shadows from light sources.\n   * @memberof PlaneGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.DISABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this plane will be displayed.\n   * @memberof PlaneGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {PlaneGraphics} [result] The object onto which to store the result.\n * @returns {PlaneGraphics} The modified result parameter or a new instance if one was not provided.\n */\nPlaneGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new PlaneGraphics(this);\n  }\n  result.show = this.show;\n  result.plane = this.plane;\n  result.dimensions = this.dimensions;\n  result.fill = this.fill;\n  result.material = this.material;\n  result.outline = this.outline;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.shadows = this.shadows;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {PlaneGraphics} source The object to be merged into this object.\n */\nPlaneGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.plane = defaultValue(this.plane, source.plane);\n  this.dimensions = defaultValue(this.dimensions, source.dimensions);\n  this.fill = defaultValue(this.fill, source.fill);\n  this.material = defaultValue(this.material, source.material);\n  this.outline = defaultValue(this.outline, source.outline);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n};\nexport default PlaneGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} PointGraphics.ConstructorOptions\n *\n * Initialization options for the PointGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the point.\n * @property {Property | number} [pixelSize=1] A numeric Property specifying the size in pixels.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height is relative to.\n * @property {Property | Color} [color=Color.WHITE] A Property specifying the {@link Color} of the point.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @property {Property | number} [outlineWidth=0] A numeric Property specifying the the outline width in pixels.\n * @property {Property | NearFarScalar} [scaleByDistance] A {@link NearFarScalar} Property used to scale the point based on distance.\n * @property {Property | NearFarScalar} [translucencyByDistance] A {@link NearFarScalar} Property used to set translucency based on distance from the camera.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this point will be displayed.\n * @property {Property | number} [disableDepthTestDistance] A Property specifying the distance from the camera at which to disable the depth test to.\n */\n\n/**\n * Describes a graphical point located at the position of the containing {@link Entity}.\n *\n * @alias PointGraphics\n * @constructor\n *\n * @param {PointGraphics.ConstructorOptions} [options] Object describing initialization options\n */\nfunction PointGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._pixelSize = undefined;\n  this._pixelSizeSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._color = undefined;\n  this._colorSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._scaleByDistance = undefined;\n  this._scaleByDistanceSubscription = undefined;\n  this._translucencyByDistance = undefined;\n  this._translucencyByDistanceSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n  this._disableDepthTestDistance = undefined;\n  this._disableDepthTestDistanceSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(PointGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof PointGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the point.\n   * @memberof PointGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the size in pixels.\n   * @memberof PointGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1\n   */\n  pixelSize: createPropertyDescriptor(\"pixelSize\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof PointGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the point.\n   * @memberof PointGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  color: createPropertyDescriptor(\"color\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof PointGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the the outline width in pixels.\n   * @memberof PointGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Gets or sets the {@link NearFarScalar} Property used to scale the point based on distance.\n   * If undefined, a constant size is used.\n   * @memberof PointGraphics.prototype\n   * @type {Property|undefined}\n   */\n  scaleByDistance: createPropertyDescriptor(\"scaleByDistance\"),\n\n  /**\n   * Gets or sets {@link NearFarScalar} Property specifying the translucency of the point based on the distance from the camera.\n   * A point's translucency will interpolate between the {@link NearFarScalar#nearValue} and\n   * {@link NearFarScalar#farValue} while the camera distance falls within the lower and upper bounds\n   * of the specified {@link NearFarScalar#near} and {@link NearFarScalar#far}.\n   * Outside of these ranges the points's translucency remains clamped to the nearest bound.\n   * @memberof PointGraphics.prototype\n   * @type {Property|undefined}\n   */\n  translucencyByDistance: createPropertyDescriptor(\"translucencyByDistance\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this point will be displayed.\n   * @memberof PointGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n\n  /**\n   * Gets or sets the distance from the camera at which to disable the depth test to, for example, prevent clipping against terrain.\n   * When set to zero, the depth test is always applied. When set to Number.POSITIVE_INFINITY, the depth test is never applied.\n   * @memberof PointGraphics.prototype\n   * @type {Property|undefined}\n   */\n  disableDepthTestDistance: createPropertyDescriptor(\n    \"disableDepthTestDistance\"\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {PointGraphics} [result] The object onto which to store the result.\n * @returns {PointGraphics} The modified result parameter or a new instance if one was not provided.\n */\nPointGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new PointGraphics(this);\n  }\n  result.show = this.show;\n  result.pixelSize = this.pixelSize;\n  result.heightReference = this.heightReference;\n  result.color = this.color;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.scaleByDistance = this.scaleByDistance;\n  result.translucencyByDistance = this._translucencyByDistance;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  result.disableDepthTestDistance = this.disableDepthTestDistance;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {PointGraphics} source The object to be merged into this object.\n */\nPointGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.pixelSize = defaultValue(this.pixelSize, source.pixelSize);\n  this.heightReference = defaultValue(\n    this.heightReference,\n    source.heightReference\n  );\n  this.color = defaultValue(this.color, source.color);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.scaleByDistance = defaultValue(\n    this.scaleByDistance,\n    source.scaleByDistance\n  );\n  this.translucencyByDistance = defaultValue(\n    this._translucencyByDistance,\n    source.translucencyByDistance\n  );\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n  this.disableDepthTestDistance = defaultValue(\n    this.disableDepthTestDistance,\n    source.disableDepthTestDistance\n  );\n};\nexport default PointGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport PolygonHierarchy from \"../Core/PolygonHierarchy.js\";\nimport ConstantProperty from \"./ConstantProperty.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\nfunction createPolygonHierarchyProperty(value) {\n  if (Array.isArray(value)) {\n    // convert array of positions to PolygonHierarchy object\n    value = new PolygonHierarchy(value);\n  }\n  return new ConstantProperty(value);\n}\n\n/**\n * @typedef {object} PolygonGraphics.ConstructorOptions\n *\n * Initialization options for the PolygonGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the polygon.\n * @property {Property | PolygonHierarchy | Cartesian3[]} [hierarchy] A Property specifying the {@link PolygonHierarchy}.\n * @property {Property | number} [height=0] A numeric Property specifying the altitude of the polygon relative to the ellipsoid surface.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height is relative to.\n * @property {Property | number} [extrudedHeight] A numeric Property specifying the altitude of the polygon's extruded face relative to the ellipsoid surface.\n * @property {Property | HeightReference} [extrudedHeightReference=HeightReference.NONE] A Property specifying what the extrudedHeight is relative to.\n * @property {Property | number} [stRotation=0.0] A numeric property specifying the rotation of the polygon texture counter-clockwise from north. Only has an effect if textureCoordinates is not defined.\n * @property {Property | number} [granularity=Cesium.Math.RADIANS_PER_DEGREE] A numeric Property specifying the angular distance between each latitude and longitude point.\n * @property {Property | boolean} [fill=true] A boolean Property specifying whether the polygon is filled with the provided material.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to fill the polygon.\n * @property {Property | boolean} [outline=false] A boolean Property specifying whether the polygon is outlined.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the width of the outline.\n * @property {Property | boolean} [perPositionHeight=false] A boolean specifying whether or not the height of each position is used.\n * @property {boolean | boolean} [closeTop=true] When false, leaves off the top of an extruded polygon open.\n * @property {boolean | boolean} [closeBottom=true] When false, leaves off the bottom of an extruded polygon open.\n * @property {Property | ArcType} [arcType=ArcType.GEODESIC] The type of line the polygon edges must follow.\n * @property {Property | ShadowMode} [shadows=ShadowMode.DISABLED] An enum Property specifying whether the polygon casts or receives shadows from light sources.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this polygon will be displayed.\n * @property {Property | ClassificationType} [classificationType=ClassificationType.BOTH] An enum Property specifying whether this polygon will classify terrain, 3D Tiles, or both when on the ground.\n * @property {ConstantProperty | number} [zIndex=0] A property specifying the zIndex used for ordering ground geometry.  Only has an effect if the polygon is constant and neither height or extrudedHeight are specified.\n * @property {Property | PolygonHierarchy} [textureCoordinates] A Property specifying texture coordinates as a {@link PolygonHierarchy} of {@link Cartesian2} points. Has no effect for ground primitives.\n */\n\n/**\n * Describes a polygon defined by an hierarchy of linear rings which make up the outer shape and any nested holes.\n * The polygon conforms to the curvature of the globe and can be placed on the surface or\n * at altitude and can optionally be extruded into a volume.\n *\n * @alias PolygonGraphics\n * @constructor\n *\n * @param {PolygonGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @see Entity\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Polygon.html|Cesium Sandcastle Polygon Demo}\n */\nfunction PolygonGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._hierarchy = undefined;\n  this._hierarchySubscription = undefined;\n  this._height = undefined;\n  this._heightSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._extrudedHeight = undefined;\n  this._extrudedHeightSubscription = undefined;\n  this._extrudedHeightReference = undefined;\n  this._extrudedHeightReferenceSubscription = undefined;\n  this._stRotation = undefined;\n  this._stRotationSubscription = undefined;\n  this._granularity = undefined;\n  this._granularitySubscription = undefined;\n  this._fill = undefined;\n  this._fillSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._outline = undefined;\n  this._outlineSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._perPositionHeight = undefined;\n  this._perPositionHeightSubscription = undefined;\n  this._closeTop = undefined;\n  this._closeTopSubscription = undefined;\n  this._closeBottom = undefined;\n  this._closeBottomSubscription = undefined;\n  this._arcType = undefined;\n  this._arcTypeSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n  this._classificationType = undefined;\n  this._classificationTypeSubscription = undefined;\n  this._zIndex = undefined;\n  this._zIndexSubscription = undefined;\n  this._textureCoordinates = undefined;\n  this._textureCoordinatesSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(PolygonGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof PolygonGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the polygon.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link PolygonHierarchy}.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   */\n  hierarchy: createPropertyDescriptor(\n    \"hierarchy\",\n    undefined,\n    createPolygonHierarchyProperty\n  ),\n\n  /**\n   * Gets or sets the numeric Property specifying the constant altitude of the polygon.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0.0\n   */\n  height: createPropertyDescriptor(\"height\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the altitude of the polygon extrusion.\n   * If {@link PolygonGraphics#perPositionHeight} is false, the volume starts at {@link PolygonGraphics#height} and ends at this altitude.\n   * If {@link PolygonGraphics#perPositionHeight} is true, the volume starts at the height of each {@link PolygonGraphics#hierarchy} position and ends at this altitude.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   */\n  extrudedHeight: createPropertyDescriptor(\"extrudedHeight\"),\n\n  /**\n   * Gets or sets the Property specifying the extruded {@link HeightReference}.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  extrudedHeightReference: createPropertyDescriptor(\"extrudedHeightReference\"),\n\n  /**\n   * Gets or sets the numeric property specifying the rotation of the polygon texture counter-clockwise from north. Only has an effect if textureCoordinates is not defined.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0\n   */\n  stRotation: createPropertyDescriptor(\"stRotation\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the angular distance between points on the polygon.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default {CesiumMath.RADIANS_PER_DEGREE}\n   */\n  granularity: createPropertyDescriptor(\"granularity\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the polygon is filled with the provided material.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  fill: createPropertyDescriptor(\"fill\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to fill the polygon.\n   * @memberof PolygonGraphics.prototype\n   * @type {MaterialProperty}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the Property specifying whether the polygon is outlined.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  outline: createPropertyDescriptor(\"outline\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * <p>\n   * Note: This property will be ignored on all major browsers on Windows platforms. For details, see (@link https://github.com/CesiumGS/cesium/issues/40}.\n   * </p>\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Gets or sets the boolean specifying whether or not the the height of each position is used.\n   * If true, the shape will have non-uniform altitude defined by the height of each {@link PolygonGraphics#hierarchy} position.\n   * If false, the shape will have a constant altitude as specified by {@link PolygonGraphics#height}.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   */\n  perPositionHeight: createPropertyDescriptor(\"perPositionHeight\"),\n\n  /**\n   * Gets or sets a boolean specifying whether or not the top of an extruded polygon is included.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   */\n  closeTop: createPropertyDescriptor(\"closeTop\"),\n\n  /**\n   * Gets or sets a boolean specifying whether or not the bottom of an extruded polygon is included.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   */\n  closeBottom: createPropertyDescriptor(\"closeBottom\"),\n\n  /**\n   * Gets or sets the {@link ArcType} Property specifying the type of lines the polygon edges use.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default ArcType.GEODESIC\n   */\n  arcType: createPropertyDescriptor(\"arcType\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the polygon\n   * casts or receives shadows from light sources.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.DISABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this polygon will be displayed.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n\n  /**\n   * Gets or sets the {@link ClassificationType} Property specifying whether this polygon will classify terrain, 3D Tiles, or both when on the ground.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   * @default ClassificationType.BOTH\n   */\n  classificationType: createPropertyDescriptor(\"classificationType\"),\n\n  /**\n   * Gets or sets the zIndex Prperty specifying the ordering of ground geometry.  Only has an effect if the polygon is constant and neither height or extrudedHeight are specified.\n   * @memberof PolygonGraphics.prototype\n   * @type {ConstantProperty|undefined}\n   * @default 0\n   */\n  zIndex: createPropertyDescriptor(\"zIndex\"),\n\n  /**\n   *  A Property specifying texture coordinates as a {@link PolygonHierarchy} of {@link Cartesian2} points. Has no effect for ground primitives.\n   * @memberof PolygonGraphics.prototype\n   * @type {Property|undefined}\n   */\n  textureCoordinates: createPropertyDescriptor(\"textureCoordinates\"),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {PolygonGraphics} [result] The object onto which to store the result.\n * @returns {PolygonGraphics} The modified result parameter or a new instance if one was not provided.\n */\nPolygonGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new PolygonGraphics(this);\n  }\n  result.show = this.show;\n  result.hierarchy = this.hierarchy;\n  result.height = this.height;\n  result.heightReference = this.heightReference;\n  result.extrudedHeight = this.extrudedHeight;\n  result.extrudedHeightReference = this.extrudedHeightReference;\n  result.stRotation = this.stRotation;\n  result.granularity = this.granularity;\n  result.fill = this.fill;\n  result.material = this.material;\n  result.outline = this.outline;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.perPositionHeight = this.perPositionHeight;\n  result.closeTop = this.closeTop;\n  result.closeBottom = this.closeBottom;\n  result.arcType = this.arcType;\n  result.shadows = this.shadows;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  result.classificationType = this.classificationType;\n  result.zIndex = this.zIndex;\n  result.textureCoordinates = this.textureCoordinates;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {PolygonGraphics} source The object to be merged into this object.\n */\nPolygonGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.hierarchy = defaultValue(this.hierarchy, source.hierarchy);\n  this.height = defaultValue(this.height, source.height);\n  this.heightReference = defaultValue(\n    this.heightReference,\n    source.heightReference\n  );\n  this.extrudedHeight = defaultValue(\n    this.extrudedHeight,\n    source.extrudedHeight\n  );\n  this.extrudedHeightReference = defaultValue(\n    this.extrudedHeightReference,\n    source.extrudedHeightReference\n  );\n  this.stRotation = defaultValue(this.stRotation, source.stRotation);\n  this.granularity = defaultValue(this.granularity, source.granularity);\n  this.fill = defaultValue(this.fill, source.fill);\n  this.material = defaultValue(this.material, source.material);\n  this.outline = defaultValue(this.outline, source.outline);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.perPositionHeight = defaultValue(\n    this.perPositionHeight,\n    source.perPositionHeight\n  );\n  this.closeTop = defaultValue(this.closeTop, source.closeTop);\n  this.closeBottom = defaultValue(this.closeBottom, source.closeBottom);\n  this.arcType = defaultValue(this.arcType, source.arcType);\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n  this.classificationType = defaultValue(\n    this.classificationType,\n    source.classificationType\n  );\n  this.zIndex = defaultValue(this.zIndex, source.zIndex);\n  this.textureCoordinates = defaultValue(\n    this.textureCoordinates,\n    source.textureCoordinates\n  );\n};\nexport default PolygonGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} PolylineGraphics.ConstructorOptions\n *\n * Initialization options for the PolylineGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the polyline.\n * @property {Property | Cartesian3[]} [positions] A Property specifying the array of {@link Cartesian3} positions that define the line strip.\n * @property {Property | number} [width=1.0] A numeric Property specifying the width in pixels.\n * @property {Property | number} [granularity=Cesium.Math.RADIANS_PER_DEGREE] A numeric Property specifying the angular distance between each latitude and longitude if arcType is not ArcType.NONE.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to draw the polyline.\n * @property {MaterialProperty | Color} [depthFailMaterial] A property specifying the material used to draw the polyline when it is below the terrain.\n * @property {Property | ArcType} [arcType=ArcType.GEODESIC] The type of line the polyline segments must follow.\n * @property {Property | boolean} [clampToGround=false] A boolean Property specifying whether the Polyline should be clamped to the ground.\n * @property {Property | ShadowMode} [shadows=ShadowMode.DISABLED] An enum Property specifying whether the polyline casts or receives shadows from light sources.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this polyline will be displayed.\n * @property {Property | ClassificationType} [classificationType=ClassificationType.BOTH] An enum Property specifying whether this polyline will classify terrain, 3D Tiles, or both when on the ground.\n * @property {Property | number} [zIndex=0] A Property specifying the zIndex used for ordering ground geometry. Only has an effect if `clampToGround` is true and polylines on terrain is supported.\n */\n\n/**\n * Describes a polyline. The first two positions define a line segment,\n * and each additional position defines a line segment from the previous position. The segments\n * can be linear connected points, great arcs, or clamped to terrain.\n *\n * @alias PolylineGraphics\n * @constructor\n *\n * @param {PolylineGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @see Entity\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Polyline.html|Cesium Sandcastle Polyline Demo}\n */\nfunction PolylineGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._positions = undefined;\n  this._positionsSubscription = undefined;\n  this._width = undefined;\n  this._widthSubscription = undefined;\n  this._granularity = undefined;\n  this._granularitySubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._depthFailMaterial = undefined;\n  this._depthFailMaterialSubscription = undefined;\n  this._arcType = undefined;\n  this._arcTypeSubscription = undefined;\n  this._clampToGround = undefined;\n  this._clampToGroundSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n  this._classificationType = undefined;\n  this._classificationTypeSubscription = undefined;\n  this._zIndex = undefined;\n  this._zIndexSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(PolylineGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof PolylineGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the polyline.\n   * @memberof PolylineGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the Property specifying the array of {@link Cartesian3}\n   * positions that define the line strip.\n   * @memberof PolylineGraphics.prototype\n   * @type {Property|undefined}\n   */\n  positions: createPropertyDescriptor(\"positions\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width in pixels.\n   * @memberof PolylineGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  width: createPropertyDescriptor(\"width\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the angular distance between each latitude and longitude if arcType is not ArcType.NONE and clampToGround is false.\n   * @memberof PolylineGraphics.prototype\n   * @type {Property|undefined}\n   * @default Cesium.Math.RADIANS_PER_DEGREE\n   */\n  granularity: createPropertyDescriptor(\"granularity\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to draw the polyline.\n   * @memberof PolylineGraphics.prototype\n   * @type {MaterialProperty}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to draw the polyline when it fails the depth test.\n   * <p>\n   * Requires the EXT_frag_depth WebGL extension to render properly. If the extension is not supported,\n   * there may be artifacts.\n   * </p>\n   * @memberof PolylineGraphics.prototype\n   * @type {MaterialProperty}\n   * @default undefined\n   */\n  depthFailMaterial: createMaterialPropertyDescriptor(\"depthFailMaterial\"),\n\n  /**\n   * Gets or sets the {@link ArcType} Property specifying whether the line segments should be great arcs, rhumb lines or linearly connected.\n   * @memberof PolylineGraphics.prototype\n   * @type {Property|undefined}\n   * @default ArcType.GEODESIC\n   */\n  arcType: createPropertyDescriptor(\"arcType\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the polyline\n   * should be clamped to the ground.\n   * @memberof PolylineGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  clampToGround: createPropertyDescriptor(\"clampToGround\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the polyline\n   * casts or receives shadows from light sources.\n   * @memberof PolylineGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.DISABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this polyline will be displayed.\n   * @memberof PolylineGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n\n  /**\n   * Gets or sets the {@link ClassificationType} Property specifying whether this polyline will classify terrain, 3D Tiles, or both when on the ground.\n   * @memberof PolylineGraphics.prototype\n   * @type {Property|undefined}\n   * @default ClassificationType.BOTH\n   */\n  classificationType: createPropertyDescriptor(\"classificationType\"),\n\n  /**\n   * Gets or sets the zIndex Property specifying the ordering of the polyline. Only has an effect if `clampToGround` is true and polylines on terrain is supported.\n   * @memberof PolylineGraphics.prototype\n   * @type {ConstantProperty|undefined}\n   * @default 0\n   */\n  zIndex: createPropertyDescriptor(\"zIndex\"),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {PolylineGraphics} [result] The object onto which to store the result.\n * @returns {PolylineGraphics} The modified result parameter or a new instance if one was not provided.\n */\nPolylineGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new PolylineGraphics(this);\n  }\n  result.show = this.show;\n  result.positions = this.positions;\n  result.width = this.width;\n  result.granularity = this.granularity;\n  result.material = this.material;\n  result.depthFailMaterial = this.depthFailMaterial;\n  result.arcType = this.arcType;\n  result.clampToGround = this.clampToGround;\n  result.shadows = this.shadows;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  result.classificationType = this.classificationType;\n  result.zIndex = this.zIndex;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {PolylineGraphics} source The object to be merged into this object.\n */\nPolylineGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.positions = defaultValue(this.positions, source.positions);\n  this.width = defaultValue(this.width, source.width);\n  this.granularity = defaultValue(this.granularity, source.granularity);\n  this.material = defaultValue(this.material, source.material);\n  this.depthFailMaterial = defaultValue(\n    this.depthFailMaterial,\n    source.depthFailMaterial\n  );\n  this.arcType = defaultValue(this.arcType, source.arcType);\n  this.clampToGround = defaultValue(this.clampToGround, source.clampToGround);\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n  this.classificationType = defaultValue(\n    this.classificationType,\n    source.classificationType\n  );\n  this.zIndex = defaultValue(this.zIndex, source.zIndex);\n};\nexport default PolylineGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} PolylineVolumeGraphics.ConstructorOptions\n *\n * Initialization options for the PolylineVolumeGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the volume.\n * @property {Property | Cartesian3[]} [positions] A Property specifying the array of {@link Cartesian3} positions which define the line strip.\n * @property {Property | Cartesian2[]} [shape] A Property specifying the array of {@link Cartesian2} positions which define the shape to be extruded.\n * @property {Property | CornerType} [cornerType=CornerType.ROUNDED] A {@link CornerType} Property specifying the style of the corners.\n * @property {Property | number} [granularity=Cesium.Math.RADIANS_PER_DEGREE] A numeric Property specifying the angular distance between each latitude and longitude point.\n * @property {Property | boolean} [fill=true] A boolean Property specifying whether the volume is filled with the provided material.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to fill the volume.\n * @property {Property | boolean} [outline=false] A boolean Property specifying whether the volume is outlined.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the width of the outline.\n * @property {Property | ShadowMode} [shadows=ShadowMode.DISABLED] An enum Property specifying whether the volume casts or receives shadows from light sources.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this volume will be displayed.\n */\n\n/**\n * Describes a polyline volume defined as a line strip and corresponding two dimensional shape which is extruded along it.\n * The resulting volume conforms to the curvature of the globe.\n *\n * @alias PolylineVolumeGraphics\n * @constructor\n *\n * @param {PolylineVolumeGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @see Entity\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Polyline%20Volume.html|Cesium Sandcastle Polyline Volume Demo}\n */\nfunction PolylineVolumeGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._positions = undefined;\n  this._positionsSubscription = undefined;\n  this._shape = undefined;\n  this._shapeSubscription = undefined;\n  this._cornerType = undefined;\n  this._cornerTypeSubscription = undefined;\n  this._granularity = undefined;\n  this._granularitySubscription = undefined;\n  this._fill = undefined;\n  this._fillSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._outline = undefined;\n  this._outlineSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubsription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(PolylineVolumeGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof PolylineVolumeGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the volume.\n   * @memberof PolylineVolumeGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the Property specifying the array of {@link Cartesian3} positions which define the line strip.\n   * @memberof PolylineVolumeGraphics.prototype\n   * @type {Property|undefined}\n   */\n  positions: createPropertyDescriptor(\"positions\"),\n\n  /**\n   * Gets or sets the Property specifying the array of {@link Cartesian2} positions which define the shape to be extruded.\n   * @memberof PolylineVolumeGraphics.prototype\n   * @type {Property|undefined}\n   */\n  shape: createPropertyDescriptor(\"shape\"),\n\n  /**\n   * Gets or sets the {@link CornerType} Property specifying the style of the corners.\n   * @memberof PolylineVolumeGraphics.prototype\n   * @type {Property|undefined}\n   * @default CornerType.ROUNDED\n   */\n  cornerType: createPropertyDescriptor(\"cornerType\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the angular distance between points on the volume.\n   * @memberof PolylineVolumeGraphics.prototype\n   * @type {Property|undefined}\n   * @default {CesiumMath.RADIANS_PER_DEGREE}\n   */\n  granularity: createPropertyDescriptor(\"granularity\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the volume is filled with the provided material.\n   * @memberof PolylineVolumeGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  fill: createPropertyDescriptor(\"fill\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to fill the volume.\n   * @memberof PolylineVolumeGraphics.prototype\n   * @type {MaterialProperty}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the Property specifying whether the volume is outlined.\n   * @memberof PolylineVolumeGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  outline: createPropertyDescriptor(\"outline\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof PolylineVolumeGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * <p>\n   * Note: This property will be ignored on all major browsers on Windows platforms. For details, see (@link https://github.com/CesiumGS/cesium/issues/40}.\n   * </p>\n   * @memberof PolylineVolumeGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the volume\n   * casts or receives shadows from light sources.\n   * @memberof PolylineVolumeGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.DISABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this volume will be displayed.\n   * @memberof PolylineVolumeGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {PolylineVolumeGraphics} [result] The object onto which to store the result.\n * @returns {PolylineVolumeGraphics} The modified result parameter or a new instance if one was not provided.\n */\nPolylineVolumeGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new PolylineVolumeGraphics(this);\n  }\n  result.show = this.show;\n  result.positions = this.positions;\n  result.shape = this.shape;\n  result.cornerType = this.cornerType;\n  result.granularity = this.granularity;\n  result.fill = this.fill;\n  result.material = this.material;\n  result.outline = this.outline;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.shadows = this.shadows;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {PolylineVolumeGraphics} source The object to be merged into this object.\n */\nPolylineVolumeGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.positions = defaultValue(this.positions, source.positions);\n  this.shape = defaultValue(this.shape, source.shape);\n  this.cornerType = defaultValue(this.cornerType, source.cornerType);\n  this.granularity = defaultValue(this.granularity, source.granularity);\n  this.fill = defaultValue(this.fill, source.fill);\n  this.material = defaultValue(this.material, source.material);\n  this.outline = defaultValue(this.outline, source.outline);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n};\nexport default PolylineVolumeGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} RectangleGraphics.ConstructorOptions\n *\n * Initialization options for the RectangleGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the rectangle.\n * @property {Property | Rectangle} [coordinates] The Property specifying the {@link Rectangle}.\n * @property {Property | number} [height=0] A numeric Property specifying the altitude of the rectangle relative to the ellipsoid surface.\n * @property {Property | HeightReference} [heightReference=HeightReference.NONE] A Property specifying what the height is relative to.\n * @property {Property | number} [extrudedHeight] A numeric Property specifying the altitude of the rectangle's extruded face relative to the ellipsoid surface.\n * @property {Property | HeightReference} [extrudedHeightReference=HeightReference.NONE] A Property specifying what the extrudedHeight is relative to.\n * @property {Property | number} [rotation=0.0] A numeric property specifying the rotation of the rectangle clockwise from north.\n * @property {Property | number} [stRotation=0.0] A numeric property specifying the rotation of the rectangle texture counter-clockwise from north.\n * @property {Property | number} [granularity=Cesium.Math.RADIANS_PER_DEGREE] A numeric Property specifying the angular distance between points on the rectangle.\n * @property {Property | boolean} [fill=true] A boolean Property specifying whether the rectangle is filled with the provided material.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to fill the rectangle.\n * @property {Property | boolean} [outline=false] A boolean Property specifying whether the rectangle is outlined.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the width of the outline.\n * @property {Property | ShadowMode} [shadows=ShadowMode.DISABLED] An enum Property specifying whether the rectangle casts or receives shadows from light sources.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this rectangle will be displayed.\n * @property {Property | ClassificationType} [classificationType=ClassificationType.BOTH] An enum Property specifying whether this rectangle will classify terrain, 3D Tiles, or both when on the ground.\n * @property {Property | number} [zIndex=0] A Property specifying the zIndex used for ordering ground geometry.  Only has an effect if the rectangle is constant and neither height or extrudedHeight are specified.\n */\n\n/**\n * Describes graphics for a {@link Rectangle}.\n * The rectangle conforms to the curvature of the globe and can be placed on the surface or\n * at altitude and can optionally be extruded into a volume.\n *\n * @alias RectangleGraphics\n * @constructor\n *\n * @param {RectangleGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @see Entity\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Rectangle.html|Cesium Sandcastle Rectangle Demo}\n */\nfunction RectangleGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._coordinates = undefined;\n  this._coordinatesSubscription = undefined;\n  this._height = undefined;\n  this._heightSubscription = undefined;\n  this._heightReference = undefined;\n  this._heightReferenceSubscription = undefined;\n  this._extrudedHeight = undefined;\n  this._extrudedHeightSubscription = undefined;\n  this._extrudedHeightReference = undefined;\n  this._extrudedHeightReferenceSubscription = undefined;\n  this._rotation = undefined;\n  this._rotationSubscription = undefined;\n  this._stRotation = undefined;\n  this._stRotationSubscription = undefined;\n  this._granularity = undefined;\n  this._granularitySubscription = undefined;\n  this._fill = undefined;\n  this._fillSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._outline = undefined;\n  this._outlineSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distancedisplayConditionSubscription = undefined;\n  this._classificationType = undefined;\n  this._classificationTypeSubscription = undefined;\n  this._zIndex = undefined;\n  this._zIndexSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(RectangleGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof RectangleGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the rectangle.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Rectangle}.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   */\n  coordinates: createPropertyDescriptor(\"coordinates\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the altitude of the rectangle.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0.0\n   */\n  height: createPropertyDescriptor(\"height\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link HeightReference}.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  heightReference: createPropertyDescriptor(\"heightReference\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the altitude of the rectangle extrusion.\n   * Setting this property creates volume starting at height and ending at this altitude.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   */\n  extrudedHeight: createPropertyDescriptor(\"extrudedHeight\"),\n\n  /**\n   * Gets or sets the Property specifying the extruded {@link HeightReference}.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default HeightReference.NONE\n   */\n  extrudedHeightReference: createPropertyDescriptor(\"extrudedHeightReference\"),\n\n  /**\n   * Gets or sets the numeric property specifying the rotation of the rectangle clockwise from north.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0\n   */\n  rotation: createPropertyDescriptor(\"rotation\"),\n\n  /**\n   * Gets or sets the numeric property specifying the rotation of the rectangle texture counter-clockwise from north.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default 0\n   */\n  stRotation: createPropertyDescriptor(\"stRotation\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the angular distance between points on the rectangle.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default {CesiumMath.RADIANS_PER_DEGREE}\n   */\n  granularity: createPropertyDescriptor(\"granularity\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the rectangle is filled with the provided material.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  fill: createPropertyDescriptor(\"fill\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to fill the rectangle.\n   * @memberof RectangleGraphics.prototype\n   * @type {MaterialProperty}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the Property specifying whether the rectangle is outlined.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  outline: createPropertyDescriptor(\"outline\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * <p>\n   * Note: This property will be ignored on all major browsers on Windows platforms. For details, see (@link https://github.com/CesiumGS/cesium/issues/40}.\n   * </p>\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the rectangle\n   * casts or receives shadows from light sources.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.DISABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this rectangle will be displayed.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n\n  /**\n   * Gets or sets the {@link ClassificationType} Property specifying whether this rectangle will classify terrain, 3D Tiles, or both when on the ground.\n   * @memberof RectangleGraphics.prototype\n   * @type {Property|undefined}\n   * @default ClassificationType.BOTH\n   */\n  classificationType: createPropertyDescriptor(\"classificationType\"),\n\n  /**\n   * Gets or sets the zIndex Property specifying the ordering of the rectangle.  Only has an effect if the rectangle is constant and neither height or extrudedHeight are specified.\n   * @memberof RectangleGraphics.prototype\n   * @type {ConstantProperty|undefined}\n   * @default 0\n   */\n  zIndex: createPropertyDescriptor(\"zIndex\"),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {RectangleGraphics} [result] The object onto which to store the result.\n * @returns {RectangleGraphics} The modified result parameter or a new instance if one was not provided.\n */\nRectangleGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new RectangleGraphics(this);\n  }\n  result.show = this.show;\n  result.coordinates = this.coordinates;\n  result.height = this.height;\n  result.heightReference = this.heightReference;\n  result.extrudedHeight = this.extrudedHeight;\n  result.extrudedHeightReference = this.extrudedHeightReference;\n  result.rotation = this.rotation;\n  result.stRotation = this.stRotation;\n  result.granularity = this.granularity;\n  result.fill = this.fill;\n  result.material = this.material;\n  result.outline = this.outline;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.shadows = this.shadows;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  result.classificationType = this.classificationType;\n  result.zIndex = this.zIndex;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {RectangleGraphics} source The object to be merged into this object.\n */\nRectangleGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.coordinates = defaultValue(this.coordinates, source.coordinates);\n  this.height = defaultValue(this.height, source.height);\n  this.heightReference = defaultValue(\n    this.heightReference,\n    source.heightReference\n  );\n  this.extrudedHeight = defaultValue(\n    this.extrudedHeight,\n    source.extrudedHeight\n  );\n  this.extrudedHeightReference = defaultValue(\n    this.extrudedHeightReference,\n    source.extrudedHeightReference\n  );\n  this.rotation = defaultValue(this.rotation, source.rotation);\n  this.stRotation = defaultValue(this.stRotation, source.stRotation);\n  this.granularity = defaultValue(this.granularity, source.granularity);\n  this.fill = defaultValue(this.fill, source.fill);\n  this.material = defaultValue(this.material, source.material);\n  this.outline = defaultValue(this.outline, source.outline);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n  this.classificationType = defaultValue(\n    this.classificationType,\n    source.classificationType\n  );\n  this.zIndex = defaultValue(this.zIndex, source.zIndex);\n};\nexport default RectangleGraphics;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {object} WallGraphics.ConstructorOptions\n *\n * Initialization options for the WallGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the wall.\n * @property {Property | Cartesian3[]} [positions] A Property specifying the array of {@link Cartesian3} positions which define the top of the wall.\n * @property {Property | number[]} [minimumHeights] A Property specifying an array of heights to be used for the bottom of the wall instead of the globe surface.\n * @property {Property | number[]} [maximumHeights] A Property specifying an array of heights to be used for the top of the wall instead of the height of each position.\n * @property {Property | number} [granularity=Cesium.Math.RADIANS_PER_DEGREE] A numeric Property specifying the angular distance between each latitude and longitude point.\n * @property {Property | boolean} [fill=true] A boolean Property specifying whether the wall is filled with the provided material.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to fill the wall.\n * @property {Property | boolean} [outline=false] A boolean Property specifying whether the wall is outlined.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the width of the outline.\n * @property {Property | ShadowMode} [shadows=ShadowMode.DISABLED] An enum Property specifying whether the wall casts or receives shadows from light sources.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this wall will be displayed.\n */\n\n/**\n * Describes a two dimensional wall defined as a line strip and optional maximum and minimum heights.\n * The wall conforms to the curvature of the globe and can be placed along the surface or at altitude.\n *\n * @alias WallGraphics\n * @constructor\n *\n * @param {WallGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @see Entity\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Wall.html|Cesium Sandcastle Wall Demo}\n */\nfunction WallGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._positions = undefined;\n  this._positionsSubscription = undefined;\n  this._minimumHeights = undefined;\n  this._minimumHeightsSubscription = undefined;\n  this._maximumHeights = undefined;\n  this._maximumHeightsSubscription = undefined;\n  this._granularity = undefined;\n  this._granularitySubscription = undefined;\n  this._fill = undefined;\n  this._fillSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._outline = undefined;\n  this._outlineSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(WallGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof WallGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the wall.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the Property specifying the array of {@link Cartesian3} positions which define the top of the wall.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   */\n  positions: createPropertyDescriptor(\"positions\"),\n\n  /**\n   * Gets or sets the Property specifying an array of heights to be used for the bottom of the wall instead of the surface of the globe.\n   * If defined, the array must be the same length as {@link Wall#positions}.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   */\n  minimumHeights: createPropertyDescriptor(\"minimumHeights\"),\n\n  /**\n   * Gets or sets the Property specifying an array of heights to be used for the top of the wall instead of the height of each position.\n   * If defined, the array must be the same length as {@link Wall#positions}.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   */\n  maximumHeights: createPropertyDescriptor(\"maximumHeights\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the angular distance between points on the wall.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default {CesiumMath.RADIANS_PER_DEGREE}\n   */\n  granularity: createPropertyDescriptor(\"granularity\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the wall is filled with the provided material.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  fill: createPropertyDescriptor(\"fill\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to fill the wall.\n   * @memberof WallGraphics.prototype\n   * @type {MaterialProperty}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the Property specifying whether the wall is outlined.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  outline: createPropertyDescriptor(\"outline\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * <p>\n   * Note: This property will be ignored on all major browsers on Windows platforms. For details, see (@link https://github.com/CesiumGS/cesium/issues/40}.\n   * </p>\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the wall\n   * casts or receives shadows from light sources.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.DISABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this wall will be displayed.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {WallGraphics} [result] The object onto which to store the result.\n * @returns {WallGraphics} The modified result parameter or a new instance if one was not provided.\n */\nWallGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new WallGraphics(this);\n  }\n  result.show = this.show;\n  result.positions = this.positions;\n  result.minimumHeights = this.minimumHeights;\n  result.maximumHeights = this.maximumHeights;\n  result.granularity = this.granularity;\n  result.fill = this.fill;\n  result.material = this.material;\n  result.outline = this.outline;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.shadows = this.shadows;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {WallGraphics} source The object to be merged into this object.\n */\nWallGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.positions = defaultValue(this.positions, source.positions);\n  this.minimumHeights = defaultValue(\n    this.minimumHeights,\n    source.minimumHeights\n  );\n  this.maximumHeights = defaultValue(\n    this.maximumHeights,\n    source.maximumHeights\n  );\n  this.granularity = defaultValue(this.granularity, source.granularity);\n  this.fill = defaultValue(this.fill, source.fill);\n  this.material = defaultValue(this.material, source.material);\n  this.outline = defaultValue(this.outline, source.outline);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n};\nexport default WallGraphics;\n","import Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartographic from \"../Core/Cartographic.js\";\nimport Check from \"../Core/Check.js\";\nimport createGuid from \"../Core/createGuid.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport Quaternion from \"../Core/Quaternion.js\";\nimport Transforms from \"../Core/Transforms.js\";\nimport GroundPolylinePrimitive from \"../Scene/GroundPolylinePrimitive.js\";\nimport GroundPrimitive from \"../Scene/GroundPrimitive.js\";\nimport HeightReference, {\n  isHeightReferenceClamp,\n} from \"../Scene/HeightReference.js\";\nimport BillboardGraphics from \"./BillboardGraphics.js\";\nimport BoxGraphics from \"./BoxGraphics.js\";\nimport ConstantPositionProperty from \"./ConstantPositionProperty.js\";\nimport CorridorGraphics from \"./CorridorGraphics.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport createRawPropertyDescriptor from \"./createRawPropertyDescriptor.js\";\nimport CylinderGraphics from \"./CylinderGraphics.js\";\nimport EllipseGraphics from \"./EllipseGraphics.js\";\nimport EllipsoidGraphics from \"./EllipsoidGraphics.js\";\nimport LabelGraphics from \"./LabelGraphics.js\";\nimport ModelGraphics from \"./ModelGraphics.js\";\nimport Cesium3DTilesetGraphics from \"./Cesium3DTilesetGraphics.js\";\nimport PathGraphics from \"./PathGraphics.js\";\nimport PlaneGraphics from \"./PlaneGraphics.js\";\nimport PointGraphics from \"./PointGraphics.js\";\nimport PolygonGraphics from \"./PolygonGraphics.js\";\nimport PolylineGraphics from \"./PolylineGraphics.js\";\nimport PolylineVolumeGraphics from \"./PolylineVolumeGraphics.js\";\nimport Property from \"./Property.js\";\nimport PropertyBag from \"./PropertyBag.js\";\nimport RectangleGraphics from \"./RectangleGraphics.js\";\nimport WallGraphics from \"./WallGraphics.js\";\n\nconst cartoScratch = new Cartographic();\n\nconst ExtraPropertyNames = [];\n\nfunction createConstantPositionProperty(value) {\n  return new ConstantPositionProperty(value);\n}\n\nfunction createPositionPropertyDescriptor(name) {\n  return createPropertyDescriptor(\n    name,\n    undefined,\n    createConstantPositionProperty\n  );\n}\n\nfunction createPropertyTypeDescriptor(name, Type) {\n  return createPropertyDescriptor(name, undefined, function (value) {\n    if (value instanceof Type) {\n      return value;\n    }\n    return new Type(value);\n  });\n}\n\n/**\n * @typedef {object} Entity.ConstructorOptions\n *\n * Initialization options for the Entity constructor\n *\n * @property {string} [id] A unique identifier for this object. If none is provided, a GUID is generated.\n * @property {string} [name] A human readable name to display to users. It does not have to be unique.\n * @property {TimeIntervalCollection} [availability] The availability, if any, associated with this object.\n * @property {boolean} [show] A boolean value indicating if the entity and its children are displayed.\n * @property {Property | string} [description] A string Property specifying an HTML description for this entity.\n * @property {PositionProperty | Cartesian3} [position] A Property specifying the entity position.\n * @property {Property | Quaternion} [orientation=Transforms.eastNorthUpToFixedFrame(position)] A Property specifying the entity orientation in respect to Earth-fixed-Earth-centered (ECEF). If undefined, east-north-up at entity position is used.\n * @property {Property | Cartesian3} [viewFrom] A suggested initial offset for viewing this object.\n * @property {Entity} [parent] A parent entity to associate with this entity.\n * @property {BillboardGraphics | BillboardGraphics.ConstructorOptions} [billboard] A billboard to associate with this entity.\n * @property {BoxGraphics | BoxGraphics.ConstructorOptions} [box] A box to associate with this entity.\n * @property {CorridorGraphics | CorridorGraphics.ConstructorOptions} [corridor] A corridor to associate with this entity.\n * @property {CylinderGraphics | CylinderGraphics.ConstructorOptions} [cylinder] A cylinder to associate with this entity.\n * @property {EllipseGraphics | EllipseGraphics.ConstructorOptions} [ellipse] A ellipse to associate with this entity.\n * @property {EllipsoidGraphics | EllipsoidGraphics.ConstructorOptions} [ellipsoid] A ellipsoid to associate with this entity.\n * @property {LabelGraphics | LabelGraphics.ConstructorOptions} [label] A options.label to associate with this entity.\n * @property {ModelGraphics | ModelGraphics.ConstructorOptions} [model] A model to associate with this entity.\n * @property {Cesium3DTilesetGraphics | Cesium3DTilesetGraphics.ConstructorOptions} [tileset] A 3D Tiles tileset to associate with this entity.\n * @property {PathGraphics | PathGraphics.ConstructorOptions} [path] A path to associate with this entity.\n * @property {PlaneGraphics | PlaneGraphics.ConstructorOptions} [plane] A plane to associate with this entity.\n * @property {PointGraphics | PointGraphics.ConstructorOptions} [point] A point to associate with this entity.\n * @property {PolygonGraphics | PolygonGraphics.ConstructorOptions} [polygon] A polygon to associate with this entity.\n * @property {PolylineGraphics | PolylineGraphics.ConstructorOptions} [polyline] A polyline to associate with this entity.\n * @property {PropertyBag | Object<string,*>} [properties] Arbitrary properties to associate with this entity.\n * @property {PolylineVolumeGraphics | PolylineVolumeGraphics.ConstructorOptions} [polylineVolume] A polylineVolume to associate with this entity.\n * @property {RectangleGraphics | RectangleGraphics.ConstructorOptions} [rectangle] A rectangle to associate with this entity.\n * @property {WallGraphics | WallGraphics.ConstructorOptions} [wall] A wall to associate with this entity.\n */\n\n/**\n * Entity instances aggregate multiple forms of visualization into a single high-level object.\n * They can be created manually and added to {@link Viewer#entities} or be produced by\n * data sources, such as {@link CzmlDataSource} and {@link GeoJsonDataSource}.\n * @alias Entity\n * @constructor\n *\n * @param {Entity.ConstructorOptions} [options] Object describing initialization options\n *\n * @see {@link https://cesium.com/learn/cesiumjs-learn/cesiumjs-creating-entities/|Creating Entities}\n */\nfunction Entity(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  let id = options.id;\n  if (!defined(id)) {\n    id = createGuid();\n  }\n\n  this._availability = undefined;\n  this._id = id;\n  this._definitionChanged = new Event();\n  this._name = options.name;\n  this._show = defaultValue(options.show, true);\n  this._parent = undefined;\n  this._propertyNames = [\n    \"billboard\",\n    \"box\",\n    \"corridor\",\n    \"cylinder\",\n    \"description\",\n    \"ellipse\",\n    \"ellipsoid\",\n    \"label\",\n    \"model\",\n    \"tileset\",\n    \"orientation\",\n    \"path\",\n    \"plane\",\n    \"point\",\n    \"polygon\",\n    \"polyline\",\n    \"polylineVolume\",\n    \"position\",\n    \"properties\",\n    \"rectangle\",\n    \"viewFrom\",\n    \"wall\",\n    ...ExtraPropertyNames,\n  ];\n\n  this._billboard = undefined;\n  this._billboardSubscription = undefined;\n  this._box = undefined;\n  this._boxSubscription = undefined;\n  this._corridor = undefined;\n  this._corridorSubscription = undefined;\n  this._cylinder = undefined;\n  this._cylinderSubscription = undefined;\n  this._description = undefined;\n  this._descriptionSubscription = undefined;\n  this._ellipse = undefined;\n  this._ellipseSubscription = undefined;\n  this._ellipsoid = undefined;\n  this._ellipsoidSubscription = undefined;\n  this._label = undefined;\n  this._labelSubscription = undefined;\n  this._model = undefined;\n  this._modelSubscription = undefined;\n  this._tileset = undefined;\n  this._tilesetSubscription = undefined;\n  this._orientation = undefined;\n  this._orientationSubscription = undefined;\n  this._path = undefined;\n  this._pathSubscription = undefined;\n  this._plane = undefined;\n  this._planeSubscription = undefined;\n  this._point = undefined;\n  this._pointSubscription = undefined;\n  this._polygon = undefined;\n  this._polygonSubscription = undefined;\n  this._polyline = undefined;\n  this._polylineSubscription = undefined;\n  this._polylineVolume = undefined;\n  this._polylineVolumeSubscription = undefined;\n  this._position = undefined;\n  this._positionSubscription = undefined;\n  this._properties = undefined;\n  this._propertiesSubscription = undefined;\n  this._rectangle = undefined;\n  this._rectangleSubscription = undefined;\n  this._viewFrom = undefined;\n  this._viewFromSubscription = undefined;\n  this._wall = undefined;\n  this._wallSubscription = undefined;\n  this._children = [];\n\n  /**\n   * Gets or sets the entity collection that this entity belongs to.\n   * @type {EntityCollection}\n   */\n  this.entityCollection = undefined;\n\n  this.parent = options.parent;\n  this.merge(options);\n}\n\nfunction updateShow(entity, children, isShowing) {\n  const length = children.length;\n  for (let i = 0; i < length; i++) {\n    const child = children[i];\n    const childShow = child._show;\n    const oldValue = !isShowing && childShow;\n    const newValue = isShowing && childShow;\n    if (oldValue !== newValue) {\n      updateShow(child, child._children, isShowing);\n    }\n  }\n  entity._definitionChanged.raiseEvent(\n    entity,\n    \"isShowing\",\n    isShowing,\n    !isShowing\n  );\n}\n\nObject.defineProperties(Entity.prototype, {\n  /**\n   * The availability, if any, associated with this object.\n   * If availability is undefined, it is assumed that this object's\n   * other properties will return valid data for any provided time.\n   * If availability exists, the objects other properties will only\n   * provide valid data if queried within the given interval.\n   * @memberof Entity.prototype\n   * @type {TimeIntervalCollection|undefined}\n   */\n  availability: createRawPropertyDescriptor(\"availability\"),\n  /**\n   * Gets the unique ID associated with this object.\n   * @memberof Entity.prototype\n   * @type {string}\n   */\n  id: {\n    get: function () {\n      return this._id;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof Entity.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets or sets the name of the object.  The name is intended for end-user\n   * consumption and does not need to be unique.\n   * @memberof Entity.prototype\n   * @type {string|undefined}\n   */\n  name: createRawPropertyDescriptor(\"name\"),\n  /**\n   * Gets or sets whether this entity should be displayed. When set to true,\n   * the entity is only displayed if the parent entity's show property is also true.\n   * @memberof Entity.prototype\n   * @type {boolean}\n   */\n  show: {\n    get: function () {\n      return this._show;\n    },\n    set: function (value) {\n      //>>includeStart('debug', pragmas.debug);\n      if (!defined(value)) {\n        throw new DeveloperError(\"value is required.\");\n      }\n      //>>includeEnd('debug');\n\n      if (value === this._show) {\n        return;\n      }\n\n      const wasShowing = this.isShowing;\n      this._show = value;\n      const isShowing = this.isShowing;\n\n      if (wasShowing !== isShowing) {\n        updateShow(this, this._children, isShowing);\n      }\n\n      this._definitionChanged.raiseEvent(this, \"show\", value, !value);\n    },\n  },\n  /**\n   * Gets whether this entity is being displayed, taking into account\n   * the visibility of any ancestor entities.\n   * @memberof Entity.prototype\n   * @type {boolean}\n   */\n  isShowing: {\n    get: function () {\n      return (\n        this._show &&\n        (!defined(this.entityCollection) || this.entityCollection.show) &&\n        (!defined(this._parent) || this._parent.isShowing)\n      );\n    },\n  },\n  /**\n   * Gets or sets the parent object.\n   * @memberof Entity.prototype\n   * @type {Entity|undefined}\n   */\n  parent: {\n    get: function () {\n      return this._parent;\n    },\n    set: function (value) {\n      const oldValue = this._parent;\n\n      if (oldValue === value) {\n        return;\n      }\n\n      const wasShowing = this.isShowing;\n      if (defined(oldValue)) {\n        const index = oldValue._children.indexOf(this);\n        oldValue._children.splice(index, 1);\n      }\n\n      this._parent = value;\n      if (defined(value)) {\n        value._children.push(this);\n      }\n\n      const isShowing = this.isShowing;\n\n      if (wasShowing !== isShowing) {\n        updateShow(this, this._children, isShowing);\n      }\n\n      this._definitionChanged.raiseEvent(this, \"parent\", value, oldValue);\n    },\n  },\n  /**\n   * Gets the names of all properties registered on this instance.\n   * @memberof Entity.prototype\n   * @type {string[]}\n   */\n  propertyNames: {\n    get: function () {\n      return this._propertyNames;\n    },\n  },\n  /**\n   * Gets or sets the billboard.\n   * @memberof Entity.prototype\n   * @type {BillboardGraphics|undefined}\n   */\n  billboard: createPropertyTypeDescriptor(\"billboard\", BillboardGraphics),\n  /**\n   * Gets or sets the box.\n   * @memberof Entity.prototype\n   * @type {BoxGraphics|undefined}\n   */\n  box: createPropertyTypeDescriptor(\"box\", BoxGraphics),\n  /**\n   * Gets or sets the corridor.\n   * @memberof Entity.prototype\n   * @type {CorridorGraphics|undefined}\n   */\n  corridor: createPropertyTypeDescriptor(\"corridor\", CorridorGraphics),\n  /**\n   * Gets or sets the cylinder.\n   * @memberof Entity.prototype\n   * @type {CylinderGraphics|undefined}\n   */\n  cylinder: createPropertyTypeDescriptor(\"cylinder\", CylinderGraphics),\n  /**\n   * Gets or sets the description.\n   * @memberof Entity.prototype\n   * @type {Property|undefined}\n   */\n  description: createPropertyDescriptor(\"description\"),\n  /**\n   * Gets or sets the ellipse.\n   * @memberof Entity.prototype\n   * @type {EllipseGraphics|undefined}\n   */\n  ellipse: createPropertyTypeDescriptor(\"ellipse\", EllipseGraphics),\n  /**\n   * Gets or sets the ellipsoid.\n   * @memberof Entity.prototype\n   * @type {EllipsoidGraphics|undefined}\n   */\n  ellipsoid: createPropertyTypeDescriptor(\"ellipsoid\", EllipsoidGraphics),\n  /**\n   * Gets or sets the label.\n   * @memberof Entity.prototype\n   * @type {LabelGraphics|undefined}\n   */\n  label: createPropertyTypeDescriptor(\"label\", LabelGraphics),\n  /**\n   * Gets or sets the model.\n   * @memberof Entity.prototype\n   * @type {ModelGraphics|undefined}\n   */\n  model: createPropertyTypeDescriptor(\"model\", ModelGraphics),\n  /**\n   * Gets or sets the tileset.\n   * @memberof Entity.prototype\n   * @type {Cesium3DTilesetGraphics|undefined}\n   */\n  tileset: createPropertyTypeDescriptor(\"tileset\", Cesium3DTilesetGraphics),\n  /**\n   * Gets or sets the orientation in respect to Earth-fixed-Earth-centered (ECEF).\n   * Defaults to east-north-up at entity position.\n   * @memberof Entity.prototype\n   * @type {Property|undefined}\n   */\n  orientation: createPropertyDescriptor(\"orientation\"),\n  /**\n   * Gets or sets the path.\n   * @memberof Entity.prototype\n   * @type {PathGraphics|undefined}\n   */\n  path: createPropertyTypeDescriptor(\"path\", PathGraphics),\n  /**\n   * Gets or sets the plane.\n   * @memberof Entity.prototype\n   * @type {PlaneGraphics|undefined}\n   */\n  plane: createPropertyTypeDescriptor(\"plane\", PlaneGraphics),\n  /**\n   * Gets or sets the point graphic.\n   * @memberof Entity.prototype\n   * @type {PointGraphics|undefined}\n   */\n  point: createPropertyTypeDescriptor(\"point\", PointGraphics),\n  /**\n   * Gets or sets the polygon.\n   * @memberof Entity.prototype\n   * @type {PolygonGraphics|undefined}\n   */\n  polygon: createPropertyTypeDescriptor(\"polygon\", PolygonGraphics),\n  /**\n   * Gets or sets the polyline.\n   * @memberof Entity.prototype\n   * @type {PolylineGraphics|undefined}\n   */\n  polyline: createPropertyTypeDescriptor(\"polyline\", PolylineGraphics),\n  /**\n   * Gets or sets the polyline volume.\n   * @memberof Entity.prototype\n   * @type {PolylineVolumeGraphics|undefined}\n   */\n  polylineVolume: createPropertyTypeDescriptor(\n    \"polylineVolume\",\n    PolylineVolumeGraphics\n  ),\n  /**\n   * Gets or sets the bag of arbitrary properties associated with this entity.\n   * @memberof Entity.prototype\n   * @type {PropertyBag|undefined}\n   */\n  properties: createPropertyTypeDescriptor(\"properties\", PropertyBag),\n  /**\n   * Gets or sets the position.\n   * @memberof Entity.prototype\n   * @type {PositionProperty|undefined}\n   */\n  position: createPositionPropertyDescriptor(\"position\"),\n  /**\n   * Gets or sets the rectangle.\n   * @memberof Entity.prototype\n   * @type {RectangleGraphics|undefined}\n   */\n  rectangle: createPropertyTypeDescriptor(\"rectangle\", RectangleGraphics),\n  /**\n   * Gets or sets the suggested initial offset when tracking this object.\n   * The offset is typically defined in the east-north-up reference frame,\n   * but may be another frame depending on the object's velocity.\n   * @memberof Entity.prototype\n   * @type {Property|undefined}\n   */\n  viewFrom: createPropertyDescriptor(\"viewFrom\"),\n  /**\n   * Gets or sets the wall.\n   * @memberof Entity.prototype\n   * @type {WallGraphics|undefined}\n   */\n  wall: createPropertyTypeDescriptor(\"wall\", WallGraphics),\n});\n\n/**\n * Add the specified type and construct the properties for it in the Entity class\n * @private\n * @param {string} propertyName name of the property that controls/accesses this entity type\n * @param {{ constructor: function }} Type The Graphics class to associate with this entity type\n */\nEntity.registerEntityType = function (propertyName, Type) {\n  Object.defineProperties(Entity.prototype, {\n    [propertyName]: createPropertyTypeDescriptor(propertyName, Type),\n  });\n  if (!ExtraPropertyNames.includes(propertyName)) {\n    ExtraPropertyNames.push(propertyName);\n  }\n};\n\n/**\n * Given a time, returns true if this object should have data during that time.\n *\n * @param {JulianDate} time The time to check availability for.\n * @returns {boolean} true if the object should have data during the provided time, false otherwise.\n */\nEntity.prototype.isAvailable = function (time) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const availability = this._availability;\n  return !defined(availability) || availability.contains(time);\n};\n\n/**\n * Adds a property to this object.  Once a property is added, it can be\n * observed with {@link Entity#definitionChanged} and composited\n * with {@link CompositeEntityCollection}\n *\n * @param {string} propertyName The name of the property to add.\n *\n * @exception {DeveloperError} \"propertyName\" is a reserved property name.\n * @exception {DeveloperError} \"propertyName\" is already a registered property.\n */\nEntity.prototype.addProperty = function (propertyName) {\n  const propertyNames = this._propertyNames;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(propertyName)) {\n    throw new DeveloperError(\"propertyName is required.\");\n  }\n  if (propertyNames.indexOf(propertyName) !== -1) {\n    throw new DeveloperError(\n      `${propertyName} is already a registered property.`\n    );\n  }\n  if (propertyName in this) {\n    throw new DeveloperError(`${propertyName} is a reserved property name.`);\n  }\n  //>>includeEnd('debug');\n\n  propertyNames.push(propertyName);\n  Object.defineProperty(\n    this,\n    propertyName,\n    createRawPropertyDescriptor(propertyName, true)\n  );\n};\n\n/**\n * Removed a property previously added with addProperty.\n *\n * @param {string} propertyName The name of the property to remove.\n *\n * @exception {DeveloperError} \"propertyName\" is a reserved property name.\n * @exception {DeveloperError} \"propertyName\" is not a registered property.\n */\nEntity.prototype.removeProperty = function (propertyName) {\n  const propertyNames = this._propertyNames;\n  const index = propertyNames.indexOf(propertyName);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(propertyName)) {\n    throw new DeveloperError(\"propertyName is required.\");\n  }\n  if (index === -1) {\n    throw new DeveloperError(`${propertyName} is not a registered property.`);\n  }\n  //>>includeEnd('debug');\n\n  this._propertyNames.splice(index, 1);\n  delete this[propertyName];\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {Entity} source The object to be merged into this object.\n */\nEntity.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  //Name, show, and availability are not Property objects and are currently handled differently.\n  //source.show is intentionally ignored because this.show always has a value.\n  this.name = defaultValue(this.name, source.name);\n  this.availability = defaultValue(this.availability, source.availability);\n\n  const propertyNames = this._propertyNames;\n  const sourcePropertyNames = defined(source._propertyNames)\n    ? source._propertyNames\n    : Object.keys(source);\n  const propertyNamesLength = sourcePropertyNames.length;\n  for (let i = 0; i < propertyNamesLength; i++) {\n    const name = sourcePropertyNames[i];\n\n    //While source is required by the API to be an Entity, we internally call this method from the\n    //constructor with an options object to configure initial custom properties.\n    //So we need to ignore reserved-non-property.\n    if (\n      name === \"parent\" ||\n      name === \"name\" ||\n      name === \"availability\" ||\n      name === \"children\"\n    ) {\n      continue;\n    }\n\n    const targetProperty = this[name];\n    const sourceProperty = source[name];\n\n    //Custom properties that are registered on the source entity must also\n    //get registered on this entity.\n    if (!defined(targetProperty) && propertyNames.indexOf(name) === -1) {\n      this.addProperty(name);\n    }\n\n    if (defined(sourceProperty)) {\n      if (defined(targetProperty)) {\n        if (defined(targetProperty.merge)) {\n          targetProperty.merge(sourceProperty);\n        }\n      } else if (\n        defined(sourceProperty.merge) &&\n        defined(sourceProperty.clone)\n      ) {\n        this[name] = sourceProperty.clone();\n      } else {\n        this[name] = sourceProperty;\n      }\n    }\n  }\n};\n\nconst matrix3Scratch = new Matrix3();\nconst positionScratch = new Cartesian3();\nconst orientationScratch = new Quaternion();\n\n/**\n * Computes the model matrix for the entity's transform at specified time. Returns undefined if position is undefined\n *\n * @param {JulianDate} time The time to retrieve model matrix for.\n * @param {Matrix4} [result] The object onto which to store the result.\n *\n * @returns {Matrix4} The modified result parameter or a new Matrix4 instance if one was not provided. Result is undefined if position is undefined.\n */\nEntity.prototype.computeModelMatrix = function (time, result) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"time\", time);\n  //>>includeEnd('debug');\n  const position = Property.getValueOrUndefined(\n    this._position,\n    time,\n    positionScratch\n  );\n  if (!defined(position)) {\n    return undefined;\n  }\n\n  const orientation = Property.getValueOrUndefined(\n    this._orientation,\n    time,\n    orientationScratch\n  );\n  if (!defined(orientation)) {\n    result = Transforms.eastNorthUpToFixedFrame(position, undefined, result);\n  } else {\n    result = Matrix4.fromRotationTranslation(\n      Matrix3.fromQuaternion(orientation, matrix3Scratch),\n      position,\n      result\n    );\n  }\n  return result;\n};\n\n/**\n * @private\n */\nEntity.prototype.computeModelMatrixForHeightReference = function (\n  time,\n  heightReferenceProperty,\n  heightOffset,\n  ellipsoid,\n  result\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"time\", time);\n  //>>includeEnd('debug');\n  const heightReference = Property.getValueOrDefault(\n    heightReferenceProperty,\n    time,\n    HeightReference.NONE\n  );\n  let position = Property.getValueOrUndefined(\n    this._position,\n    time,\n    positionScratch\n  );\n  if (\n    heightReference === HeightReference.NONE ||\n    !defined(position) ||\n    Cartesian3.equalsEpsilon(position, Cartesian3.ZERO, CesiumMath.EPSILON8)\n  ) {\n    return this.computeModelMatrix(time, result);\n  }\n\n  const carto = ellipsoid.cartesianToCartographic(position, cartoScratch);\n  if (isHeightReferenceClamp(heightReference)) {\n    carto.height = heightOffset;\n  } else {\n    carto.height += heightOffset;\n  }\n  position = ellipsoid.cartographicToCartesian(carto, position);\n\n  const orientation = Property.getValueOrUndefined(\n    this._orientation,\n    time,\n    orientationScratch\n  );\n  if (!defined(orientation)) {\n    result = Transforms.eastNorthUpToFixedFrame(position, undefined, result);\n  } else {\n    result = Matrix4.fromRotationTranslation(\n      Matrix3.fromQuaternion(orientation, matrix3Scratch),\n      position,\n      result\n    );\n  }\n  return result;\n};\n\n/**\n * Checks if the given Scene supports materials besides Color on Entities draped on terrain or 3D Tiles.\n * If this feature is not supported, Entities with non-color materials but no `height` will\n * instead be rendered as if height is 0.\n *\n * @param {Scene} scene The current scene.\n * @returns {boolean} Whether or not the current scene supports materials for entities on terrain.\n */\nEntity.supportsMaterialsforEntitiesOnTerrain = function (scene) {\n  return GroundPrimitive.supportsMaterials(scene);\n};\n\n/**\n * Checks if the given Scene supports polylines clamped to terrain or 3D Tiles.\n * If this feature is not supported, Entities with PolylineGraphics will be rendered with vertices at\n * the provided heights and using the `arcType` parameter instead of clamped to the ground.\n *\n * @param {Scene} scene The current scene.\n * @returns {boolean} Whether or not the current scene supports polylines on terrain or 3D TIles.\n */\nEntity.supportsPolylinesOnTerrain = function (scene) {\n  return GroundPolylinePrimitive.isSupported(scene);\n};\nexport default Entity;\n","import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\n\n/**\n * A {@link Property} whose value is lazily evaluated by a callback function.\n *\n * @alias CallbackProperty\n * @constructor\n *\n * @param {CallbackProperty.Callback} callback The function to be called when the property is evaluated.\n * @param {boolean} isConstant <code>true</code> when the callback function returns the same value every time, <code>false</code> if the value will change.\n */\nfunction CallbackProperty(callback, isConstant) {\n  this._callback = undefined;\n  this._isConstant = undefined;\n  this._definitionChanged = new Event();\n  this.setCallback(callback, isConstant);\n}\n\nObject.defineProperties(CallbackProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.\n   * @memberof CallbackProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._isConstant;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setCallback is called.\n   * @memberof CallbackProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n});\n\n/**\n * Gets the value of the property.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied or is unsupported.\n */\nCallbackProperty.prototype.getValue = function (time, result) {\n  return this._callback(time, result);\n};\n\n/**\n * Sets the callback to be used.\n *\n * @param {CallbackProperty.Callback} callback The function to be called when the property is evaluated.\n * @param {boolean} isConstant <code>true</code> when the callback function returns the same value every time, <code>false</code> if the value will change.\n */\nCallbackProperty.prototype.setCallback = function (callback, isConstant) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(callback)) {\n    throw new DeveloperError(\"callback is required.\");\n  }\n  if (!defined(isConstant)) {\n    throw new DeveloperError(\"isConstant is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const changed =\n    this._callback !== callback || this._isConstant !== isConstant;\n\n  this._callback = callback;\n  this._isConstant = isConstant;\n\n  if (changed) {\n    this._definitionChanged.raiseEvent(this);\n  }\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCallbackProperty.prototype.equals = function (other) {\n  return (\n    this === other ||\n    (other instanceof CallbackProperty &&\n      this._callback === other._callback &&\n      this._isConstant === other._isConstant)\n  );\n};\n\n/**\n * A function that returns the value of the property.\n * @callback CallbackProperty.Callback\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {object} [result] The object to store the value into. If omitted, the function must create and return a new instance.\n * @returns {object} The modified result parameter, or a new instance if the result parameter was not supplied or is unsupported.\n */\nexport default CallbackProperty;\n","import AssociativeArray from \"../Core/AssociativeArray.js\";\nimport createGuid from \"../Core/createGuid.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport Iso8601 from \"../Core/Iso8601.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport TimeInterval from \"../Core/TimeInterval.js\";\nimport Entity from \"./Entity.js\";\n\nconst entityOptionsScratch = {\n  id: undefined,\n};\n\nfunction fireChangedEvent(collection) {\n  if (collection._firing) {\n    collection._refire = true;\n    return;\n  }\n\n  if (collection._suspendCount === 0) {\n    const added = collection._addedEntities;\n    const removed = collection._removedEntities;\n    const changed = collection._changedEntities;\n    if (changed.length !== 0 || added.length !== 0 || removed.length !== 0) {\n      collection._firing = true;\n      do {\n        collection._refire = false;\n        const addedArray = added.values.slice(0);\n        const removedArray = removed.values.slice(0);\n        const changedArray = changed.values.slice(0);\n\n        added.removeAll();\n        removed.removeAll();\n        changed.removeAll();\n        collection._collectionChanged.raiseEvent(\n          collection,\n          addedArray,\n          removedArray,\n          changedArray\n        );\n      } while (collection._refire);\n      collection._firing = false;\n    }\n  }\n}\n\n/**\n * An observable collection of {@link Entity} instances where each entity has a unique id.\n * @alias EntityCollection\n * @constructor\n *\n * @param {DataSource|CompositeEntityCollection} [owner] The data source (or composite entity collection) which created this collection.\n */\nfunction EntityCollection(owner) {\n  this._owner = owner;\n  this._entities = new AssociativeArray();\n  this._addedEntities = new AssociativeArray();\n  this._removedEntities = new AssociativeArray();\n  this._changedEntities = new AssociativeArray();\n  this._suspendCount = 0;\n  this._collectionChanged = new Event();\n  this._id = createGuid();\n  this._show = true;\n  this._firing = false;\n  this._refire = false;\n}\n\n/**\n * Prevents {@link EntityCollection#collectionChanged} events from being raised\n * until a corresponding call is made to {@link EntityCollection#resumeEvents}, at which\n * point a single event will be raised that covers all suspended operations.\n * This allows for many items to be added and removed efficiently.\n * This function can be safely called multiple times as long as there\n * are corresponding calls to {@link EntityCollection#resumeEvents}.\n */\nEntityCollection.prototype.suspendEvents = function () {\n  this._suspendCount++;\n};\n\n/**\n * Resumes raising {@link EntityCollection#collectionChanged} events immediately\n * when an item is added or removed.  Any modifications made while while events were suspended\n * will be triggered as a single event when this function is called.\n * This function is reference counted and can safely be called multiple times as long as there\n * are corresponding calls to {@link EntityCollection#resumeEvents}.\n *\n * @exception {DeveloperError} resumeEvents can not be called before suspendEvents.\n */\nEntityCollection.prototype.resumeEvents = function () {\n  //>>includeStart('debug', pragmas.debug);\n  if (this._suspendCount === 0) {\n    throw new DeveloperError(\n      \"resumeEvents can not be called before suspendEvents.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  this._suspendCount--;\n  fireChangedEvent(this);\n};\n\n/**\n * The signature of the event generated by {@link EntityCollection#collectionChanged}.\n * @callback EntityCollection.CollectionChangedEventCallback\n *\n * @param {EntityCollection} collection The collection that triggered the event.\n * @param {Entity[]} added The array of {@link Entity} instances that have been added to the collection.\n * @param {Entity[]} removed The array of {@link Entity} instances that have been removed from the collection.\n * @param {Entity[]} changed The array of {@link Entity} instances that have been modified.\n */\n\nObject.defineProperties(EntityCollection.prototype, {\n  /**\n   * Gets the event that is fired when entities are added or removed from the collection.\n   * The generated event is a {@link EntityCollection.CollectionChangedEventCallback}.\n   * @memberof EntityCollection.prototype\n   * @readonly\n   * @type {Event<EntityCollection.CollectionChangedEventCallback>}\n   */\n  collectionChanged: {\n    get: function () {\n      return this._collectionChanged;\n    },\n  },\n  /**\n   * Gets a globally unique identifier for this collection.\n   * @memberof EntityCollection.prototype\n   * @readonly\n   * @type {string}\n   */\n  id: {\n    get: function () {\n      return this._id;\n    },\n  },\n  /**\n   * Gets the array of Entity instances in the collection.\n   * This array should not be modified directly.\n   * @memberof EntityCollection.prototype\n   * @readonly\n   * @type {Entity[]}\n   */\n  values: {\n    get: function () {\n      return this._entities.values;\n    },\n  },\n  /**\n   * Gets whether or not this entity collection should be\n   * displayed.  When true, each entity is only displayed if\n   * its own show property is also true.\n   * @memberof EntityCollection.prototype\n   * @type {boolean}\n   */\n  show: {\n    get: function () {\n      return this._show;\n    },\n    set: function (value) {\n      //>>includeStart('debug', pragmas.debug);\n      if (!defined(value)) {\n        throw new DeveloperError(\"value is required.\");\n      }\n      //>>includeEnd('debug');\n\n      if (value === this._show) {\n        return;\n      }\n\n      //Since entity.isShowing includes the EntityCollection.show state\n      //in its calculation, we need to loop over the entities array\n      //twice, once to get the old showing value and a second time\n      //to raise the changed event.\n      this.suspendEvents();\n\n      let i;\n      const oldShows = [];\n      const entities = this._entities.values;\n      const entitiesLength = entities.length;\n\n      for (i = 0; i < entitiesLength; i++) {\n        oldShows.push(entities[i].isShowing);\n      }\n\n      this._show = value;\n\n      for (i = 0; i < entitiesLength; i++) {\n        const oldShow = oldShows[i];\n        const entity = entities[i];\n        if (oldShow !== entity.isShowing) {\n          entity.definitionChanged.raiseEvent(\n            entity,\n            \"isShowing\",\n            entity.isShowing,\n            oldShow\n          );\n        }\n      }\n\n      this.resumeEvents();\n    },\n  },\n  /**\n   * Gets the owner of this entity collection, ie. the data source or composite entity collection which created it.\n   * @memberof EntityCollection.prototype\n   * @readonly\n   * @type {DataSource|CompositeEntityCollection}\n   */\n  owner: {\n    get: function () {\n      return this._owner;\n    },\n  },\n});\n\n/**\n * Computes the maximum availability of the entities in the collection.\n * If the collection contains a mix of infinitely available data and non-infinite data,\n * it will return the interval pertaining to the non-infinite data only.  If all\n * data is infinite, an infinite interval will be returned.\n *\n * @returns {TimeInterval} The availability of entities in the collection.\n */\nEntityCollection.prototype.computeAvailability = function () {\n  let startTime = Iso8601.MAXIMUM_VALUE;\n  let stopTime = Iso8601.MINIMUM_VALUE;\n  const entities = this._entities.values;\n  for (let i = 0, len = entities.length; i < len; i++) {\n    const entity = entities[i];\n    const availability = entity.availability;\n    if (defined(availability)) {\n      const start = availability.start;\n      const stop = availability.stop;\n      if (\n        JulianDate.lessThan(start, startTime) &&\n        !start.equals(Iso8601.MINIMUM_VALUE)\n      ) {\n        startTime = start;\n      }\n      if (\n        JulianDate.greaterThan(stop, stopTime) &&\n        !stop.equals(Iso8601.MAXIMUM_VALUE)\n      ) {\n        stopTime = stop;\n      }\n    }\n  }\n\n  if (Iso8601.MAXIMUM_VALUE.equals(startTime)) {\n    startTime = Iso8601.MINIMUM_VALUE;\n  }\n  if (Iso8601.MINIMUM_VALUE.equals(stopTime)) {\n    stopTime = Iso8601.MAXIMUM_VALUE;\n  }\n  return new TimeInterval({\n    start: startTime,\n    stop: stopTime,\n  });\n};\n\n/**\n * Add an entity to the collection.\n *\n * @param {Entity | Entity.ConstructorOptions} entity The entity to be added.\n * @returns {Entity} The entity that was added.\n * @exception {DeveloperError} An entity with <entity.id> already exists in this collection.\n */\nEntityCollection.prototype.add = function (entity) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(entity)) {\n    throw new DeveloperError(\"entity is required.\");\n  }\n  //>>includeEnd('debug');\n\n  if (!(entity instanceof Entity)) {\n    entity = new Entity(entity);\n  }\n\n  const id = entity.id;\n  const entities = this._entities;\n  if (entities.contains(id)) {\n    throw new DeveloperError(\n      `An entity with id ${id} already exists in this collection.`\n    );\n  }\n\n  entity.entityCollection = this;\n  entities.set(id, entity);\n\n  if (!this._removedEntities.remove(id)) {\n    this._addedEntities.set(id, entity);\n  }\n  entity.definitionChanged.addEventListener(\n    EntityCollection.prototype._onEntityDefinitionChanged,\n    this\n  );\n\n  fireChangedEvent(this);\n  return entity;\n};\n\n/**\n * Removes an entity from the collection.\n *\n * @param {Entity} entity The entity to be removed.\n * @returns {boolean} true if the item was removed, false if it did not exist in the collection.\n */\nEntityCollection.prototype.remove = function (entity) {\n  if (!defined(entity)) {\n    return false;\n  }\n  return this.removeById(entity.id);\n};\n\n/**\n * Returns true if the provided entity is in this collection, false otherwise.\n *\n * @param {Entity} entity The entity.\n * @returns {boolean} true if the provided entity is in this collection, false otherwise.\n */\nEntityCollection.prototype.contains = function (entity) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(entity)) {\n    throw new DeveloperError(\"entity is required\");\n  }\n  //>>includeEnd('debug');\n  return this._entities.get(entity.id) === entity;\n};\n\n/**\n * Removes an entity with the provided id from the collection.\n *\n * @param {string} id The id of the entity to remove.\n * @returns {boolean} true if the item was removed, false if no item with the provided id existed in the collection.\n */\nEntityCollection.prototype.removeById = function (id) {\n  if (!defined(id)) {\n    return false;\n  }\n\n  const entities = this._entities;\n  const entity = entities.get(id);\n  if (!this._entities.remove(id)) {\n    return false;\n  }\n\n  if (!this._addedEntities.remove(id)) {\n    this._removedEntities.set(id, entity);\n    this._changedEntities.remove(id);\n  }\n  this._entities.remove(id);\n  entity.definitionChanged.removeEventListener(\n    EntityCollection.prototype._onEntityDefinitionChanged,\n    this\n  );\n  fireChangedEvent(this);\n\n  return true;\n};\n\n/**\n * Removes all Entities from the collection.\n */\nEntityCollection.prototype.removeAll = function () {\n  //The event should only contain items added before events were suspended\n  //and the contents of the collection.\n  const entities = this._entities;\n  const entitiesLength = entities.length;\n  const array = entities.values;\n\n  const addedEntities = this._addedEntities;\n  const removed = this._removedEntities;\n\n  for (let i = 0; i < entitiesLength; i++) {\n    const existingItem = array[i];\n    const existingItemId = existingItem.id;\n    const addedItem = addedEntities.get(existingItemId);\n    if (!defined(addedItem)) {\n      existingItem.definitionChanged.removeEventListener(\n        EntityCollection.prototype._onEntityDefinitionChanged,\n        this\n      );\n      removed.set(existingItemId, existingItem);\n    }\n  }\n\n  entities.removeAll();\n  addedEntities.removeAll();\n  this._changedEntities.removeAll();\n  fireChangedEvent(this);\n};\n\n/**\n * Gets an entity with the specified id.\n *\n * @param {string} id The id of the entity to retrieve.\n * @returns {Entity|undefined} The entity with the provided id or undefined if the id did not exist in the collection.\n */\nEntityCollection.prototype.getById = function (id) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(id)) {\n    throw new DeveloperError(\"id is required.\");\n  }\n  //>>includeEnd('debug');\n\n  return this._entities.get(id);\n};\n\n/**\n * Gets an entity with the specified id or creates it and adds it to the collection if it does not exist.\n *\n * @param {string} id The id of the entity to retrieve or create.\n * @returns {Entity} The new or existing object.\n */\nEntityCollection.prototype.getOrCreateEntity = function (id) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(id)) {\n    throw new DeveloperError(\"id is required.\");\n  }\n  //>>includeEnd('debug');\n\n  let entity = this._entities.get(id);\n  if (!defined(entity)) {\n    entityOptionsScratch.id = id;\n    entity = new Entity(entityOptionsScratch);\n    this.add(entity);\n  }\n  return entity;\n};\n\nEntityCollection.prototype._onEntityDefinitionChanged = function (entity) {\n  const id = entity.id;\n  if (!this._addedEntities.contains(id)) {\n    this._changedEntities.set(id, entity);\n  }\n  fireChangedEvent(this);\n};\nexport default EntityCollection;\n","import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * A convenience object that simplifies the common pattern of attaching event listeners\n * to several events, then removing all those listeners at once later, for example, in\n * a destroy method.\n *\n * @alias EventHelper\n * @constructor\n *\n *\n * @example\n * const helper = new Cesium.EventHelper();\n *\n * helper.add(someObject.event, listener1, this);\n * helper.add(otherObject.event, listener2, this);\n *\n * // later...\n * helper.removeAll();\n *\n * @see Event\n */\nfunction EventHelper() {\n  this._removalFunctions = [];\n}\n\n/**\n * Adds a listener to an event, and records the registration to be cleaned up later.\n *\n * @param {Event} event The event to attach to.\n * @param {Function} listener The function to be executed when the event is raised.\n * @param {object} [scope] An optional object scope to serve as the <code>this</code>\n *        pointer in which the listener function will execute.\n * @returns {EventHelper.RemoveCallback} A function that will remove this event listener when invoked.\n *\n * @see Event#addEventListener\n */\nEventHelper.prototype.add = function (event, listener, scope) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(event)) {\n    throw new DeveloperError(\"event is required\");\n  }\n  //>>includeEnd('debug');\n\n  const removalFunction = event.addEventListener(listener, scope);\n  this._removalFunctions.push(removalFunction);\n\n  const that = this;\n  return function () {\n    removalFunction();\n    const removalFunctions = that._removalFunctions;\n    removalFunctions.splice(removalFunctions.indexOf(removalFunction), 1);\n  };\n};\n\n/**\n * Unregisters all previously added listeners.\n *\n * @see Event#removeEventListener\n */\nEventHelper.prototype.removeAll = function () {\n  const removalFunctions = this._removalFunctions;\n  for (let i = 0, len = removalFunctions.length; i < len; ++i) {\n    removalFunctions[i]();\n  }\n  removalFunctions.length = 0;\n};\n\n/**\n * A function that removes a listener.\n * @callback EventHelper.RemoveCallback\n */\nexport default EventHelper;\n","import binarySearch from \"./binarySearch.js\";\nimport defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nimport Event from \"./Event.js\";\nimport GregorianDate from \"./GregorianDate.js\";\nimport isLeapYear from \"./isLeapYear.js\";\nimport Iso8601 from \"./Iso8601.js\";\nimport JulianDate from \"./JulianDate.js\";\nimport TimeInterval from \"./TimeInterval.js\";\n\nfunction compareIntervalStartTimes(left, right) {\n  return JulianDate.compare(left.start, right.start);\n}\n\n/**\n * A non-overlapping collection of {@link TimeInterval} instances sorted by start time.\n * @alias TimeIntervalCollection\n * @constructor\n *\n * @param {TimeInterval[]} [intervals] An array of intervals to add to the collection.\n */\nfunction TimeIntervalCollection(intervals) {\n  this._intervals = [];\n  this._changedEvent = new Event();\n\n  if (defined(intervals)) {\n    const length = intervals.length;\n    for (let i = 0; i < length; i++) {\n      this.addInterval(intervals[i]);\n    }\n  }\n}\n\nObject.defineProperties(TimeIntervalCollection.prototype, {\n  /**\n   * Gets an event that is raised whenever the collection of intervals change.\n   * @memberof TimeIntervalCollection.prototype\n   * @type {Event}\n   * @readonly\n   */\n  changedEvent: {\n    get: function () {\n      return this._changedEvent;\n    },\n  },\n\n  /**\n   * Gets the start time of the collection.\n   * @memberof TimeIntervalCollection.prototype\n   * @type {JulianDate}\n   * @readonly\n   */\n  start: {\n    get: function () {\n      const intervals = this._intervals;\n      return intervals.length === 0 ? undefined : intervals[0].start;\n    },\n  },\n\n  /**\n   * Gets whether or not the start time is included in the collection.\n   * @memberof TimeIntervalCollection.prototype\n   * @type {boolean}\n   * @readonly\n   */\n  isStartIncluded: {\n    get: function () {\n      const intervals = this._intervals;\n      return intervals.length === 0 ? false : intervals[0].isStartIncluded;\n    },\n  },\n\n  /**\n   * Gets the stop time of the collection.\n   * @memberof TimeIntervalCollection.prototype\n   * @type {JulianDate}\n   * @readonly\n   */\n  stop: {\n    get: function () {\n      const intervals = this._intervals;\n      const length = intervals.length;\n      return length === 0 ? undefined : intervals[length - 1].stop;\n    },\n  },\n\n  /**\n   * Gets whether or not the stop time is included in the collection.\n   * @memberof TimeIntervalCollection.prototype\n   * @type {boolean}\n   * @readonly\n   */\n  isStopIncluded: {\n    get: function () {\n      const intervals = this._intervals;\n      const length = intervals.length;\n      return length === 0 ? false : intervals[length - 1].isStopIncluded;\n    },\n  },\n\n  /**\n   * Gets the number of intervals in the collection.\n   * @memberof TimeIntervalCollection.prototype\n   * @type {number}\n   * @readonly\n   */\n  length: {\n    get: function () {\n      return this._intervals.length;\n    },\n  },\n\n  /**\n   * Gets whether or not the collection is empty.\n   * @memberof TimeIntervalCollection.prototype\n   * @type {boolean}\n   * @readonly\n   */\n  isEmpty: {\n    get: function () {\n      return this._intervals.length === 0;\n    },\n  },\n});\n\n/**\n * Compares this instance against the provided instance componentwise and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {TimeIntervalCollection} [right] The right hand side collection.\n * @param {TimeInterval.DataComparer} [dataComparer] A function which compares the data of the two intervals.  If omitted, reference equality is used.\n * @returns {boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\n */\nTimeIntervalCollection.prototype.equals = function (right, dataComparer) {\n  if (this === right) {\n    return true;\n  }\n  if (!(right instanceof TimeIntervalCollection)) {\n    return false;\n  }\n  const intervals = this._intervals;\n  const rightIntervals = right._intervals;\n  const length = intervals.length;\n  if (length !== rightIntervals.length) {\n    return false;\n  }\n  for (let i = 0; i < length; i++) {\n    if (!TimeInterval.equals(intervals[i], rightIntervals[i], dataComparer)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Gets the interval at the specified index.\n *\n * @param {number} index The index of the interval to retrieve.\n * @returns {TimeInterval|undefined} The interval at the specified index, or <code>undefined</code> if no interval exists as that index.\n */\nTimeIntervalCollection.prototype.get = function (index) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(index)) {\n    throw new DeveloperError(\"index is required.\");\n  }\n  //>>includeEnd('debug');\n\n  return this._intervals[index];\n};\n\n/**\n * Removes all intervals from the collection.\n */\nTimeIntervalCollection.prototype.removeAll = function () {\n  if (this._intervals.length > 0) {\n    this._intervals.length = 0;\n    this._changedEvent.raiseEvent(this);\n  }\n};\n\n/**\n * Finds and returns the interval that contains the specified date.\n *\n * @param {JulianDate} date The date to search for.\n * @returns {TimeInterval|undefined} The interval containing the specified date, <code>undefined</code> if no such interval exists.\n */\nTimeIntervalCollection.prototype.findIntervalContainingDate = function (date) {\n  const index = this.indexOf(date);\n  return index >= 0 ? this._intervals[index] : undefined;\n};\n\n/**\n * Finds and returns the data for the interval that contains the specified date.\n *\n * @param {JulianDate} date The date to search for.\n * @returns {object} The data for the interval containing the specified date, or <code>undefined</code> if no such interval exists.\n */\nTimeIntervalCollection.prototype.findDataForIntervalContainingDate = function (\n  date\n) {\n  const index = this.indexOf(date);\n  return index >= 0 ? this._intervals[index].data : undefined;\n};\n\n/**\n * Checks if the specified date is inside this collection.\n *\n * @param {JulianDate} julianDate The date to check.\n * @returns {boolean} <code>true</code> if the collection contains the specified date, <code>false</code> otherwise.\n */\nTimeIntervalCollection.prototype.contains = function (julianDate) {\n  return this.indexOf(julianDate) >= 0;\n};\n\nconst indexOfScratch = new TimeInterval();\n\n/**\n * Finds and returns the index of the interval in the collection that contains the specified date.\n *\n * @param {JulianDate} date The date to search for.\n * @returns {number} The index of the interval that contains the specified date, if no such interval exists,\n * it returns a negative number which is the bitwise complement of the index of the next interval that\n * starts after the date, or if no interval starts after the specified date, the bitwise complement of\n * the length of the collection.\n */\nTimeIntervalCollection.prototype.indexOf = function (date) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(date)) {\n    throw new DeveloperError(\"date is required\");\n  }\n  //>>includeEnd('debug');\n\n  const intervals = this._intervals;\n  indexOfScratch.start = date;\n  indexOfScratch.stop = date;\n  let index = binarySearch(\n    intervals,\n    indexOfScratch,\n    compareIntervalStartTimes\n  );\n  if (index >= 0) {\n    if (intervals[index].isStartIncluded) {\n      return index;\n    }\n\n    if (\n      index > 0 &&\n      intervals[index - 1].stop.equals(date) &&\n      intervals[index - 1].isStopIncluded\n    ) {\n      return index - 1;\n    }\n    return ~index;\n  }\n\n  index = ~index;\n  if (\n    index > 0 &&\n    index - 1 < intervals.length &&\n    TimeInterval.contains(intervals[index - 1], date)\n  ) {\n    return index - 1;\n  }\n  return ~index;\n};\n\n/**\n * Returns the first interval in the collection that matches the specified parameters.\n * All parameters are optional and <code>undefined</code> parameters are treated as a don't care condition.\n *\n * @param {object} [options] Object with the following properties:\n * @param {JulianDate} [options.start] The start time of the interval.\n * @param {JulianDate} [options.stop] The stop time of the interval.\n * @param {boolean} [options.isStartIncluded] <code>true</code> if <code>options.start</code> is included in the interval, <code>false</code> otherwise.\n * @param {boolean} [options.isStopIncluded] <code>true</code> if <code>options.stop</code> is included in the interval, <code>false</code> otherwise.\n * @returns {TimeInterval|undefined} The first interval in the collection that matches the specified parameters.\n */\nTimeIntervalCollection.prototype.findInterval = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const start = options.start;\n  const stop = options.stop;\n  const isStartIncluded = options.isStartIncluded;\n  const isStopIncluded = options.isStopIncluded;\n\n  const intervals = this._intervals;\n  for (let i = 0, len = intervals.length; i < len; i++) {\n    const interval = intervals[i];\n    if (\n      (!defined(start) || interval.start.equals(start)) &&\n      (!defined(stop) || interval.stop.equals(stop)) &&\n      (!defined(isStartIncluded) ||\n        interval.isStartIncluded === isStartIncluded) &&\n      (!defined(isStopIncluded) || interval.isStopIncluded === isStopIncluded)\n    ) {\n      return intervals[i];\n    }\n  }\n  return undefined;\n};\n\n/**\n * Adds an interval to the collection, merging intervals that contain the same data and\n * splitting intervals of different data as needed in order to maintain a non-overlapping collection.\n * The data in the new interval takes precedence over any existing intervals in the collection.\n *\n * @param {TimeInterval} interval The interval to add.\n * @param {TimeInterval.DataComparer} [dataComparer] A function which compares the data of the two intervals.  If omitted, reference equality is used.\n */\nTimeIntervalCollection.prototype.addInterval = function (\n  interval,\n  dataComparer\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(interval)) {\n    throw new DeveloperError(\"interval is required\");\n  }\n  //>>includeEnd('debug');\n\n  if (interval.isEmpty) {\n    return;\n  }\n\n  const intervals = this._intervals;\n\n  // Handle the common case quickly: we're adding a new interval which is after all existing intervals.\n  if (\n    intervals.length === 0 ||\n    JulianDate.greaterThan(interval.start, intervals[intervals.length - 1].stop)\n  ) {\n    intervals.push(interval);\n    this._changedEvent.raiseEvent(this);\n    return;\n  }\n\n  // Keep the list sorted by the start date\n  let index = binarySearch(intervals, interval, compareIntervalStartTimes);\n  if (index < 0) {\n    index = ~index;\n  } else {\n    // interval's start date exactly equals the start date of at least one interval in the collection.\n    // It could actually equal the start date of two intervals if one of them does not actually\n    // include the date.  In that case, the binary search could have found either.  We need to\n    // look at the surrounding intervals and their IsStartIncluded properties in order to make sure\n    // we're working with the correct interval.\n\n    // eslint-disable-next-line no-lonely-if\n    if (\n      index > 0 &&\n      interval.isStartIncluded &&\n      intervals[index - 1].isStartIncluded &&\n      intervals[index - 1].start.equals(interval.start)\n    ) {\n      --index;\n    } else if (\n      index < intervals.length &&\n      !interval.isStartIncluded &&\n      intervals[index].isStartIncluded &&\n      intervals[index].start.equals(interval.start)\n    ) {\n      ++index;\n    }\n  }\n\n  let comparison;\n  if (index > 0) {\n    // Not the first thing in the list, so see if the interval before this one\n    // overlaps this one.\n\n    comparison = JulianDate.compare(intervals[index - 1].stop, interval.start);\n    if (\n      comparison > 0 ||\n      (comparison === 0 &&\n        (intervals[index - 1].isStopIncluded || interval.isStartIncluded))\n    ) {\n      // There is an overlap\n      if (\n        defined(dataComparer)\n          ? dataComparer(intervals[index - 1].data, interval.data)\n          : intervals[index - 1].data === interval.data\n      ) {\n        // Overlapping intervals have the same data, so combine them\n        if (JulianDate.greaterThan(interval.stop, intervals[index - 1].stop)) {\n          interval = new TimeInterval({\n            start: intervals[index - 1].start,\n            stop: interval.stop,\n            isStartIncluded: intervals[index - 1].isStartIncluded,\n            isStopIncluded: interval.isStopIncluded,\n            data: interval.data,\n          });\n        } else {\n          interval = new TimeInterval({\n            start: intervals[index - 1].start,\n            stop: intervals[index - 1].stop,\n            isStartIncluded: intervals[index - 1].isStartIncluded,\n            isStopIncluded:\n              intervals[index - 1].isStopIncluded ||\n              (interval.stop.equals(intervals[index - 1].stop) &&\n                interval.isStopIncluded),\n            data: interval.data,\n          });\n        }\n        intervals.splice(index - 1, 1);\n        --index;\n      } else {\n        // Overlapping intervals have different data.  The new interval\n        // being added 'wins' so truncate the previous interval.\n        // If the existing interval extends past the end of the new one,\n        // split the existing interval into two intervals.\n        comparison = JulianDate.compare(\n          intervals[index - 1].stop,\n          interval.stop\n        );\n        if (\n          comparison > 0 ||\n          (comparison === 0 &&\n            intervals[index - 1].isStopIncluded &&\n            !interval.isStopIncluded)\n        ) {\n          intervals.splice(\n            index,\n            0,\n            new TimeInterval({\n              start: interval.stop,\n              stop: intervals[index - 1].stop,\n              isStartIncluded: !interval.isStopIncluded,\n              isStopIncluded: intervals[index - 1].isStopIncluded,\n              data: intervals[index - 1].data,\n            })\n          );\n        }\n        intervals[index - 1] = new TimeInterval({\n          start: intervals[index - 1].start,\n          stop: interval.start,\n          isStartIncluded: intervals[index - 1].isStartIncluded,\n          isStopIncluded: !interval.isStartIncluded,\n          data: intervals[index - 1].data,\n        });\n      }\n    }\n  }\n\n  while (index < intervals.length) {\n    // Not the last thing in the list, so see if the intervals after this one overlap this one.\n    comparison = JulianDate.compare(interval.stop, intervals[index].start);\n    if (\n      comparison > 0 ||\n      (comparison === 0 &&\n        (interval.isStopIncluded || intervals[index].isStartIncluded))\n    ) {\n      // There is an overlap\n      if (\n        defined(dataComparer)\n          ? dataComparer(intervals[index].data, interval.data)\n          : intervals[index].data === interval.data\n      ) {\n        // Overlapping intervals have the same data, so combine them\n        interval = new TimeInterval({\n          start: interval.start,\n          stop: JulianDate.greaterThan(intervals[index].stop, interval.stop)\n            ? intervals[index].stop\n            : interval.stop,\n          isStartIncluded: interval.isStartIncluded,\n          isStopIncluded: JulianDate.greaterThan(\n            intervals[index].stop,\n            interval.stop\n          )\n            ? intervals[index].isStopIncluded\n            : interval.isStopIncluded,\n          data: interval.data,\n        });\n        intervals.splice(index, 1);\n      } else {\n        // Overlapping intervals have different data.  The new interval\n        // being added 'wins' so truncate the next interval.\n        intervals[index] = new TimeInterval({\n          start: interval.stop,\n          stop: intervals[index].stop,\n          isStartIncluded: !interval.isStopIncluded,\n          isStopIncluded: intervals[index].isStopIncluded,\n          data: intervals[index].data,\n        });\n\n        if (intervals[index].isEmpty) {\n          intervals.splice(index, 1);\n        } else {\n          // Found a partial span, so it is not possible for the next\n          // interval to be spanned at all.  Stop looking.\n          break;\n        }\n      }\n    } else {\n      // Found the last one we're spanning, so stop looking.\n      break;\n    }\n  }\n\n  // Add the new interval\n  intervals.splice(index, 0, interval);\n  this._changedEvent.raiseEvent(this);\n};\n\n/**\n * Removes the specified interval from this interval collection, creating a hole over the specified interval.\n * The data property of the input interval is ignored.\n *\n * @param {TimeInterval} interval The interval to remove.\n * @returns {boolean} <code>true</code> if the interval was removed, <code>false</code> if no part of the interval was in the collection.\n */\nTimeIntervalCollection.prototype.removeInterval = function (interval) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(interval)) {\n    throw new DeveloperError(\"interval is required\");\n  }\n  //>>includeEnd('debug');\n\n  if (interval.isEmpty) {\n    return false;\n  }\n\n  const intervals = this._intervals;\n\n  let index = binarySearch(intervals, interval, compareIntervalStartTimes);\n  if (index < 0) {\n    index = ~index;\n  }\n\n  let result = false;\n\n  // Check for truncation of the end of the previous interval.\n  if (\n    index > 0 &&\n    (JulianDate.greaterThan(intervals[index - 1].stop, interval.start) ||\n      (intervals[index - 1].stop.equals(interval.start) &&\n        intervals[index - 1].isStopIncluded &&\n        interval.isStartIncluded))\n  ) {\n    result = true;\n\n    if (\n      JulianDate.greaterThan(intervals[index - 1].stop, interval.stop) ||\n      (intervals[index - 1].isStopIncluded &&\n        !interval.isStopIncluded &&\n        intervals[index - 1].stop.equals(interval.stop))\n    ) {\n      // Break the existing interval into two pieces\n      intervals.splice(\n        index,\n        0,\n        new TimeInterval({\n          start: interval.stop,\n          stop: intervals[index - 1].stop,\n          isStartIncluded: !interval.isStopIncluded,\n          isStopIncluded: intervals[index - 1].isStopIncluded,\n          data: intervals[index - 1].data,\n        })\n      );\n    }\n    intervals[index - 1] = new TimeInterval({\n      start: intervals[index - 1].start,\n      stop: interval.start,\n      isStartIncluded: intervals[index - 1].isStartIncluded,\n      isStopIncluded: !interval.isStartIncluded,\n      data: intervals[index - 1].data,\n    });\n  }\n\n  // Check if the Start of the current interval should remain because interval.start is the same but\n  // it is not included.\n  if (\n    index < intervals.length &&\n    !interval.isStartIncluded &&\n    intervals[index].isStartIncluded &&\n    interval.start.equals(intervals[index].start)\n  ) {\n    result = true;\n\n    intervals.splice(\n      index,\n      0,\n      new TimeInterval({\n        start: intervals[index].start,\n        stop: intervals[index].start,\n        isStartIncluded: true,\n        isStopIncluded: true,\n        data: intervals[index].data,\n      })\n    );\n    ++index;\n  }\n\n  // Remove any intervals that are completely overlapped by the input interval.\n  while (\n    index < intervals.length &&\n    JulianDate.greaterThan(interval.stop, intervals[index].stop)\n  ) {\n    result = true;\n    intervals.splice(index, 1);\n  }\n\n  // Check for the case where the input interval ends on the same date\n  // as an existing interval.\n  if (index < intervals.length && interval.stop.equals(intervals[index].stop)) {\n    result = true;\n\n    if (!interval.isStopIncluded && intervals[index].isStopIncluded) {\n      // Last point of interval should remain because the stop date is included in\n      // the existing interval but is not included in the input interval.\n      if (\n        index + 1 < intervals.length &&\n        intervals[index + 1].start.equals(interval.stop) &&\n        intervals[index].data === intervals[index + 1].data\n      ) {\n        // Combine single point with the next interval\n        intervals.splice(index, 1);\n        intervals[index] = new TimeInterval({\n          start: intervals[index].start,\n          stop: intervals[index].stop,\n          isStartIncluded: true,\n          isStopIncluded: intervals[index].isStopIncluded,\n          data: intervals[index].data,\n        });\n      } else {\n        intervals[index] = new TimeInterval({\n          start: interval.stop,\n          stop: interval.stop,\n          isStartIncluded: true,\n          isStopIncluded: true,\n          data: intervals[index].data,\n        });\n      }\n    } else {\n      // Interval is completely overlapped\n      intervals.splice(index, 1);\n    }\n  }\n\n  // Truncate any partially-overlapped intervals.\n  if (\n    index < intervals.length &&\n    (JulianDate.greaterThan(interval.stop, intervals[index].start) ||\n      (interval.stop.equals(intervals[index].start) &&\n        interval.isStopIncluded &&\n        intervals[index].isStartIncluded))\n  ) {\n    result = true;\n    intervals[index] = new TimeInterval({\n      start: interval.stop,\n      stop: intervals[index].stop,\n      isStartIncluded: !interval.isStopIncluded,\n      isStopIncluded: intervals[index].isStopIncluded,\n      data: intervals[index].data,\n    });\n  }\n\n  if (result) {\n    this._changedEvent.raiseEvent(this);\n  }\n\n  return result;\n};\n\n/**\n * Creates a new instance that is the intersection of this collection and the provided collection.\n *\n * @param {TimeIntervalCollection} other The collection to intersect with.\n * @param {TimeInterval.DataComparer} [dataComparer] A function which compares the data of the two intervals.  If omitted, reference equality is used.\n * @param {TimeInterval.MergeCallback} [mergeCallback] A function which merges the data of the two intervals. If omitted, the data from the left interval will be used.\n * @returns {TimeIntervalCollection} A new TimeIntervalCollection which is the intersection of this collection and the provided collection.\n */\nTimeIntervalCollection.prototype.intersect = function (\n  other,\n  dataComparer,\n  mergeCallback\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(other)) {\n    throw new DeveloperError(\"other is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const result = new TimeIntervalCollection();\n  let left = 0;\n  let right = 0;\n  const intervals = this._intervals;\n  const otherIntervals = other._intervals;\n\n  while (left < intervals.length && right < otherIntervals.length) {\n    const leftInterval = intervals[left];\n    const rightInterval = otherIntervals[right];\n    if (JulianDate.lessThan(leftInterval.stop, rightInterval.start)) {\n      ++left;\n    } else if (JulianDate.lessThan(rightInterval.stop, leftInterval.start)) {\n      ++right;\n    } else {\n      // The following will return an intersection whose data is 'merged' if the callback is defined\n      if (\n        defined(mergeCallback) ||\n        (defined(dataComparer) &&\n          dataComparer(leftInterval.data, rightInterval.data)) ||\n        (!defined(dataComparer) && rightInterval.data === leftInterval.data)\n      ) {\n        const intersection = TimeInterval.intersect(\n          leftInterval,\n          rightInterval,\n          new TimeInterval(),\n          mergeCallback\n        );\n        if (!intersection.isEmpty) {\n          // Since we start with an empty collection for 'result', and there are no overlapping intervals in 'this' (as a rule),\n          // the 'intersection' will never overlap with a previous interval in 'result'.  So, no need to do any additional 'merging'.\n          result.addInterval(intersection, dataComparer);\n        }\n      }\n\n      if (\n        JulianDate.lessThan(leftInterval.stop, rightInterval.stop) ||\n        (leftInterval.stop.equals(rightInterval.stop) &&\n          !leftInterval.isStopIncluded &&\n          rightInterval.isStopIncluded)\n      ) {\n        ++left;\n      } else {\n        ++right;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Creates a new instance from a JulianDate array.\n *\n * @param {object} options Object with the following properties:\n * @param {JulianDate[]} options.julianDates An array of ISO 8601 dates.\n * @param {boolean} [options.isStartIncluded=true] <code>true</code> if start time is included in the interval, <code>false</code> otherwise.\n * @param {boolean} [options.isStopIncluded=true] <code>true</code> if stop time is included in the interval, <code>false</code> otherwise.\n * @param {boolean} [options.leadingInterval=false] <code>true</code> if you want to add a interval from Iso8601.MINIMUM_VALUE to start time,  <code>false</code> otherwise.\n * @param {boolean} [options.trailingInterval=false] <code>true</code> if you want to add a interval from stop time to Iso8601.MAXIMUM_VALUE,  <code>false</code> otherwise.\n * @param {Function} [options.dataCallback] A function that will be return the data that is called with each interval before it is added to the collection. If unspecified, the data will be the index in the collection.\n * @param {TimeIntervalCollection} [result] An existing instance to use for the result.\n * @returns {TimeIntervalCollection} The modified result parameter or a new instance if none was provided.\n */\nTimeIntervalCollection.fromJulianDateArray = function (options, result) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options)) {\n    throw new DeveloperError(\"options is required.\");\n  }\n  if (!defined(options.julianDates)) {\n    throw new DeveloperError(\"options.iso8601Array is required.\");\n  }\n  //>>includeEnd('debug');\n\n  if (!defined(result)) {\n    result = new TimeIntervalCollection();\n  }\n\n  const julianDates = options.julianDates;\n  const length = julianDates.length;\n  const dataCallback = options.dataCallback;\n\n  const isStartIncluded = defaultValue(options.isStartIncluded, true);\n  const isStopIncluded = defaultValue(options.isStopIncluded, true);\n  const leadingInterval = defaultValue(options.leadingInterval, false);\n  const trailingInterval = defaultValue(options.trailingInterval, false);\n  let interval;\n\n  // Add a default interval, which will only end up being used up to first interval\n  let startIndex = 0;\n  if (leadingInterval) {\n    ++startIndex;\n    interval = new TimeInterval({\n      start: Iso8601.MINIMUM_VALUE,\n      stop: julianDates[0],\n      isStartIncluded: true,\n      isStopIncluded: !isStartIncluded,\n    });\n    interval.data = defined(dataCallback)\n      ? dataCallback(interval, result.length)\n      : result.length;\n    result.addInterval(interval);\n  }\n\n  for (let i = 0; i < length - 1; ++i) {\n    let startDate = julianDates[i];\n    const endDate = julianDates[i + 1];\n\n    interval = new TimeInterval({\n      start: startDate,\n      stop: endDate,\n      isStartIncluded: result.length === startIndex ? isStartIncluded : true,\n      isStopIncluded: i === length - 2 ? isStopIncluded : false,\n    });\n    interval.data = defined(dataCallback)\n      ? dataCallback(interval, result.length)\n      : result.length;\n    result.addInterval(interval);\n\n    startDate = endDate;\n  }\n\n  if (trailingInterval) {\n    interval = new TimeInterval({\n      start: julianDates[length - 1],\n      stop: Iso8601.MAXIMUM_VALUE,\n      isStartIncluded: !isStopIncluded,\n      isStopIncluded: true,\n    });\n    interval.data = defined(dataCallback)\n      ? dataCallback(interval, result.length)\n      : result.length;\n    result.addInterval(interval);\n  }\n\n  return result;\n};\n\nconst scratchGregorianDate = new GregorianDate();\nconst monthLengths = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n/**\n * Adds duration represented as a GregorianDate to a JulianDate\n *\n * @param {JulianDate} julianDate The date.\n * @param {GregorianDate} duration An duration represented as a GregorianDate.\n * @param {JulianDate} result An existing instance to use for the result.\n * @returns {JulianDate} The modified result parameter.\n *\n * @private\n */\nfunction addToDate(julianDate, duration, result) {\n  if (!defined(result)) {\n    result = new JulianDate();\n  }\n  JulianDate.toGregorianDate(julianDate, scratchGregorianDate);\n\n  let millisecond = scratchGregorianDate.millisecond + duration.millisecond;\n  let second = scratchGregorianDate.second + duration.second;\n  let minute = scratchGregorianDate.minute + duration.minute;\n  let hour = scratchGregorianDate.hour + duration.hour;\n  let day = scratchGregorianDate.day + duration.day;\n  let month = scratchGregorianDate.month + duration.month;\n  let year = scratchGregorianDate.year + duration.year;\n\n  if (millisecond >= 1000) {\n    second += Math.floor(millisecond / 1000);\n    millisecond = millisecond % 1000;\n  }\n\n  if (second >= 60) {\n    minute += Math.floor(second / 60);\n    second = second % 60;\n  }\n\n  if (minute >= 60) {\n    hour += Math.floor(minute / 60);\n    minute = minute % 60;\n  }\n\n  if (hour >= 24) {\n    day += Math.floor(hour / 24);\n    hour = hour % 24;\n  }\n\n  // If days is greater than the month's length we need to remove those number of days,\n  //  readjust month and year and repeat until days is less than the month's length.\n  monthLengths[2] = isLeapYear(year) ? 29 : 28;\n  while (day > monthLengths[month] || month >= 13) {\n    if (day > monthLengths[month]) {\n      day -= monthLengths[month];\n      ++month;\n    }\n\n    if (month >= 13) {\n      --month;\n      year += Math.floor(month / 12);\n      month = month % 12;\n      ++month;\n    }\n\n    monthLengths[2] = isLeapYear(year) ? 29 : 28;\n  }\n\n  scratchGregorianDate.millisecond = millisecond;\n  scratchGregorianDate.second = second;\n  scratchGregorianDate.minute = minute;\n  scratchGregorianDate.hour = hour;\n  scratchGregorianDate.day = day;\n  scratchGregorianDate.month = month;\n  scratchGregorianDate.year = year;\n\n  return JulianDate.fromGregorianDate(scratchGregorianDate, result);\n}\n\nconst scratchJulianDate = new JulianDate();\nconst durationRegex = /P(?:([\\d.,]+)Y)?(?:([\\d.,]+)M)?(?:([\\d.,]+)W)?(?:([\\d.,]+)D)?(?:T(?:([\\d.,]+)H)?(?:([\\d.,]+)M)?(?:([\\d.,]+)S)?)?/;\n\n/**\n * Parses ISO8601 duration string\n *\n * @param {string} iso8601 An ISO 8601 duration.\n * @param {GregorianDate} result An existing instance to use for the result.\n * @returns {boolean} True is parsing succeeded, false otherwise\n *\n * @private\n */\nfunction parseDuration(iso8601, result) {\n  if (!defined(iso8601) || iso8601.length === 0) {\n    return false;\n  }\n\n  // Reset object\n  result.year = 0;\n  result.month = 0;\n  result.day = 0;\n  result.hour = 0;\n  result.minute = 0;\n  result.second = 0;\n  result.millisecond = 0;\n\n  if (iso8601[0] === \"P\") {\n    const matches = iso8601.match(durationRegex);\n    if (!defined(matches)) {\n      return false;\n    }\n    if (defined(matches[1])) {\n      // Years\n      result.year = Number(matches[1].replace(\",\", \".\"));\n    }\n    if (defined(matches[2])) {\n      // Months\n      result.month = Number(matches[2].replace(\",\", \".\"));\n    }\n    if (defined(matches[3])) {\n      // Weeks\n      result.day = Number(matches[3].replace(\",\", \".\")) * 7;\n    }\n    if (defined(matches[4])) {\n      // Days\n      result.day += Number(matches[4].replace(\",\", \".\"));\n    }\n    if (defined(matches[5])) {\n      // Hours\n      result.hour = Number(matches[5].replace(\",\", \".\"));\n    }\n    if (defined(matches[6])) {\n      // Weeks\n      result.minute = Number(matches[6].replace(\",\", \".\"));\n    }\n    if (defined(matches[7])) {\n      // Seconds\n      const seconds = Number(matches[7].replace(\",\", \".\"));\n      result.second = Math.floor(seconds);\n      result.millisecond = (seconds % 1) * 1000;\n    }\n  } else {\n    // They can technically specify the duration as a normal date with some caveats. Try our best to load it.\n    if (iso8601[iso8601.length - 1] !== \"Z\") {\n      // It's not a date, its a duration, so it always has to be UTC\n      iso8601 += \"Z\";\n    }\n    JulianDate.toGregorianDate(\n      JulianDate.fromIso8601(iso8601, scratchJulianDate),\n      result\n    );\n  }\n\n  // A duration of 0 will cause an infinite loop, so just make sure something is non-zero\n  return (\n    result.year ||\n    result.month ||\n    result.day ||\n    result.hour ||\n    result.minute ||\n    result.second ||\n    result.millisecond\n  );\n}\n\nconst scratchDuration = new GregorianDate();\n/**\n * Creates a new instance from an {@link http://en.wikipedia.org/wiki/ISO_8601|ISO 8601} time interval (start/end/duration).\n *\n * @param {object} options Object with the following properties:\n * @param {string} options.iso8601 An ISO 8601 interval.\n * @param {boolean} [options.isStartIncluded=true] <code>true</code> if start time is included in the interval, <code>false</code> otherwise.\n * @param {boolean} [options.isStopIncluded=true] <code>true</code> if stop time is included in the interval, <code>false</code> otherwise.\n * @param {boolean} [options.leadingInterval=false] <code>true</code> if you want to add a interval from Iso8601.MINIMUM_VALUE to start time,  <code>false</code> otherwise.\n * @param {boolean} [options.trailingInterval=false] <code>true</code> if you want to add a interval from stop time to Iso8601.MAXIMUM_VALUE,  <code>false</code> otherwise.\n * @param {Function} [options.dataCallback] A function that will be return the data that is called with each interval before it is added to the collection. If unspecified, the data will be the index in the collection.\n * @param {TimeIntervalCollection} [result] An existing instance to use for the result.\n * @returns {TimeIntervalCollection} The modified result parameter or a new instance if none was provided.\n */\nTimeIntervalCollection.fromIso8601 = function (options, result) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options)) {\n    throw new DeveloperError(\"options is required.\");\n  }\n  if (!defined(options.iso8601)) {\n    throw new DeveloperError(\"options.iso8601 is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const dates = options.iso8601.split(\"/\");\n  const start = JulianDate.fromIso8601(dates[0]);\n  const stop = JulianDate.fromIso8601(dates[1]);\n  const julianDates = [];\n\n  if (!parseDuration(dates[2], scratchDuration)) {\n    julianDates.push(start, stop);\n  } else {\n    let date = JulianDate.clone(start);\n    julianDates.push(date);\n    while (JulianDate.compare(date, stop) < 0) {\n      date = addToDate(date, scratchDuration);\n      const afterStop = JulianDate.compare(stop, date) <= 0;\n      if (afterStop) {\n        JulianDate.clone(stop, date);\n      }\n\n      julianDates.push(date);\n    }\n  }\n\n  return TimeIntervalCollection.fromJulianDateArray(\n    {\n      julianDates: julianDates,\n      isStartIncluded: options.isStartIncluded,\n      isStopIncluded: options.isStopIncluded,\n      leadingInterval: options.leadingInterval,\n      trailingInterval: options.trailingInterval,\n      dataCallback: options.dataCallback,\n    },\n    result\n  );\n};\n\n/**\n * Creates a new instance from a {@link http://en.wikipedia.org/wiki/ISO_8601|ISO 8601} date array.\n *\n * @param {object} options Object with the following properties:\n * @param {string[]} options.iso8601Dates An array of ISO 8601 dates.\n * @param {boolean} [options.isStartIncluded=true] <code>true</code> if start time is included in the interval, <code>false</code> otherwise.\n * @param {boolean} [options.isStopIncluded=true] <code>true</code> if stop time is included in the interval, <code>false</code> otherwise.\n * @param {boolean} [options.leadingInterval=false] <code>true</code> if you want to add a interval from Iso8601.MINIMUM_VALUE to start time,  <code>false</code> otherwise.\n * @param {boolean} [options.trailingInterval=false] <code>true</code> if you want to add a interval from stop time to Iso8601.MAXIMUM_VALUE,  <code>false</code> otherwise.\n * @param {Function} [options.dataCallback] A function that will be return the data that is called with each interval before it is added to the collection. If unspecified, the data will be the index in the collection.\n * @param {TimeIntervalCollection} [result] An existing instance to use for the result.\n * @returns {TimeIntervalCollection} The modified result parameter or a new instance if none was provided.\n */\nTimeIntervalCollection.fromIso8601DateArray = function (options, result) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options)) {\n    throw new DeveloperError(\"options is required.\");\n  }\n  if (!defined(options.iso8601Dates)) {\n    throw new DeveloperError(\"options.iso8601Dates is required.\");\n  }\n  //>>includeEnd('debug');\n\n  return TimeIntervalCollection.fromJulianDateArray(\n    {\n      julianDates: options.iso8601Dates.map(function (date) {\n        return JulianDate.fromIso8601(date);\n      }),\n      isStartIncluded: options.isStartIncluded,\n      isStopIncluded: options.isStopIncluded,\n      leadingInterval: options.leadingInterval,\n      trailingInterval: options.trailingInterval,\n      dataCallback: options.dataCallback,\n    },\n    result\n  );\n};\n\n/**\n * Creates a new instance from a {@link http://en.wikipedia.org/wiki/ISO_8601|ISO 8601} duration array.\n *\n * @param {object} options Object with the following properties:\n * @param {JulianDate} options.epoch An date that the durations are relative to.\n * @param {string} options.iso8601Durations An array of ISO 8601 durations.\n * @param {boolean} [options.relativeToPrevious=false] <code>true</code> if durations are relative to previous date, <code>false</code> if always relative to the epoch.\n * @param {boolean} [options.isStartIncluded=true] <code>true</code> if start time is included in the interval, <code>false</code> otherwise.\n * @param {boolean} [options.isStopIncluded=true] <code>true</code> if stop time is included in the interval, <code>false</code> otherwise.\n * @param {boolean} [options.leadingInterval=false] <code>true</code> if you want to add a interval from Iso8601.MINIMUM_VALUE to start time,  <code>false</code> otherwise.\n * @param {boolean} [options.trailingInterval=false] <code>true</code> if you want to add a interval from stop time to Iso8601.MAXIMUM_VALUE,  <code>false</code> otherwise.\n * @param {Function} [options.dataCallback] A function that will be return the data that is called with each interval before it is added to the collection. If unspecified, the data will be the index in the collection.\n * @param {TimeIntervalCollection} [result] An existing instance to use for the result.\n * @returns {TimeIntervalCollection} The modified result parameter or a new instance if none was provided.\n */\nTimeIntervalCollection.fromIso8601DurationArray = function (options, result) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options)) {\n    throw new DeveloperError(\"options is required.\");\n  }\n  if (!defined(options.epoch)) {\n    throw new DeveloperError(\"options.epoch is required.\");\n  }\n  if (!defined(options.iso8601Durations)) {\n    throw new DeveloperError(\"options.iso8601Durations is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const epoch = options.epoch;\n  const iso8601Durations = options.iso8601Durations;\n  const relativeToPrevious = defaultValue(options.relativeToPrevious, false);\n  const julianDates = [];\n  let date, previousDate;\n\n  const length = iso8601Durations.length;\n  for (let i = 0; i < length; ++i) {\n    // Allow a duration of 0 on the first iteration, because then it is just the epoch\n    if (parseDuration(iso8601Durations[i], scratchDuration) || i === 0) {\n      if (relativeToPrevious && defined(previousDate)) {\n        date = addToDate(previousDate, scratchDuration);\n      } else {\n        date = addToDate(epoch, scratchDuration);\n      }\n      julianDates.push(date);\n      previousDate = date;\n    }\n  }\n\n  return TimeIntervalCollection.fromJulianDateArray(\n    {\n      julianDates: julianDates,\n      isStartIncluded: options.isStartIncluded,\n      isStopIncluded: options.isStopIncluded,\n      leadingInterval: options.leadingInterval,\n      trailingInterval: options.trailingInterval,\n      dataCallback: options.dataCallback,\n    },\n    result\n  );\n};\nexport default TimeIntervalCollection;\n","import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport EventHelper from \"../Core/EventHelper.js\";\nimport TimeIntervalCollection from \"../Core/TimeIntervalCollection.js\";\nimport Property from \"./Property.js\";\n\nfunction subscribeAll(property, eventHelper, definitionChanged, intervals) {\n  function callback() {\n    definitionChanged.raiseEvent(property);\n  }\n  const items = [];\n  eventHelper.removeAll();\n  const length = intervals.length;\n  for (let i = 0; i < length; i++) {\n    const interval = intervals.get(i);\n    if (defined(interval.data) && items.indexOf(interval.data) === -1) {\n      eventHelper.add(interval.data.definitionChanged, callback);\n    }\n  }\n}\n\n/**\n * A {@link Property} which is defined by a {@link TimeIntervalCollection}, where the\n * data property of each {@link TimeInterval} is another Property instance which is\n * evaluated at the provided time.\n *\n * @alias CompositeProperty\n * @constructor\n *\n *\n * @example\n * const constantProperty = ...;\n * const sampledProperty = ...;\n *\n * //Create a composite property from two previously defined properties\n * //where the property is valid on August 1st, 2012 and uses a constant\n * //property for the first half of the day and a sampled property for the\n * //remaining half.\n * const composite = new Cesium.CompositeProperty();\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T00:00:00.00Z/2012-08-01T12:00:00.00Z',\n *     data : constantProperty\n * }));\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T12:00:00.00Z/2012-08-02T00:00:00.00Z',\n *     isStartIncluded : false,\n *     isStopIncluded : false,\n *     data : sampledProperty\n * }));\n *\n * @see CompositeMaterialProperty\n * @see CompositePositionProperty\n */\nfunction CompositeProperty() {\n  this._eventHelper = new EventHelper();\n  this._definitionChanged = new Event();\n  this._intervals = new TimeIntervalCollection();\n  this._intervals.changedEvent.addEventListener(\n    CompositeProperty.prototype._intervalsChanged,\n    this\n  );\n}\n\nObject.defineProperties(CompositeProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof CompositeProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._intervals.isEmpty;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setValue is called with data different\n   * than the current value.\n   * @memberof CompositeProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the interval collection.\n   * @memberof CompositeProperty.prototype\n   *\n   * @type {TimeIntervalCollection}\n   */\n  intervals: {\n    get: function () {\n      return this._intervals;\n    },\n  },\n});\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nCompositeProperty.prototype.getValue = function (time, result) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required\");\n  }\n  //>>includeEnd('debug');\n\n  const innerProperty = this._intervals.findDataForIntervalContainingDate(time);\n  if (defined(innerProperty)) {\n    return innerProperty.getValue(time, result);\n  }\n  return undefined;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCompositeProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof CompositeProperty && //\n      this._intervals.equals(other._intervals, Property.equals))\n  );\n};\n\n/**\n * @private\n */\nCompositeProperty.prototype._intervalsChanged = function () {\n  subscribeAll(\n    this,\n    this._eventHelper,\n    this._definitionChanged,\n    this._intervals\n  );\n  this._definitionChanged.raiseEvent(this);\n};\nexport default CompositeProperty;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport ReferenceFrame from \"../Core/ReferenceFrame.js\";\nimport CompositeProperty from \"./CompositeProperty.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link CompositeProperty} which is also a {@link PositionProperty}.\n *\n * @alias CompositePositionProperty\n * @constructor\n *\n * @param {ReferenceFrame} [referenceFrame=ReferenceFrame.FIXED] The reference frame in which the position is defined.\n */\nfunction CompositePositionProperty(referenceFrame) {\n  this._referenceFrame = defaultValue(referenceFrame, ReferenceFrame.FIXED);\n  this._definitionChanged = new Event();\n  this._composite = new CompositeProperty();\n  this._composite.definitionChanged.addEventListener(\n    CompositePositionProperty.prototype._raiseDefinitionChanged,\n    this\n  );\n}\n\nObject.defineProperties(CompositePositionProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof CompositePositionProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._composite.isConstant;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setValue is called with data different\n   * than the current value.\n   * @memberof CompositePositionProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the interval collection.\n   * @memberof CompositePositionProperty.prototype\n   *\n   * @type {TimeIntervalCollection}\n   */\n  intervals: {\n    get: function () {\n      return this._composite.intervals;\n    },\n  },\n  /**\n   * Gets or sets the reference frame which this position presents itself as.\n   * Each PositionProperty making up this object has it's own reference frame,\n   * so this property merely exposes a \"preferred\" reference frame for clients\n   * to use.\n   * @memberof CompositePositionProperty.prototype\n   *\n   * @type {ReferenceFrame}\n   */\n  referenceFrame: {\n    get: function () {\n      return this._referenceFrame;\n    },\n    set: function (value) {\n      this._referenceFrame = value;\n    },\n  },\n});\n\n/**\n * Gets the value of the property at the provided time in the fixed frame.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3 | undefined} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nCompositePositionProperty.prototype.getValue = function (time, result) {\n  return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n};\n\n/**\n * Gets the value of the property at the provided time and in the provided reference frame.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3 | undefined} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nCompositePositionProperty.prototype.getValueInReferenceFrame = function (\n  time,\n  referenceFrame,\n  result\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required.\");\n  }\n  if (!defined(referenceFrame)) {\n    throw new DeveloperError(\"referenceFrame is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const innerProperty = this._composite._intervals.findDataForIntervalContainingDate(\n    time\n  );\n  if (defined(innerProperty)) {\n    return innerProperty.getValueInReferenceFrame(time, referenceFrame, result);\n  }\n  return undefined;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nCompositePositionProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof CompositePositionProperty && //\n      this._referenceFrame === other._referenceFrame && //\n      this._composite.equals(other._composite, Property.equals))\n  );\n};\n\n/**\n * @private\n */\nCompositePositionProperty.prototype._raiseDefinitionChanged = function () {\n  this._definitionChanged.raiseEvent(this);\n};\nexport default CompositePositionProperty;\n","/**\n * Constants to determine how an interpolated value is extrapolated\n * when querying outside the bounds of available data.\n *\n * @enum {number}\n *\n * @see SampledProperty\n */\nconst ExtrapolationType = {\n  /**\n   * No extrapolation occurs.\n   *\n   * @type {number}\n   * @constant\n   */\n  NONE: 0,\n\n  /**\n   * The first or last value is used when outside the range of sample data.\n   *\n   * @type {number}\n   * @constant\n   */\n  HOLD: 1,\n\n  /**\n   * The value is extrapolated.\n   *\n   * @type {number}\n   * @constant\n   */\n  EXTRAPOLATE: 2,\n};\nexport default Object.freeze(ExtrapolationType);\n","import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * An {@link InterpolationAlgorithm} for performing linear interpolation.\n *\n * @namespace LinearApproximation\n */\nconst LinearApproximation = {\n  type: \"Linear\",\n};\n\n/**\n * Given the desired degree, returns the number of data points required for interpolation.\n * Since linear interpolation can only generate a first degree polynomial, this function\n * always returns 2.\n * @param {number} degree The desired degree of interpolation.\n * @returns {number} This function always returns 2.\n *\n */\nLinearApproximation.getRequiredDataPoints = function (degree) {\n  return 2;\n};\n\n/**\n * Interpolates values using linear approximation.\n *\n * @param {number} x The independent variable for which the dependent variables will be interpolated.\n * @param {number[]} xTable The array of independent variables to use to interpolate.  The values\n * in this array must be in increasing order and the same value must not occur twice in the array.\n * @param {number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n * @param {number} yStride The number of dependent variable values in yTable corresponding to\n * each independent variable value in xTable.\n * @param {number[]} [result] An existing array into which to store the result.\n * @returns {number[]} The array of interpolated values, or the result parameter if one was provided.\n */\nLinearApproximation.interpolateOrderZero = function (\n  x,\n  xTable,\n  yTable,\n  yStride,\n  result\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (xTable.length !== 2) {\n    throw new DeveloperError(\n      \"The xTable provided to the linear interpolator must have exactly two elements.\"\n    );\n  } else if (yStride <= 0) {\n    throw new DeveloperError(\n      \"There must be at least 1 dependent variable for each independent variable.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  if (!defined(result)) {\n    result = new Array(yStride);\n  }\n\n  let i;\n  let y0;\n  let y1;\n  const x0 = xTable[0];\n  const x1 = xTable[1];\n\n  //>>includeStart('debug', pragmas.debug);\n  if (x0 === x1) {\n    throw new DeveloperError(\n      \"Divide by zero error: xTable[0] and xTable[1] are equal\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  for (i = 0; i < yStride; i++) {\n    y0 = yTable[i];\n    y1 = yTable[i + yStride];\n    result[i] = ((y1 - y0) * x + x1 * y0 - x0 * y1) / (x1 - x0);\n  }\n\n  return result;\n};\nexport default LinearApproximation;\n","/**\n * Gets a timestamp that can be used in measuring the time between events.  Timestamps\n * are expressed in milliseconds, but it is not specified what the milliseconds are\n * measured from.  This function uses performance.now() if it is available, or Date.now()\n * otherwise.\n *\n * @function getTimestamp\n *\n * @returns {number} The timestamp in milliseconds since some unspecified reference time.\n */\nlet getTimestamp;\n\nif (\n  typeof performance !== \"undefined\" &&\n  typeof performance.now === \"function\" &&\n  isFinite(performance.now())\n) {\n  getTimestamp = function () {\n    return performance.now();\n  };\n} else {\n  getTimestamp = function () {\n    return Date.now();\n  };\n}\nexport default getTimestamp;\n","import binarySearch from \"../Core/binarySearch.js\";\nimport Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport ExtrapolationType from \"../Core/ExtrapolationType.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport LinearApproximation from \"../Core/LinearApproximation.js\";\n\nconst PackableNumber = {\n  packedLength: 1,\n  pack: function (value, array, startingIndex) {\n    startingIndex = defaultValue(startingIndex, 0);\n    array[startingIndex] = value;\n  },\n  unpack: function (array, startingIndex, result) {\n    startingIndex = defaultValue(startingIndex, 0);\n    return array[startingIndex];\n  },\n};\n\n//We can't use splice for inserting new elements because function apply can't handle\n//a huge number of arguments.  See https://code.google.com/p/chromium/issues/detail?id=56588\nfunction arrayInsert(array, startIndex, items) {\n  let i;\n  const arrayLength = array.length;\n  const itemsLength = items.length;\n  const newLength = arrayLength + itemsLength;\n\n  array.length = newLength;\n  if (arrayLength !== startIndex) {\n    let q = arrayLength - 1;\n    for (i = newLength - 1; i >= startIndex; i--) {\n      array[i] = array[q--];\n    }\n  }\n\n  for (i = 0; i < itemsLength; i++) {\n    array[startIndex++] = items[i];\n  }\n}\n\nfunction convertDate(date, epoch) {\n  if (date instanceof JulianDate) {\n    return date;\n  }\n  if (typeof date === \"string\") {\n    return JulianDate.fromIso8601(date);\n  }\n  return JulianDate.addSeconds(epoch, date, new JulianDate());\n}\n\nconst timesSpliceArgs = [];\nconst valuesSpliceArgs = [];\n\nfunction mergeNewSamples(epoch, times, values, newData, packedLength) {\n  let newDataIndex = 0;\n  let i;\n  let prevItem;\n  let timesInsertionPoint;\n  let valuesInsertionPoint;\n  let currentTime;\n  let nextTime;\n\n  while (newDataIndex < newData.length) {\n    currentTime = convertDate(newData[newDataIndex], epoch);\n    timesInsertionPoint = binarySearch(times, currentTime, JulianDate.compare);\n    let timesSpliceArgsCount = 0;\n    let valuesSpliceArgsCount = 0;\n\n    if (timesInsertionPoint < 0) {\n      //Doesn't exist, insert as many additional values as we can.\n      timesInsertionPoint = ~timesInsertionPoint;\n\n      valuesInsertionPoint = timesInsertionPoint * packedLength;\n      prevItem = undefined;\n      nextTime = times[timesInsertionPoint];\n      while (newDataIndex < newData.length) {\n        currentTime = convertDate(newData[newDataIndex], epoch);\n        if (\n          (defined(prevItem) &&\n            JulianDate.compare(prevItem, currentTime) >= 0) ||\n          (defined(nextTime) && JulianDate.compare(currentTime, nextTime) >= 0)\n        ) {\n          break;\n        }\n        timesSpliceArgs[timesSpliceArgsCount++] = currentTime;\n        newDataIndex = newDataIndex + 1;\n        for (i = 0; i < packedLength; i++) {\n          valuesSpliceArgs[valuesSpliceArgsCount++] = newData[newDataIndex];\n          newDataIndex = newDataIndex + 1;\n        }\n        prevItem = currentTime;\n      }\n\n      if (timesSpliceArgsCount > 0) {\n        valuesSpliceArgs.length = valuesSpliceArgsCount;\n        arrayInsert(values, valuesInsertionPoint, valuesSpliceArgs);\n\n        timesSpliceArgs.length = timesSpliceArgsCount;\n        arrayInsert(times, timesInsertionPoint, timesSpliceArgs);\n      }\n    } else {\n      //Found an exact match\n      for (i = 0; i < packedLength; i++) {\n        newDataIndex++;\n        values[timesInsertionPoint * packedLength + i] = newData[newDataIndex];\n      }\n      newDataIndex++;\n    }\n  }\n}\n\n/**\n * A {@link Property} whose value is interpolated for a given time from the\n * provided set of samples and specified interpolation algorithm and degree.\n * @alias SampledProperty\n * @constructor\n *\n * @param {number|Packable} type The type of property.\n * @param {Packable[]} [derivativeTypes] When supplied, indicates that samples will contain derivative information of the specified types.\n *\n *\n * @example\n * //Create a linearly interpolated Cartesian2\n * const property = new Cesium.SampledProperty(Cesium.Cartesian2);\n *\n * //Populate it with data\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:00:00.00Z'), new Cesium.Cartesian2(0, 0));\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-02T00:00:00.00Z'), new Cesium.Cartesian2(4, 7));\n *\n * //Retrieve an interpolated value\n * const result = property.getValue(Cesium.JulianDate.fromIso8601('2012-08-01T12:00:00.00Z'));\n *\n * @example\n * //Create a simple numeric SampledProperty that uses third degree Hermite Polynomial Approximation\n * const property = new Cesium.SampledProperty(Number);\n * property.setInterpolationOptions({\n *     interpolationDegree : 3,\n *     interpolationAlgorithm : Cesium.HermitePolynomialApproximation\n * });\n *\n * //Populate it with data\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:00:00.00Z'), 1.0);\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:01:00.00Z'), 6.0);\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:02:00.00Z'), 12.0);\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:03:30.00Z'), 5.0);\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:06:30.00Z'), 2.0);\n *\n * //Samples can be added in any order.\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:00:30.00Z'), 6.2);\n *\n * //Retrieve an interpolated value\n * const result = property.getValue(Cesium.JulianDate.fromIso8601('2012-08-01T00:02:34.00Z'));\n *\n * @see SampledPositionProperty\n */\nfunction SampledProperty(type, derivativeTypes) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"type\", type);\n  //>>includeEnd('debug');\n\n  let innerType = type;\n  if (innerType === Number) {\n    innerType = PackableNumber;\n  }\n  let packedLength = innerType.packedLength;\n  let packedInterpolationLength = defaultValue(\n    innerType.packedInterpolationLength,\n    packedLength\n  );\n\n  let inputOrder = 0;\n  let innerDerivativeTypes;\n  if (defined(derivativeTypes)) {\n    const length = derivativeTypes.length;\n    innerDerivativeTypes = new Array(length);\n    for (let i = 0; i < length; i++) {\n      let derivativeType = derivativeTypes[i];\n      if (derivativeType === Number) {\n        derivativeType = PackableNumber;\n      }\n      const derivativePackedLength = derivativeType.packedLength;\n      packedLength += derivativePackedLength;\n      packedInterpolationLength += defaultValue(\n        derivativeType.packedInterpolationLength,\n        derivativePackedLength\n      );\n      innerDerivativeTypes[i] = derivativeType;\n    }\n    inputOrder = length;\n  }\n\n  this._type = type;\n  this._innerType = innerType;\n  this._interpolationDegree = 1;\n  this._interpolationAlgorithm = LinearApproximation;\n  this._numberOfPoints = 0;\n  this._times = [];\n  this._values = [];\n  this._xTable = [];\n  this._yTable = [];\n  this._packedLength = packedLength;\n  this._packedInterpolationLength = packedInterpolationLength;\n  this._updateTableLength = true;\n  this._interpolationResult = new Array(packedInterpolationLength);\n  this._definitionChanged = new Event();\n  this._derivativeTypes = derivativeTypes;\n  this._innerDerivativeTypes = innerDerivativeTypes;\n  this._inputOrder = inputOrder;\n  this._forwardExtrapolationType = ExtrapolationType.NONE;\n  this._forwardExtrapolationDuration = 0;\n  this._backwardExtrapolationType = ExtrapolationType.NONE;\n  this._backwardExtrapolationDuration = 0;\n}\n\nObject.defineProperties(SampledProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof SampledProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._values.length === 0;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof SampledProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the type of property.\n   * @memberof SampledProperty.prototype\n   * @type {*}\n   */\n  type: {\n    get: function () {\n      return this._type;\n    },\n  },\n  /**\n   * Gets the derivative types used by this property.\n   * @memberof SampledProperty.prototype\n   * @type {Packable[]}\n   */\n  derivativeTypes: {\n    get: function () {\n      return this._derivativeTypes;\n    },\n  },\n  /**\n   * Gets the degree of interpolation to perform when retrieving a value.\n   * @memberof SampledProperty.prototype\n   * @type {number}\n   * @default 1\n   */\n  interpolationDegree: {\n    get: function () {\n      return this._interpolationDegree;\n    },\n  },\n  /**\n   * Gets the interpolation algorithm to use when retrieving a value.\n   * @memberof SampledProperty.prototype\n   * @type {InterpolationAlgorithm}\n   * @default LinearApproximation\n   */\n  interpolationAlgorithm: {\n    get: function () {\n      return this._interpolationAlgorithm;\n    },\n  },\n  /**\n   * Gets or sets the type of extrapolation to perform when a value\n   * is requested at a time after any available samples.\n   * @memberof SampledProperty.prototype\n   * @type {ExtrapolationType}\n   * @default ExtrapolationType.NONE\n   */\n  forwardExtrapolationType: {\n    get: function () {\n      return this._forwardExtrapolationType;\n    },\n    set: function (value) {\n      if (this._forwardExtrapolationType !== value) {\n        this._forwardExtrapolationType = value;\n        this._definitionChanged.raiseEvent(this);\n      }\n    },\n  },\n  /**\n   * Gets or sets the amount of time to extrapolate forward before\n   * the property becomes undefined.  A value of 0 will extrapolate forever.\n   * @memberof SampledProperty.prototype\n   * @type {number}\n   * @default 0\n   */\n  forwardExtrapolationDuration: {\n    get: function () {\n      return this._forwardExtrapolationDuration;\n    },\n    set: function (value) {\n      if (this._forwardExtrapolationDuration !== value) {\n        this._forwardExtrapolationDuration = value;\n        this._definitionChanged.raiseEvent(this);\n      }\n    },\n  },\n  /**\n   * Gets or sets the type of extrapolation to perform when a value\n   * is requested at a time before any available samples.\n   * @memberof SampledProperty.prototype\n   * @type {ExtrapolationType}\n   * @default ExtrapolationType.NONE\n   */\n  backwardExtrapolationType: {\n    get: function () {\n      return this._backwardExtrapolationType;\n    },\n    set: function (value) {\n      if (this._backwardExtrapolationType !== value) {\n        this._backwardExtrapolationType = value;\n        this._definitionChanged.raiseEvent(this);\n      }\n    },\n  },\n  /**\n   * Gets or sets the amount of time to extrapolate backward\n   * before the property becomes undefined.  A value of 0 will extrapolate forever.\n   * @memberof SampledProperty.prototype\n   * @type {number}\n   * @default 0\n   */\n  backwardExtrapolationDuration: {\n    get: function () {\n      return this._backwardExtrapolationDuration;\n    },\n    set: function (value) {\n      if (this._backwardExtrapolationDuration !== value) {\n        this._backwardExtrapolationDuration = value;\n        this._definitionChanged.raiseEvent(this);\n      }\n    },\n  },\n});\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nSampledProperty.prototype.getValue = function (time, result) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"time\", time);\n  //>>includeEnd('debug');\n\n  const times = this._times;\n  const timesLength = times.length;\n  if (timesLength === 0) {\n    return undefined;\n  }\n\n  let timeout;\n  const innerType = this._innerType;\n  const values = this._values;\n  let index = binarySearch(times, time, JulianDate.compare);\n\n  if (index < 0) {\n    index = ~index;\n\n    if (index === 0) {\n      const startTime = times[index];\n      timeout = this._backwardExtrapolationDuration;\n      if (\n        this._backwardExtrapolationType === ExtrapolationType.NONE ||\n        (timeout !== 0 &&\n          JulianDate.secondsDifference(startTime, time) > timeout)\n      ) {\n        return undefined;\n      }\n      if (this._backwardExtrapolationType === ExtrapolationType.HOLD) {\n        return innerType.unpack(values, 0, result);\n      }\n    }\n\n    if (index >= timesLength) {\n      index = timesLength - 1;\n      const endTime = times[index];\n      timeout = this._forwardExtrapolationDuration;\n      if (\n        this._forwardExtrapolationType === ExtrapolationType.NONE ||\n        (timeout !== 0 && JulianDate.secondsDifference(time, endTime) > timeout)\n      ) {\n        return undefined;\n      }\n      if (this._forwardExtrapolationType === ExtrapolationType.HOLD) {\n        index = timesLength - 1;\n        return innerType.unpack(values, index * innerType.packedLength, result);\n      }\n    }\n\n    const xTable = this._xTable;\n    const yTable = this._yTable;\n    const interpolationAlgorithm = this._interpolationAlgorithm;\n    const packedInterpolationLength = this._packedInterpolationLength;\n    const inputOrder = this._inputOrder;\n\n    if (this._updateTableLength) {\n      this._updateTableLength = false;\n      const numberOfPoints = Math.min(\n        interpolationAlgorithm.getRequiredDataPoints(\n          this._interpolationDegree,\n          inputOrder\n        ),\n        timesLength\n      );\n      if (numberOfPoints !== this._numberOfPoints) {\n        this._numberOfPoints = numberOfPoints;\n        xTable.length = numberOfPoints;\n        yTable.length = numberOfPoints * packedInterpolationLength;\n      }\n    }\n\n    const degree = this._numberOfPoints - 1;\n    if (degree < 1) {\n      return undefined;\n    }\n\n    let firstIndex = 0;\n    let lastIndex = timesLength - 1;\n    const pointsInCollection = lastIndex - firstIndex + 1;\n\n    if (pointsInCollection >= degree + 1) {\n      let computedFirstIndex = index - ((degree / 2) | 0) - 1;\n      if (computedFirstIndex < firstIndex) {\n        computedFirstIndex = firstIndex;\n      }\n      let computedLastIndex = computedFirstIndex + degree;\n      if (computedLastIndex > lastIndex) {\n        computedLastIndex = lastIndex;\n        computedFirstIndex = computedLastIndex - degree;\n        if (computedFirstIndex < firstIndex) {\n          computedFirstIndex = firstIndex;\n        }\n      }\n\n      firstIndex = computedFirstIndex;\n      lastIndex = computedLastIndex;\n    }\n    const length = lastIndex - firstIndex + 1;\n\n    // Build the tables\n    for (let i = 0; i < length; ++i) {\n      xTable[i] = JulianDate.secondsDifference(\n        times[firstIndex + i],\n        times[lastIndex]\n      );\n    }\n\n    if (!defined(innerType.convertPackedArrayForInterpolation)) {\n      let destinationIndex = 0;\n      const packedLength = this._packedLength;\n      let sourceIndex = firstIndex * packedLength;\n      const stop = (lastIndex + 1) * packedLength;\n\n      while (sourceIndex < stop) {\n        yTable[destinationIndex] = values[sourceIndex];\n        sourceIndex++;\n        destinationIndex++;\n      }\n    } else {\n      innerType.convertPackedArrayForInterpolation(\n        values,\n        firstIndex,\n        lastIndex,\n        yTable\n      );\n    }\n\n    // Interpolate!\n    const x = JulianDate.secondsDifference(time, times[lastIndex]);\n    let interpolationResult;\n    if (inputOrder === 0 || !defined(interpolationAlgorithm.interpolate)) {\n      interpolationResult = interpolationAlgorithm.interpolateOrderZero(\n        x,\n        xTable,\n        yTable,\n        packedInterpolationLength,\n        this._interpolationResult\n      );\n    } else {\n      const yStride = Math.floor(packedInterpolationLength / (inputOrder + 1));\n      interpolationResult = interpolationAlgorithm.interpolate(\n        x,\n        xTable,\n        yTable,\n        yStride,\n        inputOrder,\n        inputOrder,\n        this._interpolationResult\n      );\n    }\n\n    if (!defined(innerType.unpackInterpolationResult)) {\n      return innerType.unpack(interpolationResult, 0, result);\n    }\n    return innerType.unpackInterpolationResult(\n      interpolationResult,\n      values,\n      firstIndex,\n      lastIndex,\n      result\n    );\n  }\n  return innerType.unpack(values, index * this._packedLength, result);\n};\n\n/**\n * Sets the algorithm and degree to use when interpolating a value.\n *\n * @param {object} [options] Object with the following properties:\n * @param {InterpolationAlgorithm} [options.interpolationAlgorithm] The new interpolation algorithm.  If undefined, the existing property will be unchanged.\n * @param {number} [options.interpolationDegree] The new interpolation degree.  If undefined, the existing property will be unchanged.\n */\nSampledProperty.prototype.setInterpolationOptions = function (options) {\n  if (!defined(options)) {\n    return;\n  }\n\n  let valuesChanged = false;\n\n  const interpolationAlgorithm = options.interpolationAlgorithm;\n  const interpolationDegree = options.interpolationDegree;\n\n  if (\n    defined(interpolationAlgorithm) &&\n    this._interpolationAlgorithm !== interpolationAlgorithm\n  ) {\n    this._interpolationAlgorithm = interpolationAlgorithm;\n    valuesChanged = true;\n  }\n\n  if (\n    defined(interpolationDegree) &&\n    this._interpolationDegree !== interpolationDegree\n  ) {\n    this._interpolationDegree = interpolationDegree;\n    valuesChanged = true;\n  }\n\n  if (valuesChanged) {\n    this._updateTableLength = true;\n    this._definitionChanged.raiseEvent(this);\n  }\n};\n\n/**\n * Adds a new sample.\n *\n * @param {JulianDate} time The sample time.\n * @param {Packable} value The value at the provided time.\n * @param {Packable[]} [derivatives] The array of derivatives at the provided time.\n */\nSampledProperty.prototype.addSample = function (time, value, derivatives) {\n  const innerDerivativeTypes = this._innerDerivativeTypes;\n  const hasDerivatives = defined(innerDerivativeTypes);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"time\", time);\n  Check.defined(\"value\", value);\n  if (hasDerivatives) {\n    Check.defined(\"derivatives\", derivatives);\n  }\n  //>>includeEnd('debug');\n\n  const innerType = this._innerType;\n  const data = [];\n  data.push(time);\n  innerType.pack(value, data, data.length);\n\n  if (hasDerivatives) {\n    const derivativesLength = innerDerivativeTypes.length;\n    for (let x = 0; x < derivativesLength; x++) {\n      innerDerivativeTypes[x].pack(derivatives[x], data, data.length);\n    }\n  }\n  mergeNewSamples(\n    undefined,\n    this._times,\n    this._values,\n    data,\n    this._packedLength\n  );\n  this._updateTableLength = true;\n  this._definitionChanged.raiseEvent(this);\n};\n\n/**\n * Adds an array of samples.\n *\n * @param {JulianDate[]} times An array of JulianDate instances where each index is a sample time.\n * @param {Packable[]} values The array of values, where each value corresponds to the provided times index.\n * @param {Array[]} [derivativeValues] An array where each item is the array of derivatives at the equivalent time index.\n *\n * @exception {DeveloperError} times and values must be the same length.\n * @exception {DeveloperError} times and derivativeValues must be the same length.\n */\nSampledProperty.prototype.addSamples = function (\n  times,\n  values,\n  derivativeValues\n) {\n  const innerDerivativeTypes = this._innerDerivativeTypes;\n  const hasDerivatives = defined(innerDerivativeTypes);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"times\", times);\n  Check.defined(\"values\", values);\n  if (times.length !== values.length) {\n    throw new DeveloperError(\"times and values must be the same length.\");\n  }\n  if (\n    hasDerivatives &&\n    (!defined(derivativeValues) || derivativeValues.length !== times.length)\n  ) {\n    throw new DeveloperError(\n      \"times and derivativeValues must be the same length.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  const innerType = this._innerType;\n  const length = times.length;\n  const data = [];\n  for (let i = 0; i < length; i++) {\n    data.push(times[i]);\n    innerType.pack(values[i], data, data.length);\n\n    if (hasDerivatives) {\n      const derivatives = derivativeValues[i];\n      const derivativesLength = innerDerivativeTypes.length;\n      for (let x = 0; x < derivativesLength; x++) {\n        innerDerivativeTypes[x].pack(derivatives[x], data, data.length);\n      }\n    }\n  }\n  mergeNewSamples(\n    undefined,\n    this._times,\n    this._values,\n    data,\n    this._packedLength\n  );\n  this._updateTableLength = true;\n  this._definitionChanged.raiseEvent(this);\n};\n\n/**\n * Adds samples as a single packed array where each new sample is represented as a date,\n * followed by the packed representation of the corresponding value and derivatives.\n *\n * @param {number[]} packedSamples The array of packed samples.\n * @param {JulianDate} [epoch] If any of the dates in packedSamples are numbers, they are considered an offset from this epoch, in seconds.\n */\nSampledProperty.prototype.addSamplesPackedArray = function (\n  packedSamples,\n  epoch\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"packedSamples\", packedSamples);\n  //>>includeEnd('debug');\n\n  mergeNewSamples(\n    epoch,\n    this._times,\n    this._values,\n    packedSamples,\n    this._packedLength\n  );\n  this._updateTableLength = true;\n  this._definitionChanged.raiseEvent(this);\n};\n\n/**\n * Removes a sample at the given time, if present.\n *\n * @param {JulianDate} time The sample time.\n * @returns {boolean} <code>true</code> if a sample at time was removed, <code>false</code> otherwise.\n */\nSampledProperty.prototype.removeSample = function (time) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"time\", time);\n  //>>includeEnd('debug');\n\n  const index = binarySearch(this._times, time, JulianDate.compare);\n  if (index < 0) {\n    return false;\n  }\n  removeSamples(this, index, 1);\n  return true;\n};\n\nfunction removeSamples(property, startIndex, numberToRemove) {\n  const packedLength = property._packedLength;\n  property._times.splice(startIndex, numberToRemove);\n  property._values.splice(\n    startIndex * packedLength,\n    numberToRemove * packedLength\n  );\n  property._updateTableLength = true;\n  property._definitionChanged.raiseEvent(property);\n}\n\n/**\n * Removes all samples for the given time interval.\n *\n * @param {TimeInterval} time The time interval for which to remove all samples.\n */\nSampledProperty.prototype.removeSamples = function (timeInterval) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"timeInterval\", timeInterval);\n  //>>includeEnd('debug');\n\n  const times = this._times;\n  let startIndex = binarySearch(times, timeInterval.start, JulianDate.compare);\n  if (startIndex < 0) {\n    startIndex = ~startIndex;\n  } else if (!timeInterval.isStartIncluded) {\n    ++startIndex;\n  }\n  let stopIndex = binarySearch(times, timeInterval.stop, JulianDate.compare);\n  if (stopIndex < 0) {\n    stopIndex = ~stopIndex;\n  } else if (timeInterval.isStopIncluded) {\n    ++stopIndex;\n  }\n\n  removeSamples(this, startIndex, stopIndex - startIndex);\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nSampledProperty.prototype.equals = function (other) {\n  if (this === other) {\n    return true;\n  }\n  if (!defined(other)) {\n    return false;\n  }\n\n  if (\n    this._type !== other._type || //\n    this._interpolationDegree !== other._interpolationDegree || //\n    this._interpolationAlgorithm !== other._interpolationAlgorithm\n  ) {\n    return false;\n  }\n\n  const derivativeTypes = this._derivativeTypes;\n  const hasDerivatives = defined(derivativeTypes);\n  const otherDerivativeTypes = other._derivativeTypes;\n  const otherHasDerivatives = defined(otherDerivativeTypes);\n  if (hasDerivatives !== otherHasDerivatives) {\n    return false;\n  }\n\n  let i;\n  let length;\n  if (hasDerivatives) {\n    length = derivativeTypes.length;\n    if (length !== otherDerivativeTypes.length) {\n      return false;\n    }\n\n    for (i = 0; i < length; i++) {\n      if (derivativeTypes[i] !== otherDerivativeTypes[i]) {\n        return false;\n      }\n    }\n  }\n\n  const times = this._times;\n  const otherTimes = other._times;\n  length = times.length;\n\n  if (length !== otherTimes.length) {\n    return false;\n  }\n\n  for (i = 0; i < length; i++) {\n    if (!JulianDate.equals(times[i], otherTimes[i])) {\n      return false;\n    }\n  }\n\n  const values = this._values;\n  const otherValues = other._values;\n  length = values.length;\n\n  //Since time lengths are equal, values length and other length are guaranteed to be equal.\n  for (i = 0; i < length; i++) {\n    if (values[i] !== otherValues[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//Exposed for testing.\nSampledProperty._mergeNewSamples = mergeNewSamples;\nexport default SampledProperty;\n","import Cartesian3 from \"../Core/Cartesian3.js\";\nimport Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport ReferenceFrame from \"../Core/ReferenceFrame.js\";\nimport PositionProperty from \"./PositionProperty.js\";\nimport Property from \"./Property.js\";\nimport SampledProperty from \"./SampledProperty.js\";\n\n/**\n * A {@link SampledProperty} which is also a {@link PositionProperty}.\n *\n * @alias SampledPositionProperty\n * @constructor\n *\n * @param {ReferenceFrame} [referenceFrame=ReferenceFrame.FIXED] The reference frame in which the position is defined.\n * @param {number} [numberOfDerivatives=0] The number of derivatives that accompany each position; i.e. velocity, acceleration, etc...\n */\nfunction SampledPositionProperty(referenceFrame, numberOfDerivatives) {\n  numberOfDerivatives = defaultValue(numberOfDerivatives, 0);\n\n  let derivativeTypes;\n  if (numberOfDerivatives > 0) {\n    derivativeTypes = new Array(numberOfDerivatives);\n    for (let i = 0; i < numberOfDerivatives; i++) {\n      derivativeTypes[i] = Cartesian3;\n    }\n  }\n\n  this._numberOfDerivatives = numberOfDerivatives;\n  this._property = new SampledProperty(Cartesian3, derivativeTypes);\n  this._definitionChanged = new Event();\n  this._referenceFrame = defaultValue(referenceFrame, ReferenceFrame.FIXED);\n\n  this._property._definitionChanged.addEventListener(function () {\n    this._definitionChanged.raiseEvent(this);\n  }, this);\n}\n\nObject.defineProperties(SampledPositionProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof SampledPositionProperty.prototype\n   *\n   * @type {boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._property.isConstant;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof SampledPositionProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the reference frame in which the position is defined.\n   * @memberof SampledPositionProperty.prototype\n   * @type {ReferenceFrame}\n   * @default ReferenceFrame.FIXED;\n   */\n  referenceFrame: {\n    get: function () {\n      return this._referenceFrame;\n    },\n  },\n  /**\n   * Gets the degree of interpolation to perform when retrieving a value. Call <code>setInterpolationOptions</code> to set this.\n   * @memberof SampledPositionProperty.prototype\n   *\n   * @type {number}\n   * @default 1\n   * @readonly\n   */\n  interpolationDegree: {\n    get: function () {\n      return this._property.interpolationDegree;\n    },\n  },\n  /**\n   * Gets the interpolation algorithm to use when retrieving a value. Call <code>setInterpolationOptions</code> to set this.\n   * @memberof SampledPositionProperty.prototype\n   *\n   * @type {InterpolationAlgorithm}\n   * @default LinearApproximation\n   * @readonly\n   */\n  interpolationAlgorithm: {\n    get: function () {\n      return this._property.interpolationAlgorithm;\n    },\n  },\n  /**\n   * The number of derivatives contained by this property; i.e. 0 for just position, 1 for velocity, etc.\n   * @memberof SampledPositionProperty.prototype\n   *\n   * @type {number}\n   * @default 0\n   */\n  numberOfDerivatives: {\n    get: function () {\n      return this._numberOfDerivatives;\n    },\n  },\n  /**\n   * Gets or sets the type of extrapolation to perform when a value\n   * is requested at a time after any available samples.\n   * @memberof SampledPositionProperty.prototype\n   * @type {ExtrapolationType}\n   * @default ExtrapolationType.NONE\n   */\n  forwardExtrapolationType: {\n    get: function () {\n      return this._property.forwardExtrapolationType;\n    },\n    set: function (value) {\n      this._property.forwardExtrapolationType = value;\n    },\n  },\n  /**\n   * Gets or sets the amount of time to extrapolate forward before\n   * the property becomes undefined.  A value of 0 will extrapolate forever.\n   * @memberof SampledPositionProperty.prototype\n   * @type {number}\n   * @default 0\n   */\n  forwardExtrapolationDuration: {\n    get: function () {\n      return this._property.forwardExtrapolationDuration;\n    },\n    set: function (value) {\n      this._property.forwardExtrapolationDuration = value;\n    },\n  },\n  /**\n   * Gets or sets the type of extrapolation to perform when a value\n   * is requested at a time before any available samples.\n   * @memberof SampledPositionProperty.prototype\n   * @type {ExtrapolationType}\n   * @default ExtrapolationType.NONE\n   */\n  backwardExtrapolationType: {\n    get: function () {\n      return this._property.backwardExtrapolationType;\n    },\n    set: function (value) {\n      this._property.backwardExtrapolationType = value;\n    },\n  },\n  /**\n   * Gets or sets the amount of time to extrapolate backward\n   * before the property becomes undefined.  A value of 0 will extrapolate forever.\n   * @memberof SampledPositionProperty.prototype\n   * @type {number}\n   * @default 0\n   */\n  backwardExtrapolationDuration: {\n    get: function () {\n      return this._property.backwardExtrapolationDuration;\n    },\n    set: function (value) {\n      this._property.backwardExtrapolationDuration = value;\n    },\n  },\n});\n\n/**\n * Gets the position at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3 | undefined} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nSampledPositionProperty.prototype.getValue = function (time, result) {\n  return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n};\n\n/**\n * Gets the position at the provided time and in the provided reference frame.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3 | undefined} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nSampledPositionProperty.prototype.getValueInReferenceFrame = function (\n  time,\n  referenceFrame,\n  result\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"time\", time);\n  Check.defined(\"referenceFrame\", referenceFrame);\n  //>>includeEnd('debug');\n\n  result = this._property.getValue(time, result);\n  if (defined(result)) {\n    return PositionProperty.convertToReferenceFrame(\n      time,\n      result,\n      this._referenceFrame,\n      referenceFrame,\n      result\n    );\n  }\n  return undefined;\n};\n\n/**\n * Sets the algorithm and degree to use when interpolating a position.\n *\n * @param {object} [options] Object with the following properties:\n * @param {InterpolationAlgorithm} [options.interpolationAlgorithm] The new interpolation algorithm.  If undefined, the existing property will be unchanged.\n * @param {number} [options.interpolationDegree] The new interpolation degree.  If undefined, the existing property will be unchanged.\n */\nSampledPositionProperty.prototype.setInterpolationOptions = function (options) {\n  this._property.setInterpolationOptions(options);\n};\n\n/**\n * Adds a new sample.\n *\n * @param {JulianDate} time The sample time.\n * @param {Cartesian3} position The position at the provided time.\n * @param {Cartesian3[]} [derivatives] The array of derivative values at the provided time.\n */\nSampledPositionProperty.prototype.addSample = function (\n  time,\n  position,\n  derivatives\n) {\n  const numberOfDerivatives = this._numberOfDerivatives;\n  //>>includeStart('debug', pragmas.debug);\n  if (\n    numberOfDerivatives > 0 &&\n    (!defined(derivatives) || derivatives.length !== numberOfDerivatives)\n  ) {\n    throw new DeveloperError(\n      \"derivatives length must be equal to the number of derivatives.\"\n    );\n  }\n  //>>includeEnd('debug');\n  this._property.addSample(time, position, derivatives);\n};\n\n/**\n * Adds multiple samples via parallel arrays.\n *\n * @param {JulianDate[]} times An array of JulianDate instances where each index is a sample time.\n * @param {Cartesian3[]} positions An array of Cartesian3 position instances, where each value corresponds to the provided time index.\n * @param {Array[]} [derivatives] An array where each value is another array containing derivatives for the corresponding time index.\n *\n * @exception {DeveloperError} All arrays must be the same length.\n */\nSampledPositionProperty.prototype.addSamples = function (\n  times,\n  positions,\n  derivatives\n) {\n  this._property.addSamples(times, positions, derivatives);\n};\n\n/**\n * Adds samples as a single packed array where each new sample is represented as a date,\n * followed by the packed representation of the corresponding value and derivatives.\n *\n * @param {number[]} packedSamples The array of packed samples.\n * @param {JulianDate} [epoch] If any of the dates in packedSamples are numbers, they are considered an offset from this epoch, in seconds.\n */\nSampledPositionProperty.prototype.addSamplesPackedArray = function (\n  packedSamples,\n  epoch\n) {\n  this._property.addSamplesPackedArray(packedSamples, epoch);\n};\n\n/**\n * Removes a sample at the given time, if present.\n *\n * @param {JulianDate} time The sample time.\n * @returns {boolean} <code>true</code> if a sample at time was removed, <code>false</code> otherwise.\n */\nSampledPositionProperty.prototype.removeSample = function (time) {\n  return this._property.removeSample(time);\n};\n\n/**\n * Removes all samples for the given time interval.\n *\n * @param {TimeInterval} time The time interval for which to remove all samples.\n */\nSampledPositionProperty.prototype.removeSamples = function (timeInterval) {\n  this._property.removeSamples(timeInterval);\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nSampledPositionProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof SampledPositionProperty &&\n      Property.equals(this._property, other._property) && //\n      this._referenceFrame === other._referenceFrame)\n  );\n};\nexport default SampledPositionProperty;\n","import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport Event from \"../Core/Event.js\";\nimport ReferenceFrame from \"../Core/ReferenceFrame.js\";\nimport Property from \"./Property.js\";\n\n/**\n * This is a temporary class for scaling position properties to the ellipsoid surface.\n * It will go away or be refactored to support data with arbitrary height references.\n * @private\n */\nfunction ScaledPositionProperty(value) {\n  this._definitionChanged = new Event();\n  this._value = undefined;\n  this._removeSubscription = undefined;\n  this.setValue(value);\n}\n\nObject.defineProperties(ScaledPositionProperty.prototype, {\n  isConstant: {\n    get: function () {\n      return Property.isConstant(this._value);\n    },\n  },\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  referenceFrame: {\n    get: function () {\n      return defined(this._value)\n        ? this._value.referenceFrame\n        : ReferenceFrame.FIXED;\n    },\n  },\n});\n\nScaledPositionProperty.prototype.getValue = function (time, result) {\n  return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n};\n\nScaledPositionProperty.prototype.setValue = function (value) {\n  if (this._value !== value) {\n    this._value = value;\n\n    if (defined(this._removeSubscription)) {\n      this._removeSubscription();\n      this._removeSubscription = undefined;\n    }\n\n    if (defined(value)) {\n      this._removeSubscription = value.definitionChanged.addEventListener(\n        this._raiseDefinitionChanged,\n        this\n      );\n    }\n    this._definitionChanged.raiseEvent(this);\n  }\n};\n\nScaledPositionProperty.prototype.getValueInReferenceFrame = function (\n  time,\n  referenceFrame,\n  result\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required.\");\n  }\n  if (!defined(referenceFrame)) {\n    throw new DeveloperError(\"referenceFrame is required.\");\n  }\n  //>>includeEnd('debug');\n\n  if (!defined(this._value)) {\n    return undefined;\n  }\n\n  result = this._value.getValueInReferenceFrame(time, referenceFrame, result);\n  return defined(result)\n    ? Ellipsoid.default.scaleToGeodeticSurface(result, result)\n    : undefined;\n};\n\nScaledPositionProperty.prototype.equals = function (other) {\n  return (\n    this === other ||\n    (other instanceof ScaledPositionProperty && this._value === other._value)\n  );\n};\n\nScaledPositionProperty.prototype._raiseDefinitionChanged = function () {\n  this._definitionChanged.raiseEvent(this);\n};\nexport default ScaledPositionProperty;\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n// deno-lint-ignore-file no-this-alias prefer-const\n\n// Global\n\nconst MAX_BITS = 15;\nconst D_CODES = 30;\nconst BL_CODES = 19;\n\nconst LENGTH_CODES = 29;\nconst LITERALS = 256;\nconst L_CODES = (LITERALS + 1 + LENGTH_CODES);\nconst HEAP_SIZE = (2 * L_CODES + 1);\n\nconst END_BLOCK = 256;\n\n// Bit length codes must not exceed MAX_BL_BITS bits\nconst MAX_BL_BITS = 7;\n\n// repeat previous bit length 3-6 times (2 bits of repeat count)\nconst REP_3_6 = 16;\n\n// repeat a zero length 3-10 times (3 bits of repeat count)\nconst REPZ_3_10 = 17;\n\n// repeat a zero length 11-138 times (7 bits of repeat count)\nconst REPZ_11_138 = 18;\n\n// The lengths of the bit length codes are sent in order of decreasing\n// probability, to avoid transmitting the lengths for unused bit\n// length codes.\n\nconst Buf_size = 8 * 2;\n\n// JZlib version : \"1.0.2\"\nconst Z_DEFAULT_COMPRESSION = -1;\n\n// compression strategy\nconst Z_FILTERED = 1;\nconst Z_HUFFMAN_ONLY = 2;\nconst Z_DEFAULT_STRATEGY = 0;\n\nconst Z_NO_FLUSH = 0;\nconst Z_PARTIAL_FLUSH = 1;\nconst Z_FULL_FLUSH = 3;\nconst Z_FINISH = 4;\n\nconst Z_OK = 0;\nconst Z_STREAM_END = 1;\nconst Z_NEED_DICT = 2;\nconst Z_STREAM_ERROR = -2;\nconst Z_DATA_ERROR = -3;\nconst Z_BUF_ERROR = -5;\n\n// Tree\n\nfunction extractArray(array) {\n\treturn flatArray(array.map(([length, value]) => (new Array(length)).fill(value, 0, length)));\n}\n\nfunction flatArray(array) {\n\treturn array.reduce((a, b) => a.concat(Array.isArray(b) ? flatArray(b) : b), []);\n}\n\n// see definition of array dist_code below\nconst _dist_code = [0, 1, 2, 3].concat(...extractArray([\n\t[2, 4], [2, 5], [4, 6], [4, 7], [8, 8], [8, 9], [16, 10], [16, 11], [32, 12], [32, 13], [64, 14], [64, 15], [2, 0], [1, 16],\n\t[1, 17], [2, 18], [2, 19], [4, 20], [4, 21], [8, 22], [8, 23], [16, 24], [16, 25], [32, 26], [32, 27], [64, 28], [64, 29]\n]));\n\nfunction Tree() {\n\tconst that = this;\n\n\t// dyn_tree; // the dynamic tree\n\t// max_code; // largest code with non zero frequency\n\t// stat_desc; // the corresponding static tree\n\n\t// Compute the optimal bit lengths for a tree and update the total bit\n\t// length\n\t// for the current block.\n\t// IN assertion: the fields freq and dad are set, heap[heap_max] and\n\t// above are the tree nodes sorted by increasing frequency.\n\t// OUT assertions: the field len is set to the optimal bit length, the\n\t// array bl_count contains the frequencies for each bit length.\n\t// The length opt_len is updated; static_len is also updated if stree is\n\t// not null.\n\tfunction gen_bitlen(s) {\n\t\tconst tree = that.dyn_tree;\n\t\tconst stree = that.stat_desc.static_tree;\n\t\tconst extra = that.stat_desc.extra_bits;\n\t\tconst base = that.stat_desc.extra_base;\n\t\tconst max_length = that.stat_desc.max_length;\n\t\tlet h; // heap index\n\t\tlet n, m; // iterate over the tree elements\n\t\tlet bits; // bit length\n\t\tlet xbits; // extra bits\n\t\tlet f; // frequency\n\t\tlet overflow = 0; // number of elements with bit length too large\n\n\t\tfor (bits = 0; bits <= MAX_BITS; bits++)\n\t\t\ts.bl_count[bits] = 0;\n\n\t\t// In a first pass, compute the optimal bit lengths (which may\n\t\t// overflow in the case of the bit length tree).\n\t\ttree[s.heap[s.heap_max] * 2 + 1] = 0; // root of the heap\n\n\t\tfor (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n\t\t\tn = s.heap[h];\n\t\t\tbits = tree[tree[n * 2 + 1] * 2 + 1] + 1;\n\t\t\tif (bits > max_length) {\n\t\t\t\tbits = max_length;\n\t\t\t\toverflow++;\n\t\t\t}\n\t\t\ttree[n * 2 + 1] = bits;\n\t\t\t// We overwrite tree[n*2+1] which is no longer needed\n\n\t\t\tif (n > that.max_code)\n\t\t\t\tcontinue; // not a leaf node\n\n\t\t\ts.bl_count[bits]++;\n\t\t\txbits = 0;\n\t\t\tif (n >= base)\n\t\t\t\txbits = extra[n - base];\n\t\t\tf = tree[n * 2];\n\t\t\ts.opt_len += f * (bits + xbits);\n\t\t\tif (stree)\n\t\t\t\ts.static_len += f * (stree[n * 2 + 1] + xbits);\n\t\t}\n\t\tif (overflow === 0)\n\t\t\treturn;\n\n\t\t// This happens for example on obj2 and pic of the Calgary corpus\n\t\t// Find the first bit length which could increase:\n\t\tdo {\n\t\t\tbits = max_length - 1;\n\t\t\twhile (s.bl_count[bits] === 0)\n\t\t\t\tbits--;\n\t\t\ts.bl_count[bits]--; // move one leaf down the tree\n\t\t\ts.bl_count[bits + 1] += 2; // move one overflow item as its brother\n\t\t\ts.bl_count[max_length]--;\n\t\t\t// The brother of the overflow item also moves one step up,\n\t\t\t// but this does not affect bl_count[max_length]\n\t\t\toverflow -= 2;\n\t\t} while (overflow > 0);\n\n\t\tfor (bits = max_length; bits !== 0; bits--) {\n\t\t\tn = s.bl_count[bits];\n\t\t\twhile (n !== 0) {\n\t\t\t\tm = s.heap[--h];\n\t\t\t\tif (m > that.max_code)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (tree[m * 2 + 1] != bits) {\n\t\t\t\t\ts.opt_len += (bits - tree[m * 2 + 1]) * tree[m * 2];\n\t\t\t\t\ttree[m * 2 + 1] = bits;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Reverse the first len bits of a code, using straightforward code (a\n\t// faster\n\t// method would use a table)\n\t// IN assertion: 1 <= len <= 15\n\tfunction bi_reverse(code, // the value to invert\n\t\tlen // its bit length\n\t) {\n\t\tlet res = 0;\n\t\tdo {\n\t\t\tres |= code & 1;\n\t\t\tcode >>>= 1;\n\t\t\tres <<= 1;\n\t\t} while (--len > 0);\n\t\treturn res >>> 1;\n\t}\n\n\t// Generate the codes for a given tree and bit counts (which need not be\n\t// optimal).\n\t// IN assertion: the array bl_count contains the bit length statistics for\n\t// the given tree and the field len is set for all tree elements.\n\t// OUT assertion: the field code is set for all tree elements of non\n\t// zero code length.\n\tfunction gen_codes(tree, // the tree to decorate\n\t\tmax_code, // largest code with non zero frequency\n\t\tbl_count // number of codes at each bit length\n\t) {\n\t\tconst next_code = []; // next code value for each\n\t\t// bit length\n\t\tlet code = 0; // running code value\n\t\tlet bits; // bit index\n\t\tlet n; // code index\n\t\tlet len;\n\n\t\t// The distribution counts are first used to generate the code values\n\t\t// without bit reversal.\n\t\tfor (bits = 1; bits <= MAX_BITS; bits++) {\n\t\t\tnext_code[bits] = code = ((code + bl_count[bits - 1]) << 1);\n\t\t}\n\n\t\t// Check that the bit counts in bl_count are consistent. The last code\n\t\t// must be all ones.\n\t\t// Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n\t\t// \"inconsistent bit counts\");\n\t\t// Tracev((stderr,\"gen_codes: max_code %d \", max_code));\n\n\t\tfor (n = 0; n <= max_code; n++) {\n\t\t\tlen = tree[n * 2 + 1];\n\t\t\tif (len === 0)\n\t\t\t\tcontinue;\n\t\t\t// Now reverse the bits\n\t\t\ttree[n * 2] = bi_reverse(next_code[len]++, len);\n\t\t}\n\t}\n\n\t// Construct one Huffman tree and assigns the code bit strings and lengths.\n\t// Update the total bit length for the current block.\n\t// IN assertion: the field freq is set for all tree elements.\n\t// OUT assertions: the fields len and code are set to the optimal bit length\n\t// and corresponding code. The length opt_len is updated; static_len is\n\t// also updated if stree is not null. The field max_code is set.\n\tthat.build_tree = function (s) {\n\t\tconst tree = that.dyn_tree;\n\t\tconst stree = that.stat_desc.static_tree;\n\t\tconst elems = that.stat_desc.elems;\n\t\tlet n, m; // iterate over heap elements\n\t\tlet max_code = -1; // largest code with non zero frequency\n\t\tlet node; // new node being created\n\n\t\t// Construct the initial heap, with least frequent element in\n\t\t// heap[1]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n\t\t// heap[0] is not used.\n\t\ts.heap_len = 0;\n\t\ts.heap_max = HEAP_SIZE;\n\n\t\tfor (n = 0; n < elems; n++) {\n\t\t\tif (tree[n * 2] !== 0) {\n\t\t\t\ts.heap[++s.heap_len] = max_code = n;\n\t\t\t\ts.depth[n] = 0;\n\t\t\t} else {\n\t\t\t\ttree[n * 2 + 1] = 0;\n\t\t\t}\n\t\t}\n\n\t\t// The pkzip format requires that at least one distance code exists,\n\t\t// and that at least one bit should be sent even if there is only one\n\t\t// possible code. So to avoid special checks later on we force at least\n\t\t// two codes of non zero frequency.\n\t\twhile (s.heap_len < 2) {\n\t\t\tnode = s.heap[++s.heap_len] = max_code < 2 ? ++max_code : 0;\n\t\t\ttree[node * 2] = 1;\n\t\t\ts.depth[node] = 0;\n\t\t\ts.opt_len--;\n\t\t\tif (stree)\n\t\t\t\ts.static_len -= stree[node * 2 + 1];\n\t\t\t// node is 0 or 1 so it does not have extra bits\n\t\t}\n\t\tthat.max_code = max_code;\n\n\t\t// The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n\t\t// establish sub-heaps of increasing lengths:\n\n\t\tfor (n = Math.floor(s.heap_len / 2); n >= 1; n--)\n\t\t\ts.pqdownheap(tree, n);\n\n\t\t// Construct the Huffman tree by repeatedly combining the least two\n\t\t// frequent nodes.\n\n\t\tnode = elems; // next internal node of the tree\n\t\tdo {\n\t\t\t// n = node of least frequency\n\t\t\tn = s.heap[1];\n\t\t\ts.heap[1] = s.heap[s.heap_len--];\n\t\t\ts.pqdownheap(tree, 1);\n\t\t\tm = s.heap[1]; // m = node of next least frequency\n\n\t\t\ts.heap[--s.heap_max] = n; // keep the nodes sorted by frequency\n\t\t\ts.heap[--s.heap_max] = m;\n\n\t\t\t// Create a new node father of n and m\n\t\t\ttree[node * 2] = (tree[n * 2] + tree[m * 2]);\n\t\t\ts.depth[node] = Math.max(s.depth[n], s.depth[m]) + 1;\n\t\t\ttree[n * 2 + 1] = tree[m * 2 + 1] = node;\n\n\t\t\t// and insert the new node in the heap\n\t\t\ts.heap[1] = node++;\n\t\t\ts.pqdownheap(tree, 1);\n\t\t} while (s.heap_len >= 2);\n\n\t\ts.heap[--s.heap_max] = s.heap[1];\n\n\t\t// At this point, the fields freq and dad are set. We can now\n\t\t// generate the bit lengths.\n\n\t\tgen_bitlen(s);\n\n\t\t// The field len is now set, we can generate the bit codes\n\t\tgen_codes(tree, that.max_code, s.bl_count);\n\t};\n\n}\n\nTree._length_code = [0, 1, 2, 3, 4, 5, 6, 7].concat(...extractArray([\n\t[2, 8], [2, 9], [2, 10], [2, 11], [4, 12], [4, 13], [4, 14], [4, 15], [8, 16], [8, 17], [8, 18], [8, 19],\n\t[16, 20], [16, 21], [16, 22], [16, 23], [32, 24], [32, 25], [32, 26], [31, 27], [1, 28]]));\n\nTree.base_length = [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, 28, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 0];\n\nTree.base_dist = [0, 1, 2, 3, 4, 6, 8, 12, 16, 24, 32, 48, 64, 96, 128, 192, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 6144, 8192, 12288, 16384,\n\t24576];\n\n// Mapping from a distance to a distance code. dist is the distance - 1 and\n// must not have side effects. _dist_code[256] and _dist_code[257] are never\n// used.\nTree.d_code = function (dist) {\n\treturn ((dist) < 256 ? _dist_code[dist] : _dist_code[256 + ((dist) >>> 7)]);\n};\n\n// extra bits for each length code\nTree.extra_lbits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\n\n// extra bits for each distance code\nTree.extra_dbits = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\n\n// extra bits for each bit length code\nTree.extra_blbits = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7];\n\nTree.bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n// StaticTree\n\nfunction StaticTree(static_tree, extra_bits, extra_base, elems, max_length) {\n\tconst that = this;\n\tthat.static_tree = static_tree;\n\tthat.extra_bits = extra_bits;\n\tthat.extra_base = extra_base;\n\tthat.elems = elems;\n\tthat.max_length = max_length;\n}\n\nconst static_ltree2_first_part = [12, 140, 76, 204, 44, 172, 108, 236, 28, 156, 92, 220, 60, 188, 124, 252, 2, 130, 66, 194, 34, 162, 98, 226, 18, 146, 82,\n\t210, 50, 178, 114, 242, 10, 138, 74, 202, 42, 170, 106, 234, 26, 154, 90, 218, 58, 186, 122, 250, 6, 134, 70, 198, 38, 166, 102, 230, 22, 150, 86,\n\t214, 54, 182, 118, 246, 14, 142, 78, 206, 46, 174, 110, 238, 30, 158, 94, 222, 62, 190, 126, 254, 1, 129, 65, 193, 33, 161, 97, 225, 17, 145, 81,\n\t209, 49, 177, 113, 241, 9, 137, 73, 201, 41, 169, 105, 233, 25, 153, 89, 217, 57, 185, 121, 249, 5, 133, 69, 197, 37, 165, 101, 229, 21, 149, 85,\n\t213, 53, 181, 117, 245, 13, 141, 77, 205, 45, 173, 109, 237, 29, 157, 93, 221, 61, 189, 125, 253, 19, 275, 147, 403, 83, 339, 211, 467, 51, 307,\n\t179, 435, 115, 371, 243, 499, 11, 267, 139, 395, 75, 331, 203, 459, 43, 299, 171, 427, 107, 363, 235, 491, 27, 283, 155, 411, 91, 347, 219, 475,\n\t59, 315, 187, 443, 123, 379, 251, 507, 7, 263, 135, 391, 71, 327, 199, 455, 39, 295, 167, 423, 103, 359, 231, 487, 23, 279, 151, 407, 87, 343, 215,\n\t471, 55, 311, 183, 439, 119, 375, 247, 503, 15, 271, 143, 399, 79, 335, 207, 463, 47, 303, 175, 431, 111, 367, 239, 495, 31, 287, 159, 415, 95,\n\t351, 223, 479, 63, 319, 191, 447, 127, 383, 255, 511, 0, 64, 32, 96, 16, 80, 48, 112, 8, 72, 40, 104, 24, 88, 56, 120, 4, 68, 36, 100, 20, 84, 52,\n\t116, 3, 131, 67, 195, 35, 163, 99, 227];\nconst static_ltree2_second_part = extractArray([[144, 8], [112, 9], [24, 7], [8, 8]]);\nStaticTree.static_ltree = flatArray(static_ltree2_first_part.map((value, index) => [value, static_ltree2_second_part[index]]));\n\nconst static_dtree_first_part = [0, 16, 8, 24, 4, 20, 12, 28, 2, 18, 10, 26, 6, 22, 14, 30, 1, 17, 9, 25, 5, 21, 13, 29, 3, 19, 11, 27, 7, 23];\nconst static_dtree_second_part = extractArray([[30, 5]]);\nStaticTree.static_dtree = flatArray(static_dtree_first_part.map((value, index) => [value, static_dtree_second_part[index]]));\n\nStaticTree.static_l_desc = new StaticTree(StaticTree.static_ltree, Tree.extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n\nStaticTree.static_d_desc = new StaticTree(StaticTree.static_dtree, Tree.extra_dbits, 0, D_CODES, MAX_BITS);\n\nStaticTree.static_bl_desc = new StaticTree(null, Tree.extra_blbits, 0, BL_CODES, MAX_BL_BITS);\n\n// Deflate\n\nconst MAX_MEM_LEVEL = 9;\nconst DEF_MEM_LEVEL = 8;\n\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\tconst that = this;\n\tthat.good_length = good_length;\n\tthat.max_lazy = max_lazy;\n\tthat.nice_length = nice_length;\n\tthat.max_chain = max_chain;\n\tthat.func = func;\n}\n\nconst STORED = 0;\nconst FAST = 1;\nconst SLOW = 2;\nconst config_table = [\n\tnew Config(0, 0, 0, 0, STORED),\n\tnew Config(4, 4, 8, 4, FAST),\n\tnew Config(4, 5, 16, 8, FAST),\n\tnew Config(4, 6, 32, 32, FAST),\n\tnew Config(4, 4, 16, 16, SLOW),\n\tnew Config(8, 16, 32, 32, SLOW),\n\tnew Config(8, 16, 128, 128, SLOW),\n\tnew Config(8, 32, 128, 256, SLOW),\n\tnew Config(32, 128, 258, 1024, SLOW),\n\tnew Config(32, 258, 258, 4096, SLOW)\n];\n\nconst z_errmsg = [\"need dictionary\", // Z_NEED_DICT\n\t// 2\n\t\"stream end\", // Z_STREAM_END 1\n\t\"\", // Z_OK 0\n\t\"\", // Z_ERRNO (-1)\n\t\"stream error\", // Z_STREAM_ERROR (-2)\n\t\"data error\", // Z_DATA_ERROR (-3)\n\t\"\", // Z_MEM_ERROR (-4)\n\t\"buffer error\", // Z_BUF_ERROR (-5)\n\t\"\",// Z_VERSION_ERROR (-6)\n\t\"\"];\n\n// block not completed, need more input or more output\nconst NeedMore = 0;\n\n// block flush performed\nconst BlockDone = 1;\n\n// finish started, need only more output at next deflate\nconst FinishStarted = 2;\n\n// finish done, accept no more input or output\nconst FinishDone = 3;\n\n// preset dictionary flag in zlib header\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\n// The deflate compression method\nconst Z_DEFLATED = 8;\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES = 2;\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nfunction smaller(tree, n, m, depth) {\n\tconst tn2 = tree[n * 2];\n\tconst tm2 = tree[m * 2];\n\treturn (tn2 < tm2 || (tn2 == tm2 && depth[n] <= depth[m]));\n}\n\nfunction Deflate() {\n\n\tconst that = this;\n\tlet strm; // pointer back to this zlib stream\n\tlet status; // as the name implies\n\t// pending_buf; // output still pending\n\tlet pending_buf_size; // size of pending_buf\n\t// pending_out; // next pending byte to output to the stream\n\t// pending; // nb of bytes in the pending buffer\n\n\t// dist_buf; // buffer for distances\n\t// lc_buf; // buffer for literals or lengths\n\t// To simplify the code, dist_buf and lc_buf have the same number of elements.\n\t// To use different lengths, an extra flag array would be necessary.\n\n\tlet last_flush; // value of flush param for previous deflate call\n\n\tlet w_size; // LZ77 win size (32K by default)\n\tlet w_bits; // log2(w_size) (8..16)\n\tlet w_mask; // w_size - 1\n\n\tlet win;\n\t// Sliding win. Input bytes are read into the second half of the win,\n\t// and move to the first half later to keep a dictionary of at least wSize\n\t// bytes. With this organization, matches are limited to a distance of\n\t// wSize-MAX_MATCH bytes, but this ensures that IO is always\n\t// performed with a length multiple of the block size. Also, it limits\n\t// the win size to 64K, which is quite useful on MSDOS.\n\t// To do: use the user input buffer as sliding win.\n\n\tlet window_size;\n\t// Actual size of win: 2*wSize, except when the user input buffer\n\t// is directly used as sliding win.\n\n\tlet prev;\n\t// Link to older string with same hash index. To limit the size of this\n\t// array to 64K, this link is maintained only for the last 32K strings.\n\t// An index in this array is thus a win index modulo 32K.\n\n\tlet head; // Heads of the hash chains or NIL.\n\n\tlet ins_h; // hash index of string to be inserted\n\tlet hash_size; // number of elements in hash table\n\tlet hash_bits; // log2(hash_size)\n\tlet hash_mask; // hash_size-1\n\n\t// Number of bits by which ins_h must be shifted at each input\n\t// step. It must be such that after MIN_MATCH steps, the oldest\n\t// byte no longer takes part in the hash key, that is:\n\t// hash_shift * MIN_MATCH >= hash_bits\n\tlet hash_shift;\n\n\t// Window position at the beginning of the current output block. Gets\n\t// negative when the win is moved backwards.\n\n\tlet block_start;\n\n\tlet match_length; // length of best match\n\tlet prev_match; // previous match\n\tlet match_available; // set if previous match exists\n\tlet strstart; // start of string to insert\n\tlet match_start; // start of matching string\n\tlet lookahead; // number of valid bytes ahead in win\n\n\t// Length of the best match at previous step. Matches not greater than this\n\t// are discarded. This is used in the lazy match evaluation.\n\tlet prev_length;\n\n\t// To speed up deflation, hash chains are never searched beyond this\n\t// length. A higher limit improves compression ratio but degrades the speed.\n\tlet max_chain_length;\n\n\t// Attempt to find a better match only when the current match is strictly\n\t// smaller than this value. This mechanism is used only for compression\n\t// levels >= 4.\n\tlet max_lazy_match;\n\n\t// Insert new strings in the hash table only if the match length is not\n\t// greater than this length. This saves time but degrades compression.\n\t// max_insert_length is used only for compression levels <= 3.\n\n\tlet level; // compression level (1..9)\n\tlet strategy; // favor or force Huffman coding\n\n\t// Use a faster search when the previous match is longer than this\n\tlet good_match;\n\n\t// Stop searching when current match exceeds this\n\tlet nice_match;\n\n\tlet dyn_ltree; // literal and length tree\n\tlet dyn_dtree; // distance tree\n\tlet bl_tree; // Huffman tree for bit lengths\n\n\tconst l_desc = new Tree(); // desc for literal tree\n\tconst d_desc = new Tree(); // desc for distance tree\n\tconst bl_desc = new Tree(); // desc for bit length tree\n\n\t// that.heap_len; // number of elements in the heap\n\t// that.heap_max; // element of largest frequency\n\t// The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n\t// The same heap array is used to build all trees.\n\n\t// Depth of each subtree used as tie breaker for trees of equal frequency\n\tthat.depth = [];\n\n\t// Size of match buffer for literals/lengths. There are 4 reasons for\n\t// limiting lit_bufsize to 64K:\n\t// - frequencies can be kept in 16 bit counters\n\t// - if compression is not successful for the first block, all input\n\t// data is still in the win so we can still emit a stored block even\n\t// when input comes from standard input. (This can also be done for\n\t// all blocks if lit_bufsize is not greater than 32K.)\n\t// - if compression is not successful for a file smaller than 64K, we can\n\t// even emit a stored file instead of a stored block (saving 5 bytes).\n\t// This is applicable only for zip (not gzip or zlib).\n\t// - creating new Huffman trees less frequently may not provide fast\n\t// adaptation to changes in the input data statistics. (Take for\n\t// example a binary file with poorly compressible code followed by\n\t// a highly compressible string table.) Smaller buffer sizes give\n\t// fast adaptation but have of course the overhead of transmitting\n\t// trees more frequently.\n\t// - I can't count above 4\n\tlet lit_bufsize;\n\n\tlet last_lit; // running index in dist_buf and lc_buf\n\n\t// that.opt_len; // bit length of current block with optimal trees\n\t// that.static_len; // bit length of current block with static trees\n\tlet matches; // number of string matches in current block\n\tlet last_eob_len; // bit length of EOB code for last block\n\n\t// Output buffer. bits are inserted starting at the bottom (least\n\t// significant bits).\n\tlet bi_buf;\n\n\t// Number of valid bits in bi_buf. All bits above the last valid bit\n\t// are always zero.\n\tlet bi_valid;\n\n\t// number of codes at each bit length for an optimal tree\n\tthat.bl_count = [];\n\n\t// heap used to build the Huffman trees\n\tthat.heap = [];\n\n\tdyn_ltree = [];\n\tdyn_dtree = [];\n\tbl_tree = [];\n\n\tfunction lm_init() {\n\t\twindow_size = 2 * w_size;\n\n\t\thead[hash_size - 1] = 0;\n\t\tfor (let i = 0; i < hash_size - 1; i++) {\n\t\t\thead[i] = 0;\n\t\t}\n\n\t\t// Set the default configuration parameters:\n\t\tmax_lazy_match = config_table[level].max_lazy;\n\t\tgood_match = config_table[level].good_length;\n\t\tnice_match = config_table[level].nice_length;\n\t\tmax_chain_length = config_table[level].max_chain;\n\n\t\tstrstart = 0;\n\t\tblock_start = 0;\n\t\tlookahead = 0;\n\t\tmatch_length = prev_length = MIN_MATCH - 1;\n\t\tmatch_available = 0;\n\t\tins_h = 0;\n\t}\n\n\tfunction init_block() {\n\t\tlet i;\n\t\t// Initialize the trees.\n\t\tfor (i = 0; i < L_CODES; i++)\n\t\t\tdyn_ltree[i * 2] = 0;\n\t\tfor (i = 0; i < D_CODES; i++)\n\t\t\tdyn_dtree[i * 2] = 0;\n\t\tfor (i = 0; i < BL_CODES; i++)\n\t\t\tbl_tree[i * 2] = 0;\n\n\t\tdyn_ltree[END_BLOCK * 2] = 1;\n\t\tthat.opt_len = that.static_len = 0;\n\t\tlast_lit = matches = 0;\n\t}\n\n\t// Initialize the tree data structures for a new zlib stream.\n\tfunction tr_init() {\n\n\t\tl_desc.dyn_tree = dyn_ltree;\n\t\tl_desc.stat_desc = StaticTree.static_l_desc;\n\n\t\td_desc.dyn_tree = dyn_dtree;\n\t\td_desc.stat_desc = StaticTree.static_d_desc;\n\n\t\tbl_desc.dyn_tree = bl_tree;\n\t\tbl_desc.stat_desc = StaticTree.static_bl_desc;\n\n\t\tbi_buf = 0;\n\t\tbi_valid = 0;\n\t\tlast_eob_len = 8; // enough lookahead for inflate\n\n\t\t// Initialize the first block of the first file:\n\t\tinit_block();\n\t}\n\n\t// Restore the heap property by moving down the tree starting at node k,\n\t// exchanging a node with the smallest of its two sons if necessary,\n\t// stopping\n\t// when the heap property is re-established (each father smaller than its\n\t// two sons).\n\tthat.pqdownheap = function (tree, // the tree to restore\n\t\tk // node to move down\n\t) {\n\t\tconst heap = that.heap;\n\t\tconst v = heap[k];\n\t\tlet j = k << 1; // left son of k\n\t\twhile (j <= that.heap_len) {\n\t\t\t// Set j to the smallest of the two sons:\n\t\t\tif (j < that.heap_len && smaller(tree, heap[j + 1], heap[j], that.depth)) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\t// Exit if v is smaller than both sons\n\t\t\tif (smaller(tree, v, heap[j], that.depth))\n\t\t\t\tbreak;\n\n\t\t\t// Exchange v with the smallest son\n\t\t\theap[k] = heap[j];\n\t\t\tk = j;\n\t\t\t// And continue down the tree, setting j to the left son of k\n\t\t\tj <<= 1;\n\t\t}\n\t\theap[k] = v;\n\t};\n\n\t// Scan a literal or distance tree to determine the frequencies of the codes\n\t// in the bit length tree.\n\tfunction scan_tree(tree,// the tree to be scanned\n\t\tmax_code // and its largest code of non zero frequency\n\t) {\n\t\tlet prevlen = -1; // last emitted length\n\t\tlet curlen; // length of current code\n\t\tlet nextlen = tree[0 * 2 + 1]; // length of next code\n\t\tlet count = 0; // repeat count of the current code\n\t\tlet max_count = 7; // max repeat count\n\t\tlet min_count = 4; // min repeat count\n\n\t\tif (nextlen === 0) {\n\t\t\tmax_count = 138;\n\t\t\tmin_count = 3;\n\t\t}\n\t\ttree[(max_code + 1) * 2 + 1] = 0xffff; // guard\n\n\t\tfor (let n = 0; n <= max_code; n++) {\n\t\t\tcurlen = nextlen;\n\t\t\tnextlen = tree[(n + 1) * 2 + 1];\n\t\t\tif (++count < max_count && curlen == nextlen) {\n\t\t\t\tcontinue;\n\t\t\t} else if (count < min_count) {\n\t\t\t\tbl_tree[curlen * 2] += count;\n\t\t\t} else if (curlen !== 0) {\n\t\t\t\tif (curlen != prevlen)\n\t\t\t\t\tbl_tree[curlen * 2]++;\n\t\t\t\tbl_tree[REP_3_6 * 2]++;\n\t\t\t} else if (count <= 10) {\n\t\t\t\tbl_tree[REPZ_3_10 * 2]++;\n\t\t\t} else {\n\t\t\t\tbl_tree[REPZ_11_138 * 2]++;\n\t\t\t}\n\t\t\tcount = 0;\n\t\t\tprevlen = curlen;\n\t\t\tif (nextlen === 0) {\n\t\t\t\tmax_count = 138;\n\t\t\t\tmin_count = 3;\n\t\t\t} else if (curlen == nextlen) {\n\t\t\t\tmax_count = 6;\n\t\t\t\tmin_count = 3;\n\t\t\t} else {\n\t\t\t\tmax_count = 7;\n\t\t\t\tmin_count = 4;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Construct the Huffman tree for the bit lengths and return the index in\n\t// bl_order of the last bit length code to send.\n\tfunction build_bl_tree() {\n\t\tlet max_blindex; // index of last bit length code of non zero freq\n\n\t\t// Determine the bit length frequencies for literal and distance trees\n\t\tscan_tree(dyn_ltree, l_desc.max_code);\n\t\tscan_tree(dyn_dtree, d_desc.max_code);\n\n\t\t// Build the bit length tree:\n\t\tbl_desc.build_tree(that);\n\t\t// opt_len now includes the length of the tree representations, except\n\t\t// the lengths of the bit lengths codes and the 5+5+4 bits for the\n\t\t// counts.\n\n\t\t// Determine the number of bit length codes to send. The pkzip format\n\t\t// requires that at least 4 bit length codes be sent. (appnote.txt says\n\t\t// 3 but the actual value used is 4.)\n\t\tfor (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n\t\t\tif (bl_tree[Tree.bl_order[max_blindex] * 2 + 1] !== 0)\n\t\t\t\tbreak;\n\t\t}\n\t\t// Update opt_len to include the bit length tree and counts\n\t\tthat.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n\n\t\treturn max_blindex;\n\t}\n\n\t// Output a byte on the stream.\n\t// IN assertion: there is enough room in pending_buf.\n\tfunction put_byte(p) {\n\t\tthat.pending_buf[that.pending++] = p;\n\t}\n\n\tfunction put_short(w) {\n\t\tput_byte(w & 0xff);\n\t\tput_byte((w >>> 8) & 0xff);\n\t}\n\n\tfunction putShortMSB(b) {\n\t\tput_byte((b >> 8) & 0xff);\n\t\tput_byte((b & 0xff) & 0xff);\n\t}\n\n\tfunction send_bits(value, length) {\n\t\tlet val;\n\t\tconst len = length;\n\t\tif (bi_valid > Buf_size - len) {\n\t\t\tval = value;\n\t\t\t// bi_buf |= (val << bi_valid);\n\t\t\tbi_buf |= ((val << bi_valid) & 0xffff);\n\t\t\tput_short(bi_buf);\n\t\t\tbi_buf = val >>> (Buf_size - bi_valid);\n\t\t\tbi_valid += len - Buf_size;\n\t\t} else {\n\t\t\t// bi_buf |= (value) << bi_valid;\n\t\t\tbi_buf |= (((value) << bi_valid) & 0xffff);\n\t\t\tbi_valid += len;\n\t\t}\n\t}\n\n\tfunction send_code(c, tree) {\n\t\tconst c2 = c * 2;\n\t\tsend_bits(tree[c2] & 0xffff, tree[c2 + 1] & 0xffff);\n\t}\n\n\t// Send a literal or distance tree in compressed form, using the codes in\n\t// bl_tree.\n\tfunction send_tree(tree,// the tree to be sent\n\t\tmax_code // and its largest code of non zero frequency\n\t) {\n\t\tlet n; // iterates over all tree elements\n\t\tlet prevlen = -1; // last emitted length\n\t\tlet curlen; // length of current code\n\t\tlet nextlen = tree[0 * 2 + 1]; // length of next code\n\t\tlet count = 0; // repeat count of the current code\n\t\tlet max_count = 7; // max repeat count\n\t\tlet min_count = 4; // min repeat count\n\n\t\tif (nextlen === 0) {\n\t\t\tmax_count = 138;\n\t\t\tmin_count = 3;\n\t\t}\n\n\t\tfor (n = 0; n <= max_code; n++) {\n\t\t\tcurlen = nextlen;\n\t\t\tnextlen = tree[(n + 1) * 2 + 1];\n\t\t\tif (++count < max_count && curlen == nextlen) {\n\t\t\t\tcontinue;\n\t\t\t} else if (count < min_count) {\n\t\t\t\tdo {\n\t\t\t\t\tsend_code(curlen, bl_tree);\n\t\t\t\t} while (--count !== 0);\n\t\t\t} else if (curlen !== 0) {\n\t\t\t\tif (curlen != prevlen) {\n\t\t\t\t\tsend_code(curlen, bl_tree);\n\t\t\t\t\tcount--;\n\t\t\t\t}\n\t\t\t\tsend_code(REP_3_6, bl_tree);\n\t\t\t\tsend_bits(count - 3, 2);\n\t\t\t} else if (count <= 10) {\n\t\t\t\tsend_code(REPZ_3_10, bl_tree);\n\t\t\t\tsend_bits(count - 3, 3);\n\t\t\t} else {\n\t\t\t\tsend_code(REPZ_11_138, bl_tree);\n\t\t\t\tsend_bits(count - 11, 7);\n\t\t\t}\n\t\t\tcount = 0;\n\t\t\tprevlen = curlen;\n\t\t\tif (nextlen === 0) {\n\t\t\t\tmax_count = 138;\n\t\t\t\tmin_count = 3;\n\t\t\t} else if (curlen == nextlen) {\n\t\t\t\tmax_count = 6;\n\t\t\t\tmin_count = 3;\n\t\t\t} else {\n\t\t\t\tmax_count = 7;\n\t\t\t\tmin_count = 4;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Send the header for a block using dynamic Huffman trees: the counts, the\n\t// lengths of the bit length codes, the literal tree and the distance tree.\n\t// IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n\tfunction send_all_trees(lcodes, dcodes, blcodes) {\n\t\tlet rank; // index in bl_order\n\n\t\tsend_bits(lcodes - 257, 5); // not +255 as stated in appnote.txt\n\t\tsend_bits(dcodes - 1, 5);\n\t\tsend_bits(blcodes - 4, 4); // not -3 as stated in appnote.txt\n\t\tfor (rank = 0; rank < blcodes; rank++) {\n\t\t\tsend_bits(bl_tree[Tree.bl_order[rank] * 2 + 1], 3);\n\t\t}\n\t\tsend_tree(dyn_ltree, lcodes - 1); // literal tree\n\t\tsend_tree(dyn_dtree, dcodes - 1); // distance tree\n\t}\n\n\t// Flush the bit buffer, keeping at most 7 bits in it.\n\tfunction bi_flush() {\n\t\tif (bi_valid == 16) {\n\t\t\tput_short(bi_buf);\n\t\t\tbi_buf = 0;\n\t\t\tbi_valid = 0;\n\t\t} else if (bi_valid >= 8) {\n\t\t\tput_byte(bi_buf & 0xff);\n\t\t\tbi_buf >>>= 8;\n\t\t\tbi_valid -= 8;\n\t\t}\n\t}\n\n\t// Send one empty static block to give enough lookahead for inflate.\n\t// This takes 10 bits, of which 7 may remain in the bit buffer.\n\t// The current inflate code requires 9 bits of lookahead. If the\n\t// last two codes for the previous block (real code plus EOB) were coded\n\t// on 5 bits or less, inflate may have only 5+3 bits of lookahead to decode\n\t// the last real code. In this case we send two empty static blocks instead\n\t// of one. (There are no problems if the previous block is stored or fixed.)\n\t// To simplify the code, we assume the worst case of last real code encoded\n\t// on one bit only.\n\tfunction _tr_align() {\n\t\tsend_bits(STATIC_TREES << 1, 3);\n\t\tsend_code(END_BLOCK, StaticTree.static_ltree);\n\n\t\tbi_flush();\n\n\t\t// Of the 10 bits for the empty block, we have already sent\n\t\t// (10 - bi_valid) bits. The lookahead for the last real code (before\n\t\t// the EOB of the previous block) was thus at least one plus the length\n\t\t// of the EOB plus what we have just sent of the empty static block.\n\t\tif (1 + last_eob_len + 10 - bi_valid < 9) {\n\t\t\tsend_bits(STATIC_TREES << 1, 3);\n\t\t\tsend_code(END_BLOCK, StaticTree.static_ltree);\n\t\t\tbi_flush();\n\t\t}\n\t\tlast_eob_len = 7;\n\t}\n\n\t// Save the match info and tally the frequency counts. Return true if\n\t// the current block must be flushed.\n\tfunction _tr_tally(dist, // distance of matched string\n\t\tlc // match length-MIN_MATCH or unmatched char (if dist==0)\n\t) {\n\t\tlet out_length, in_length, dcode;\n\t\tthat.dist_buf[last_lit] = dist;\n\t\tthat.lc_buf[last_lit] = lc & 0xff;\n\t\tlast_lit++;\n\n\t\tif (dist === 0) {\n\t\t\t// lc is the unmatched char\n\t\t\tdyn_ltree[lc * 2]++;\n\t\t} else {\n\t\t\tmatches++;\n\t\t\t// Here, lc is the match length - MIN_MATCH\n\t\t\tdist--; // dist = match distance - 1\n\t\t\tdyn_ltree[(Tree._length_code[lc] + LITERALS + 1) * 2]++;\n\t\t\tdyn_dtree[Tree.d_code(dist) * 2]++;\n\t\t}\n\n\t\tif ((last_lit & 0x1fff) === 0 && level > 2) {\n\t\t\t// Compute an upper bound for the compressed length\n\t\t\tout_length = last_lit * 8;\n\t\t\tin_length = strstart - block_start;\n\t\t\tfor (dcode = 0; dcode < D_CODES; dcode++) {\n\t\t\t\tout_length += dyn_dtree[dcode * 2] * (5 + Tree.extra_dbits[dcode]);\n\t\t\t}\n\t\t\tout_length >>>= 3;\n\t\t\tif ((matches < Math.floor(last_lit / 2)) && out_length < Math.floor(in_length / 2))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn (last_lit == lit_bufsize - 1);\n\t\t// We avoid equality with lit_bufsize because of wraparound at 64K\n\t\t// on 16 bit machines and because stored blocks are restricted to\n\t\t// 64K-1 bytes.\n\t}\n\n\t// Send the block data compressed using the given Huffman trees\n\tfunction compress_block(ltree, dtree) {\n\t\tlet dist; // distance of matched string\n\t\tlet lc; // match length or unmatched char (if dist === 0)\n\t\tlet lx = 0; // running index in dist_buf and lc_buf\n\t\tlet code; // the code to send\n\t\tlet extra; // number of extra bits to send\n\n\t\tif (last_lit !== 0) {\n\t\t\tdo {\n\t\t\t\tdist = that.dist_buf[lx];\n\t\t\t\tlc = that.lc_buf[lx];\n\t\t\t\tlx++;\n\n\t\t\t\tif (dist === 0) {\n\t\t\t\t\tsend_code(lc, ltree); // send a literal byte\n\t\t\t\t} else {\n\t\t\t\t\t// Here, lc is the match length - MIN_MATCH\n\t\t\t\t\tcode = Tree._length_code[lc];\n\n\t\t\t\t\tsend_code(code + LITERALS + 1, ltree); // send the length\n\t\t\t\t\t// code\n\t\t\t\t\textra = Tree.extra_lbits[code];\n\t\t\t\t\tif (extra !== 0) {\n\t\t\t\t\t\tlc -= Tree.base_length[code];\n\t\t\t\t\t\tsend_bits(lc, extra); // send the extra length bits\n\t\t\t\t\t}\n\t\t\t\t\tdist--; // dist is now the match distance - 1\n\t\t\t\t\tcode = Tree.d_code(dist);\n\n\t\t\t\t\tsend_code(code, dtree); // send the distance code\n\t\t\t\t\textra = Tree.extra_dbits[code];\n\t\t\t\t\tif (extra !== 0) {\n\t\t\t\t\t\tdist -= Tree.base_dist[code];\n\t\t\t\t\t\tsend_bits(dist, extra); // send the extra distance bits\n\t\t\t\t\t}\n\t\t\t\t} // literal or match pair ?\n\t\t\t} while (lx < last_lit);\n\t\t}\n\n\t\tsend_code(END_BLOCK, ltree);\n\t\tlast_eob_len = ltree[END_BLOCK * 2 + 1];\n\t}\n\n\t// Flush the bit buffer and align the output on a byte boundary\n\tfunction bi_windup() {\n\t\tif (bi_valid > 8) {\n\t\t\tput_short(bi_buf);\n\t\t} else if (bi_valid > 0) {\n\t\t\tput_byte(bi_buf & 0xff);\n\t\t}\n\t\tbi_buf = 0;\n\t\tbi_valid = 0;\n\t}\n\n\t// Copy a stored block, storing first the length and its\n\t// one's complement if requested.\n\tfunction copy_block(buf, // the input data\n\t\tlen, // its length\n\t\theader // true if block header must be written\n\t) {\n\t\tbi_windup(); // align on byte boundary\n\t\tlast_eob_len = 8; // enough lookahead for inflate\n\n\t\tif (header) {\n\t\t\tput_short(len);\n\t\t\tput_short(~len);\n\t\t}\n\n\t\tthat.pending_buf.set(win.subarray(buf, buf + len), that.pending);\n\t\tthat.pending += len;\n\t}\n\n\t// Send a stored block\n\tfunction _tr_stored_block(buf, // input block\n\t\tstored_len, // length of input block\n\t\teof // true if this is the last block for a file\n\t) {\n\t\tsend_bits((STORED_BLOCK << 1) + (eof ? 1 : 0), 3); // send block type\n\t\tcopy_block(buf, stored_len, true); // with header\n\t}\n\n\t// Determine the best encoding for the current block: dynamic trees, static\n\t// trees or store, and output the encoded block to the zip file.\n\tfunction _tr_flush_block(buf, // input block, or NULL if too old\n\t\tstored_len, // length of input block\n\t\teof // true if this is the last block for a file\n\t) {\n\t\tlet opt_lenb, static_lenb;// opt_len and static_len in bytes\n\t\tlet max_blindex = 0; // index of last bit length code of non zero freq\n\n\t\t// Build the Huffman trees unless a stored block is forced\n\t\tif (level > 0) {\n\t\t\t// Construct the literal and distance trees\n\t\t\tl_desc.build_tree(that);\n\n\t\t\td_desc.build_tree(that);\n\n\t\t\t// At this point, opt_len and static_len are the total bit lengths\n\t\t\t// of\n\t\t\t// the compressed block data, excluding the tree representations.\n\n\t\t\t// Build the bit length tree for the above two trees, and get the\n\t\t\t// index\n\t\t\t// in bl_order of the last bit length code to send.\n\t\t\tmax_blindex = build_bl_tree();\n\n\t\t\t// Determine the best encoding. Compute first the block length in\n\t\t\t// bytes\n\t\t\topt_lenb = (that.opt_len + 3 + 7) >>> 3;\n\t\t\tstatic_lenb = (that.static_len + 3 + 7) >>> 3;\n\n\t\t\tif (static_lenb <= opt_lenb)\n\t\t\t\topt_lenb = static_lenb;\n\t\t} else {\n\t\t\topt_lenb = static_lenb = stored_len + 5; // force a stored block\n\t\t}\n\n\t\tif ((stored_len + 4 <= opt_lenb) && buf != -1) {\n\t\t\t// 4: two words for the lengths\n\t\t\t// The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n\t\t\t// Otherwise we can't have processed more than WSIZE input bytes\n\t\t\t// since\n\t\t\t// the last block flush, because compression would have been\n\t\t\t// successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n\t\t\t// transform a block into a stored block.\n\t\t\t_tr_stored_block(buf, stored_len, eof);\n\t\t} else if (static_lenb == opt_lenb) {\n\t\t\tsend_bits((STATIC_TREES << 1) + (eof ? 1 : 0), 3);\n\t\t\tcompress_block(StaticTree.static_ltree, StaticTree.static_dtree);\n\t\t} else {\n\t\t\tsend_bits((DYN_TREES << 1) + (eof ? 1 : 0), 3);\n\t\t\tsend_all_trees(l_desc.max_code + 1, d_desc.max_code + 1, max_blindex + 1);\n\t\t\tcompress_block(dyn_ltree, dyn_dtree);\n\t\t}\n\n\t\t// The above check is made mod 2^32, for files larger than 512 MB\n\t\t// and uLong implemented on 32 bits.\n\n\t\tinit_block();\n\n\t\tif (eof) {\n\t\t\tbi_windup();\n\t\t}\n\t}\n\n\tfunction flush_block_only(eof) {\n\t\t_tr_flush_block(block_start >= 0 ? block_start : -1, strstart - block_start, eof);\n\t\tblock_start = strstart;\n\t\tstrm.flush_pending();\n\t}\n\n\t// Fill the win when the lookahead becomes insufficient.\n\t// Updates strstart and lookahead.\n\t//\n\t// IN assertion: lookahead < MIN_LOOKAHEAD\n\t// OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n\t// At least one byte has been read, or avail_in === 0; reads are\n\t// performed for at least two bytes (required for the zip translate_eol\n\t// option -- not supported here).\n\tfunction fill_window() {\n\t\tlet n, m;\n\t\tlet p;\n\t\tlet more; // Amount of free space at the end of the win.\n\n\t\tdo {\n\t\t\tmore = (window_size - lookahead - strstart);\n\n\t\t\t// Deal with !@#$% 64K limit:\n\t\t\tif (more === 0 && strstart === 0 && lookahead === 0) {\n\t\t\t\tmore = w_size;\n\t\t\t} else if (more == -1) {\n\t\t\t\t// Very unlikely, but possible on 16 bit machine if strstart ==\n\t\t\t\t// 0\n\t\t\t\t// and lookahead == 1 (input done one byte at time)\n\t\t\t\tmore--;\n\n\t\t\t\t// If the win is almost full and there is insufficient\n\t\t\t\t// lookahead,\n\t\t\t\t// move the upper half to the lower one to make room in the\n\t\t\t\t// upper half.\n\t\t\t} else if (strstart >= w_size + w_size - MIN_LOOKAHEAD) {\n\t\t\t\twin.set(win.subarray(w_size, w_size + w_size), 0);\n\n\t\t\t\tmatch_start -= w_size;\n\t\t\t\tstrstart -= w_size; // we now have strstart >= MAX_DIST\n\t\t\t\tblock_start -= w_size;\n\n\t\t\t\t// Slide the hash table (could be avoided with 32 bit values\n\t\t\t\t// at the expense of memory usage). We slide even when level ==\n\t\t\t\t// 0\n\t\t\t\t// to keep the hash table consistent if we switch back to level\n\t\t\t\t// > 0\n\t\t\t\t// later. (Using level 0 permanently is not an optimal usage of\n\t\t\t\t// zlib, so we don't care about this pathological case.)\n\n\t\t\t\tn = hash_size;\n\t\t\t\tp = n;\n\t\t\t\tdo {\n\t\t\t\t\tm = (head[--p] & 0xffff);\n\t\t\t\t\thead[p] = (m >= w_size ? m - w_size : 0);\n\t\t\t\t} while (--n !== 0);\n\n\t\t\t\tn = w_size;\n\t\t\t\tp = n;\n\t\t\t\tdo {\n\t\t\t\t\tm = (prev[--p] & 0xffff);\n\t\t\t\t\tprev[p] = (m >= w_size ? m - w_size : 0);\n\t\t\t\t\t// If n is not on any hash chain, prev[n] is garbage but\n\t\t\t\t\t// its value will never be used.\n\t\t\t\t} while (--n !== 0);\n\t\t\t\tmore += w_size;\n\t\t\t}\n\n\t\t\tif (strm.avail_in === 0)\n\t\t\t\treturn;\n\n\t\t\t// If there was no sliding:\n\t\t\t// strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n\t\t\t// more == window_size - lookahead - strstart\n\t\t\t// => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n\t\t\t// => more >= window_size - 2*WSIZE + 2\n\t\t\t// In the BIG_MEM or MMAP case (not yet supported),\n\t\t\t// window_size == input_size + MIN_LOOKAHEAD &&\n\t\t\t// strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n\t\t\t// Otherwise, window_size == 2*WSIZE so more >= 2.\n\t\t\t// If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n\n\t\t\tn = strm.read_buf(win, strstart + lookahead, more);\n\t\t\tlookahead += n;\n\n\t\t\t// Initialize the hash value now that we have some input:\n\t\t\tif (lookahead >= MIN_MATCH) {\n\t\t\t\tins_h = win[strstart] & 0xff;\n\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[strstart + 1] & 0xff)) & hash_mask;\n\t\t\t}\n\t\t\t// If the whole input has less than MIN_MATCH bytes, ins_h is\n\t\t\t// garbage,\n\t\t\t// but this is not important since only literal bytes will be\n\t\t\t// emitted.\n\t\t} while (lookahead < MIN_LOOKAHEAD && strm.avail_in !== 0);\n\t}\n\n\t// Copy without compression as much as possible from the input stream,\n\t// return\n\t// the current block state.\n\t// This function does not insert new strings in the dictionary since\n\t// uncompressible data is probably not useful. This function is used\n\t// only for the level=0 compression option.\n\t// NOTE: this function should be optimized to avoid extra copying from\n\t// win to pending_buf.\n\tfunction deflate_stored(flush) {\n\t\t// Stored blocks are limited to 0xffff bytes, pending_buf is limited\n\t\t// to pending_buf_size, and each stored block has a 5 byte header:\n\n\t\tlet max_block_size = 0xffff;\n\t\tlet max_start;\n\n\t\tif (max_block_size > pending_buf_size - 5) {\n\t\t\tmax_block_size = pending_buf_size - 5;\n\t\t}\n\n\t\t// Copy as much as possible from input to output:\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\t// Fill the win as much as possible:\n\t\t\tif (lookahead <= 1) {\n\t\t\t\tfill_window();\n\t\t\t\tif (lookahead === 0 && flush == Z_NO_FLUSH)\n\t\t\t\t\treturn NeedMore;\n\t\t\t\tif (lookahead === 0)\n\t\t\t\t\tbreak; // flush the current block\n\t\t\t}\n\n\t\t\tstrstart += lookahead;\n\t\t\tlookahead = 0;\n\n\t\t\t// Emit a stored block if pending_buf will be full:\n\t\t\tmax_start = block_start + max_block_size;\n\t\t\tif (strstart === 0 || strstart >= max_start) {\n\t\t\t\t// strstart === 0 is possible when wraparound on 16-bit machine\n\t\t\t\tlookahead = (strstart - max_start);\n\t\t\t\tstrstart = max_start;\n\n\t\t\t\tflush_block_only(false);\n\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\treturn NeedMore;\n\n\t\t\t}\n\n\t\t\t// Flush if we may have to slide, otherwise block_start may become\n\t\t\t// negative and the data will be gone:\n\t\t\tif (strstart - block_start >= w_size - MIN_LOOKAHEAD) {\n\t\t\t\tflush_block_only(false);\n\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\treturn NeedMore;\n\t\t\t}\n\t\t}\n\n\t\tflush_block_only(flush == Z_FINISH);\n\t\tif (strm.avail_out === 0)\n\t\t\treturn (flush == Z_FINISH) ? FinishStarted : NeedMore;\n\n\t\treturn flush == Z_FINISH ? FinishDone : BlockDone;\n\t}\n\n\tfunction longest_match(cur_match) {\n\t\tlet chain_length = max_chain_length; // max hash chain length\n\t\tlet scan = strstart; // current string\n\t\tlet match; // matched string\n\t\tlet len; // length of current match\n\t\tlet best_len = prev_length; // best match length so far\n\t\tconst limit = strstart > (w_size - MIN_LOOKAHEAD) ? strstart - (w_size - MIN_LOOKAHEAD) : 0;\n\t\tlet _nice_match = nice_match;\n\n\t\t// Stop when cur_match becomes <= limit. To simplify the code,\n\t\t// we prevent matches with the string of win index 0.\n\n\t\tconst wmask = w_mask;\n\n\t\tconst strend = strstart + MAX_MATCH;\n\t\tlet scan_end1 = win[scan + best_len - 1];\n\t\tlet scan_end = win[scan + best_len];\n\n\t\t// The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of\n\t\t// 16.\n\t\t// It is easy to get rid of this optimization if necessary.\n\n\t\t// Do not waste too much time if we already have a good match:\n\t\tif (prev_length >= good_match) {\n\t\t\tchain_length >>= 2;\n\t\t}\n\n\t\t// Do not look for matches beyond the end of the input. This is\n\t\t// necessary\n\t\t// to make deflate deterministic.\n\t\tif (_nice_match > lookahead)\n\t\t\t_nice_match = lookahead;\n\n\t\tdo {\n\t\t\tmatch = cur_match;\n\n\t\t\t// Skip to next match if the match length cannot increase\n\t\t\t// or if the match length is less than 2:\n\t\t\tif (win[match + best_len] != scan_end || win[match + best_len - 1] != scan_end1 || win[match] != win[scan]\n\t\t\t\t|| win[++match] != win[scan + 1])\n\t\t\t\tcontinue;\n\n\t\t\t// The check at best_len-1 can be removed because it will be made\n\t\t\t// again later. (This heuristic is not always a win.)\n\t\t\t// It is not necessary to compare scan[2] and match[2] since they\n\t\t\t// are always equal when the other bytes match, given that\n\t\t\t// the hash keys are equal and that HASH_BITS >= 8.\n\t\t\tscan += 2;\n\t\t\tmatch++;\n\n\t\t\t// We check for insufficient lookahead only every 8th comparison;\n\t\t\t// the 256th check will be made at strstart+258.\n\t\t\t// eslint-disable-next-line no-empty\n\t\t\tdo {\n\t\t\t\t// empty block\n\t\t\t} while (win[++scan] == win[++match] && win[++scan] == win[++match] && win[++scan] == win[++match]\n\t\t\t&& win[++scan] == win[++match] && win[++scan] == win[++match] && win[++scan] == win[++match]\n\t\t\t&& win[++scan] == win[++match] && win[++scan] == win[++match] && scan < strend);\n\n\t\t\tlen = MAX_MATCH - (strend - scan);\n\t\t\tscan = strend - MAX_MATCH;\n\n\t\t\tif (len > best_len) {\n\t\t\t\tmatch_start = cur_match;\n\t\t\t\tbest_len = len;\n\t\t\t\tif (len >= _nice_match)\n\t\t\t\t\tbreak;\n\t\t\t\tscan_end1 = win[scan + best_len - 1];\n\t\t\t\tscan_end = win[scan + best_len];\n\t\t\t}\n\n\t\t} while ((cur_match = (prev[cur_match & wmask] & 0xffff)) > limit && --chain_length !== 0);\n\n\t\tif (best_len <= lookahead)\n\t\t\treturn best_len;\n\t\treturn lookahead;\n\t}\n\n\t// Compress as much as possible from the input stream, return the current\n\t// block state.\n\t// This function does not perform lazy evaluation of matches and inserts\n\t// new strings in the dictionary only for unmatched strings or for short\n\t// matches. It is used only for the fast compression options.\n\tfunction deflate_fast(flush) {\n\t\t// short hash_head = 0; // head of the hash chain\n\t\tlet hash_head = 0; // head of the hash chain\n\t\tlet bflush; // set if current block must be flushed\n\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\t// Make sure that we always have enough lookahead, except\n\t\t\t// at the end of the input file. We need MAX_MATCH bytes\n\t\t\t// for the next match, plus MIN_MATCH bytes to insert the\n\t\t\t// string following the next match.\n\t\t\tif (lookahead < MIN_LOOKAHEAD) {\n\t\t\t\tfill_window();\n\t\t\t\tif (lookahead < MIN_LOOKAHEAD && flush == Z_NO_FLUSH) {\n\t\t\t\t\treturn NeedMore;\n\t\t\t\t}\n\t\t\t\tif (lookahead === 0)\n\t\t\t\t\tbreak; // flush the current block\n\t\t\t}\n\n\t\t\t// Insert the string win[strstart .. strstart+2] in the\n\t\t\t// dictionary, and set hash_head to the head of the hash chain:\n\t\t\tif (lookahead >= MIN_MATCH) {\n\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\n\t\t\t\t// prev[strstart&w_mask]=hash_head=head[ins_h];\n\t\t\t\thash_head = (head[ins_h] & 0xffff);\n\t\t\t\tprev[strstart & w_mask] = head[ins_h];\n\t\t\t\thead[ins_h] = strstart;\n\t\t\t}\n\n\t\t\t// Find the longest match, discarding those <= prev_length.\n\t\t\t// At this point we have always match_length < MIN_MATCH\n\n\t\t\tif (hash_head !== 0 && ((strstart - hash_head) & 0xffff) <= w_size - MIN_LOOKAHEAD) {\n\t\t\t\t// To simplify the code, we prevent matches with the string\n\t\t\t\t// of win index 0 (in particular we have to avoid a match\n\t\t\t\t// of the string with itself at the start of the input file).\n\t\t\t\tif (strategy != Z_HUFFMAN_ONLY) {\n\t\t\t\t\tmatch_length = longest_match(hash_head);\n\t\t\t\t}\n\t\t\t\t// longest_match() sets match_start\n\t\t\t}\n\t\t\tif (match_length >= MIN_MATCH) {\n\t\t\t\t// check_match(strstart, match_start, match_length);\n\n\t\t\t\tbflush = _tr_tally(strstart - match_start, match_length - MIN_MATCH);\n\n\t\t\t\tlookahead -= match_length;\n\n\t\t\t\t// Insert new strings in the hash table only if the match length\n\t\t\t\t// is not too large. This saves time but degrades compression.\n\t\t\t\tif (match_length <= max_lazy_match && lookahead >= MIN_MATCH) {\n\t\t\t\t\tmatch_length--; // string at strstart already in hash table\n\t\t\t\t\tdo {\n\t\t\t\t\t\tstrstart++;\n\n\t\t\t\t\t\tins_h = ((ins_h << hash_shift) ^ (win[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\t\t\t\t\t\t// prev[strstart&w_mask]=hash_head=head[ins_h];\n\t\t\t\t\t\thash_head = (head[ins_h] & 0xffff);\n\t\t\t\t\t\tprev[strstart & w_mask] = head[ins_h];\n\t\t\t\t\t\thead[ins_h] = strstart;\n\n\t\t\t\t\t\t// strstart never exceeds WSIZE-MAX_MATCH, so there are\n\t\t\t\t\t\t// always MIN_MATCH bytes ahead.\n\t\t\t\t\t} while (--match_length !== 0);\n\t\t\t\t\tstrstart++;\n\t\t\t\t} else {\n\t\t\t\t\tstrstart += match_length;\n\t\t\t\t\tmatch_length = 0;\n\t\t\t\t\tins_h = win[strstart] & 0xff;\n\n\t\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[strstart + 1] & 0xff)) & hash_mask;\n\t\t\t\t\t// If lookahead < MIN_MATCH, ins_h is garbage, but it does\n\t\t\t\t\t// not\n\t\t\t\t\t// matter since it will be recomputed at next deflate call.\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// No match, output a literal byte\n\n\t\t\t\tbflush = _tr_tally(0, win[strstart] & 0xff);\n\t\t\t\tlookahead--;\n\t\t\t\tstrstart++;\n\t\t\t}\n\t\t\tif (bflush) {\n\n\t\t\t\tflush_block_only(false);\n\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\treturn NeedMore;\n\t\t\t}\n\t\t}\n\n\t\tflush_block_only(flush == Z_FINISH);\n\t\tif (strm.avail_out === 0) {\n\t\t\tif (flush == Z_FINISH)\n\t\t\t\treturn FinishStarted;\n\t\t\telse\n\t\t\t\treturn NeedMore;\n\t\t}\n\t\treturn flush == Z_FINISH ? FinishDone : BlockDone;\n\t}\n\n\t// Same as above, but achieves better compression. We use a lazy\n\t// evaluation for matches: a match is finally adopted only if there is\n\t// no better match at the next win position.\n\tfunction deflate_slow(flush) {\n\t\t// short hash_head = 0; // head of hash chain\n\t\tlet hash_head = 0; // head of hash chain\n\t\tlet bflush; // set if current block must be flushed\n\t\tlet max_insert;\n\n\t\t// Process the input block.\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\t// Make sure that we always have enough lookahead, except\n\t\t\t// at the end of the input file. We need MAX_MATCH bytes\n\t\t\t// for the next match, plus MIN_MATCH bytes to insert the\n\t\t\t// string following the next match.\n\n\t\t\tif (lookahead < MIN_LOOKAHEAD) {\n\t\t\t\tfill_window();\n\t\t\t\tif (lookahead < MIN_LOOKAHEAD && flush == Z_NO_FLUSH) {\n\t\t\t\t\treturn NeedMore;\n\t\t\t\t}\n\t\t\t\tif (lookahead === 0)\n\t\t\t\t\tbreak; // flush the current block\n\t\t\t}\n\n\t\t\t// Insert the string win[strstart .. strstart+2] in the\n\t\t\t// dictionary, and set hash_head to the head of the hash chain:\n\n\t\t\tif (lookahead >= MIN_MATCH) {\n\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\t\t\t\t// prev[strstart&w_mask]=hash_head=head[ins_h];\n\t\t\t\thash_head = (head[ins_h] & 0xffff);\n\t\t\t\tprev[strstart & w_mask] = head[ins_h];\n\t\t\t\thead[ins_h] = strstart;\n\t\t\t}\n\n\t\t\t// Find the longest match, discarding those <= prev_length.\n\t\t\tprev_length = match_length;\n\t\t\tprev_match = match_start;\n\t\t\tmatch_length = MIN_MATCH - 1;\n\n\t\t\tif (hash_head !== 0 && prev_length < max_lazy_match && ((strstart - hash_head) & 0xffff) <= w_size - MIN_LOOKAHEAD) {\n\t\t\t\t// To simplify the code, we prevent matches with the string\n\t\t\t\t// of win index 0 (in particular we have to avoid a match\n\t\t\t\t// of the string with itself at the start of the input file).\n\n\t\t\t\tif (strategy != Z_HUFFMAN_ONLY) {\n\t\t\t\t\tmatch_length = longest_match(hash_head);\n\t\t\t\t}\n\t\t\t\t// longest_match() sets match_start\n\n\t\t\t\tif (match_length <= 5 && (strategy == Z_FILTERED || (match_length == MIN_MATCH && strstart - match_start > 4096))) {\n\n\t\t\t\t\t// If prev_match is also MIN_MATCH, match_start is garbage\n\t\t\t\t\t// but we will ignore the current match anyway.\n\t\t\t\t\tmatch_length = MIN_MATCH - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there was a match at the previous step and the current\n\t\t\t// match is not better, output the previous match:\n\t\t\tif (prev_length >= MIN_MATCH && match_length <= prev_length) {\n\t\t\t\tmax_insert = strstart + lookahead - MIN_MATCH;\n\t\t\t\t// Do not insert strings in hash table beyond this.\n\n\t\t\t\t// check_match(strstart-1, prev_match, prev_length);\n\n\t\t\t\tbflush = _tr_tally(strstart - 1 - prev_match, prev_length - MIN_MATCH);\n\n\t\t\t\t// Insert in hash table all strings up to the end of the match.\n\t\t\t\t// strstart-1 and strstart are already inserted. If there is not\n\t\t\t\t// enough lookahead, the last two strings are not inserted in\n\t\t\t\t// the hash table.\n\t\t\t\tlookahead -= prev_length - 1;\n\t\t\t\tprev_length -= 2;\n\t\t\t\tdo {\n\t\t\t\t\tif (++strstart <= max_insert) {\n\t\t\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\t\t\t\t\t\t// prev[strstart&w_mask]=hash_head=head[ins_h];\n\t\t\t\t\t\thash_head = (head[ins_h] & 0xffff);\n\t\t\t\t\t\tprev[strstart & w_mask] = head[ins_h];\n\t\t\t\t\t\thead[ins_h] = strstart;\n\t\t\t\t\t}\n\t\t\t\t} while (--prev_length !== 0);\n\t\t\t\tmatch_available = 0;\n\t\t\t\tmatch_length = MIN_MATCH - 1;\n\t\t\t\tstrstart++;\n\n\t\t\t\tif (bflush) {\n\t\t\t\t\tflush_block_only(false);\n\t\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\t\treturn NeedMore;\n\t\t\t\t}\n\t\t\t} else if (match_available !== 0) {\n\n\t\t\t\t// If there was no match at the previous position, output a\n\t\t\t\t// single literal. If there was a match but the current match\n\t\t\t\t// is longer, truncate the previous match to a single literal.\n\n\t\t\t\tbflush = _tr_tally(0, win[strstart - 1] & 0xff);\n\n\t\t\t\tif (bflush) {\n\t\t\t\t\tflush_block_only(false);\n\t\t\t\t}\n\t\t\t\tstrstart++;\n\t\t\t\tlookahead--;\n\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\treturn NeedMore;\n\t\t\t} else {\n\t\t\t\t// There is no previous match to compare with, wait for\n\t\t\t\t// the next step to decide.\n\n\t\t\t\tmatch_available = 1;\n\t\t\t\tstrstart++;\n\t\t\t\tlookahead--;\n\t\t\t}\n\t\t}\n\n\t\tif (match_available !== 0) {\n\t\t\tbflush = _tr_tally(0, win[strstart - 1] & 0xff);\n\t\t\tmatch_available = 0;\n\t\t}\n\t\tflush_block_only(flush == Z_FINISH);\n\n\t\tif (strm.avail_out === 0) {\n\t\t\tif (flush == Z_FINISH)\n\t\t\t\treturn FinishStarted;\n\t\t\telse\n\t\t\t\treturn NeedMore;\n\t\t}\n\n\t\treturn flush == Z_FINISH ? FinishDone : BlockDone;\n\t}\n\n\tfunction deflateReset(strm) {\n\t\tstrm.total_in = strm.total_out = 0;\n\t\tstrm.msg = null; //\n\n\t\tthat.pending = 0;\n\t\tthat.pending_out = 0;\n\n\t\tstatus = BUSY_STATE;\n\n\t\tlast_flush = Z_NO_FLUSH;\n\n\t\ttr_init();\n\t\tlm_init();\n\t\treturn Z_OK;\n\t}\n\n\tthat.deflateInit = function (strm, _level, bits, _method, memLevel, _strategy) {\n\t\tif (!_method)\n\t\t\t_method = Z_DEFLATED;\n\t\tif (!memLevel)\n\t\t\tmemLevel = DEF_MEM_LEVEL;\n\t\tif (!_strategy)\n\t\t\t_strategy = Z_DEFAULT_STRATEGY;\n\n\t\t// byte[] my_version=ZLIB_VERSION;\n\n\t\t//\n\t\t// if (!version || version[0] != my_version[0]\n\t\t// || stream_size != sizeof(z_stream)) {\n\t\t// return Z_VERSION_ERROR;\n\t\t// }\n\n\t\tstrm.msg = null;\n\n\t\tif (_level == Z_DEFAULT_COMPRESSION)\n\t\t\t_level = 6;\n\n\t\tif (memLevel < 1 || memLevel > MAX_MEM_LEVEL || _method != Z_DEFLATED || bits < 9 || bits > 15 || _level < 0 || _level > 9 || _strategy < 0\n\t\t\t|| _strategy > Z_HUFFMAN_ONLY) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\n\t\tstrm.dstate = that;\n\n\t\tw_bits = bits;\n\t\tw_size = 1 << w_bits;\n\t\tw_mask = w_size - 1;\n\n\t\thash_bits = memLevel + 7;\n\t\thash_size = 1 << hash_bits;\n\t\thash_mask = hash_size - 1;\n\t\thash_shift = Math.floor((hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n\t\twin = new Uint8Array(w_size * 2);\n\t\tprev = [];\n\t\thead = [];\n\n\t\tlit_bufsize = 1 << (memLevel + 6); // 16K elements by default\n\n\t\tthat.pending_buf = new Uint8Array(lit_bufsize * 4);\n\t\tpending_buf_size = lit_bufsize * 4;\n\n\t\tthat.dist_buf = new Uint16Array(lit_bufsize);\n\t\tthat.lc_buf = new Uint8Array(lit_bufsize);\n\n\t\tlevel = _level;\n\n\t\tstrategy = _strategy;\n\n\t\treturn deflateReset(strm);\n\t};\n\n\tthat.deflateEnd = function () {\n\t\tif (status != INIT_STATE && status != BUSY_STATE && status != FINISH_STATE) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\t// Deallocate in reverse order of allocations:\n\t\tthat.lc_buf = null;\n\t\tthat.dist_buf = null;\n\t\tthat.pending_buf = null;\n\t\thead = null;\n\t\tprev = null;\n\t\twin = null;\n\t\t// free\n\t\tthat.dstate = null;\n\t\treturn status == BUSY_STATE ? Z_DATA_ERROR : Z_OK;\n\t};\n\n\tthat.deflateParams = function (strm, _level, _strategy) {\n\t\tlet err = Z_OK;\n\n\t\tif (_level == Z_DEFAULT_COMPRESSION) {\n\t\t\t_level = 6;\n\t\t}\n\t\tif (_level < 0 || _level > 9 || _strategy < 0 || _strategy > Z_HUFFMAN_ONLY) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\n\t\tif (config_table[level].func != config_table[_level].func && strm.total_in !== 0) {\n\t\t\t// Flush the last buffer:\n\t\t\terr = strm.deflate(Z_PARTIAL_FLUSH);\n\t\t}\n\n\t\tif (level != _level) {\n\t\t\tlevel = _level;\n\t\t\tmax_lazy_match = config_table[level].max_lazy;\n\t\t\tgood_match = config_table[level].good_length;\n\t\t\tnice_match = config_table[level].nice_length;\n\t\t\tmax_chain_length = config_table[level].max_chain;\n\t\t}\n\t\tstrategy = _strategy;\n\t\treturn err;\n\t};\n\n\tthat.deflateSetDictionary = function (_strm, dictionary, dictLength) {\n\t\tlet length = dictLength;\n\t\tlet n, index = 0;\n\n\t\tif (!dictionary || status != INIT_STATE)\n\t\t\treturn Z_STREAM_ERROR;\n\n\t\tif (length < MIN_MATCH)\n\t\t\treturn Z_OK;\n\t\tif (length > w_size - MIN_LOOKAHEAD) {\n\t\t\tlength = w_size - MIN_LOOKAHEAD;\n\t\t\tindex = dictLength - length; // use the tail of the dictionary\n\t\t}\n\t\twin.set(dictionary.subarray(index, index + length), 0);\n\n\t\tstrstart = length;\n\t\tblock_start = length;\n\n\t\t// Insert all strings in the hash table (except for the last two bytes).\n\t\t// s->lookahead stays null, so s->ins_h will be recomputed at the next\n\t\t// call of fill_window.\n\n\t\tins_h = win[0] & 0xff;\n\t\tins_h = (((ins_h) << hash_shift) ^ (win[1] & 0xff)) & hash_mask;\n\n\t\tfor (n = 0; n <= length - MIN_MATCH; n++) {\n\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[(n) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\t\t\tprev[n & w_mask] = head[ins_h];\n\t\t\thead[ins_h] = n;\n\t\t}\n\t\treturn Z_OK;\n\t};\n\n\tthat.deflate = function (_strm, flush) {\n\t\tlet i, header, level_flags, old_flush, bstate;\n\n\t\tif (flush > Z_FINISH || flush < 0) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\n\t\tif (!_strm.next_out || (!_strm.next_in && _strm.avail_in !== 0) || (status == FINISH_STATE && flush != Z_FINISH)) {\n\t\t\t_strm.msg = z_errmsg[Z_NEED_DICT - (Z_STREAM_ERROR)];\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\tif (_strm.avail_out === 0) {\n\t\t\t_strm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\n\t\t\treturn Z_BUF_ERROR;\n\t\t}\n\n\t\tstrm = _strm; // just in case\n\t\told_flush = last_flush;\n\t\tlast_flush = flush;\n\n\t\t// Write the zlib header\n\t\tif (status == INIT_STATE) {\n\t\t\theader = (Z_DEFLATED + ((w_bits - 8) << 4)) << 8;\n\t\t\tlevel_flags = ((level - 1) & 0xff) >> 1;\n\n\t\t\tif (level_flags > 3)\n\t\t\t\tlevel_flags = 3;\n\t\t\theader |= (level_flags << 6);\n\t\t\tif (strstart !== 0)\n\t\t\t\theader |= PRESET_DICT;\n\t\t\theader += 31 - (header % 31);\n\n\t\t\tstatus = BUSY_STATE;\n\t\t\tputShortMSB(header);\n\t\t}\n\n\t\t// Flush as much pending output as possible\n\t\tif (that.pending !== 0) {\n\t\t\tstrm.flush_pending();\n\t\t\tif (strm.avail_out === 0) {\n\t\t\t\t// console.log(\" avail_out==0\");\n\t\t\t\t// Since avail_out is 0, deflate will be called again with\n\t\t\t\t// more output space, but possibly with both pending and\n\t\t\t\t// avail_in equal to zero. There won't be anything to do,\n\t\t\t\t// but this is not an error situation so make sure we\n\t\t\t\t// return OK instead of BUF_ERROR at next call of deflate:\n\t\t\t\tlast_flush = -1;\n\t\t\t\treturn Z_OK;\n\t\t\t}\n\n\t\t\t// Make sure there is something to do and avoid duplicate\n\t\t\t// consecutive\n\t\t\t// flushes. For repeated and useless calls with Z_FINISH, we keep\n\t\t\t// returning Z_STREAM_END instead of Z_BUFF_ERROR.\n\t\t} else if (strm.avail_in === 0 && flush <= old_flush && flush != Z_FINISH) {\n\t\t\tstrm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\n\t\t\treturn Z_BUF_ERROR;\n\t\t}\n\n\t\t// User must not provide more input after the first FINISH:\n\t\tif (status == FINISH_STATE && strm.avail_in !== 0) {\n\t\t\t_strm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\n\t\t\treturn Z_BUF_ERROR;\n\t\t}\n\n\t\t// Start a new block or continue the current one.\n\t\tif (strm.avail_in !== 0 || lookahead !== 0 || (flush != Z_NO_FLUSH && status != FINISH_STATE)) {\n\t\t\tbstate = -1;\n\t\t\tswitch (config_table[level].func) {\n\t\t\t\tcase STORED:\n\t\t\t\t\tbstate = deflate_stored(flush);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FAST:\n\t\t\t\t\tbstate = deflate_fast(flush);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLOW:\n\t\t\t\t\tbstate = deflate_slow(flush);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t}\n\n\t\t\tif (bstate == FinishStarted || bstate == FinishDone) {\n\t\t\t\tstatus = FINISH_STATE;\n\t\t\t}\n\t\t\tif (bstate == NeedMore || bstate == FinishStarted) {\n\t\t\t\tif (strm.avail_out === 0) {\n\t\t\t\t\tlast_flush = -1; // avoid BUF_ERROR next call, see above\n\t\t\t\t}\n\t\t\t\treturn Z_OK;\n\t\t\t\t// If flush != Z_NO_FLUSH && avail_out === 0, the next call\n\t\t\t\t// of deflate should use the same flush parameter to make sure\n\t\t\t\t// that the flush is complete. So we don't have to output an\n\t\t\t\t// empty block here, this will be done at next call. This also\n\t\t\t\t// ensures that for a very small output buffer, we emit at most\n\t\t\t\t// one empty block.\n\t\t\t}\n\n\t\t\tif (bstate == BlockDone) {\n\t\t\t\tif (flush == Z_PARTIAL_FLUSH) {\n\t\t\t\t\t_tr_align();\n\t\t\t\t} else { // FULL_FLUSH or SYNC_FLUSH\n\t\t\t\t\t_tr_stored_block(0, 0, false);\n\t\t\t\t\t// For a full flush, this empty block will be recognized\n\t\t\t\t\t// as a special marker by inflate_sync().\n\t\t\t\t\tif (flush == Z_FULL_FLUSH) {\n\t\t\t\t\t\t// state.head[s.hash_size-1]=0;\n\t\t\t\t\t\tfor (i = 0; i < hash_size/*-1*/; i++)\n\t\t\t\t\t\t\t// forget history\n\t\t\t\t\t\t\thead[i] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstrm.flush_pending();\n\t\t\t\tif (strm.avail_out === 0) {\n\t\t\t\t\tlast_flush = -1; // avoid BUF_ERROR at next call, see above\n\t\t\t\t\treturn Z_OK;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (flush != Z_FINISH)\n\t\t\treturn Z_OK;\n\t\treturn Z_STREAM_END;\n\t};\n}\n\n// ZStream\n\nfunction ZStream() {\n\tconst that = this;\n\tthat.next_in_index = 0;\n\tthat.next_out_index = 0;\n\t// that.next_in; // next input byte\n\tthat.avail_in = 0; // number of bytes available at next_in\n\tthat.total_in = 0; // total nb of input bytes read so far\n\t// that.next_out; // next output byte should be put there\n\tthat.avail_out = 0; // remaining free space at next_out\n\tthat.total_out = 0; // total nb of bytes output so far\n\t// that.msg;\n\t// that.dstate;\n}\n\nZStream.prototype = {\n\tdeflateInit(level, bits) {\n\t\tconst that = this;\n\t\tthat.dstate = new Deflate();\n\t\tif (!bits)\n\t\t\tbits = MAX_BITS;\n\t\treturn that.dstate.deflateInit(that, level, bits);\n\t},\n\n\tdeflate(flush) {\n\t\tconst that = this;\n\t\tif (!that.dstate) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\treturn that.dstate.deflate(that, flush);\n\t},\n\n\tdeflateEnd() {\n\t\tconst that = this;\n\t\tif (!that.dstate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst ret = that.dstate.deflateEnd();\n\t\tthat.dstate = null;\n\t\treturn ret;\n\t},\n\n\tdeflateParams(level, strategy) {\n\t\tconst that = this;\n\t\tif (!that.dstate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.dstate.deflateParams(that, level, strategy);\n\t},\n\n\tdeflateSetDictionary(dictionary, dictLength) {\n\t\tconst that = this;\n\t\tif (!that.dstate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.dstate.deflateSetDictionary(that, dictionary, dictLength);\n\t},\n\n\t// Read a new buffer from the current input stream, update the\n\t// total number of bytes read. All deflate() input goes through\n\t// this function so some applications may wish to modify it to avoid\n\t// allocating a large strm->next_in buffer and copying from it.\n\t// (See also flush_pending()).\n\tread_buf(buf, start, size) {\n\t\tconst that = this;\n\t\tlet len = that.avail_in;\n\t\tif (len > size)\n\t\t\tlen = size;\n\t\tif (len === 0)\n\t\t\treturn 0;\n\t\tthat.avail_in -= len;\n\t\tbuf.set(that.next_in.subarray(that.next_in_index, that.next_in_index + len), start);\n\t\tthat.next_in_index += len;\n\t\tthat.total_in += len;\n\t\treturn len;\n\t},\n\n\t// Flush as much pending output as possible. All deflate() output goes\n\t// through this function so some applications may wish to modify it\n\t// to avoid allocating a large strm->next_out buffer and copying into it.\n\t// (See also read_buf()).\n\tflush_pending() {\n\t\tconst that = this;\n\t\tlet len = that.dstate.pending;\n\n\t\tif (len > that.avail_out)\n\t\t\tlen = that.avail_out;\n\t\tif (len === 0)\n\t\t\treturn;\n\n\t\t// if (that.dstate.pending_buf.length <= that.dstate.pending_out || that.next_out.length <= that.next_out_index\n\t\t// || that.dstate.pending_buf.length < (that.dstate.pending_out + len) || that.next_out.length < (that.next_out_index +\n\t\t// len)) {\n\t\t// console.log(that.dstate.pending_buf.length + \", \" + that.dstate.pending_out + \", \" + that.next_out.length + \", \" +\n\t\t// that.next_out_index + \", \" + len);\n\t\t// console.log(\"avail_out=\" + that.avail_out);\n\t\t// }\n\n\t\tthat.next_out.set(that.dstate.pending_buf.subarray(that.dstate.pending_out, that.dstate.pending_out + len), that.next_out_index);\n\n\t\tthat.next_out_index += len;\n\t\tthat.dstate.pending_out += len;\n\t\tthat.total_out += len;\n\t\tthat.avail_out -= len;\n\t\tthat.dstate.pending -= len;\n\t\tif (that.dstate.pending === 0) {\n\t\t\tthat.dstate.pending_out = 0;\n\t\t}\n\t}\n};\n\n// Deflate\n\nfunction ZipDeflate(options) {\n\tconst that = this;\n\tconst z = new ZStream();\n\tconst bufsize = getMaximumCompressedSize(options && options.chunkSize ? options.chunkSize : 64 * 1024);\n\tconst flush = Z_NO_FLUSH;\n\tconst buf = new Uint8Array(bufsize);\n\tlet level = options ? options.level : Z_DEFAULT_COMPRESSION;\n\tif (typeof level == \"undefined\")\n\t\tlevel = Z_DEFAULT_COMPRESSION;\n\tz.deflateInit(level);\n\tz.next_out = buf;\n\n\tthat.append = function (data, onprogress) {\n\t\tlet err, array, lastIndex = 0, bufferIndex = 0, bufferSize = 0;\n\t\tconst buffers = [];\n\t\tif (!data.length)\n\t\t\treturn;\n\t\tz.next_in_index = 0;\n\t\tz.next_in = data;\n\t\tz.avail_in = data.length;\n\t\tdo {\n\t\t\tz.next_out_index = 0;\n\t\t\tz.avail_out = bufsize;\n\t\t\terr = z.deflate(flush);\n\t\t\tif (err != Z_OK)\n\t\t\t\tthrow new Error(\"deflating: \" + z.msg);\n\t\t\tif (z.next_out_index)\n\t\t\t\tif (z.next_out_index == bufsize)\n\t\t\t\t\tbuffers.push(new Uint8Array(buf));\n\t\t\t\telse\n\t\t\t\t\tbuffers.push(buf.subarray(0, z.next_out_index));\n\t\t\tbufferSize += z.next_out_index;\n\t\t\tif (onprogress && z.next_in_index > 0 && z.next_in_index != lastIndex) {\n\t\t\t\tonprogress(z.next_in_index);\n\t\t\t\tlastIndex = z.next_in_index;\n\t\t\t}\n\t\t} while (z.avail_in > 0 || z.avail_out === 0);\n\t\tif (buffers.length > 1) {\n\t\t\tarray = new Uint8Array(bufferSize);\n\t\t\tbuffers.forEach(function (chunk) {\n\t\t\t\tarray.set(chunk, bufferIndex);\n\t\t\t\tbufferIndex += chunk.length;\n\t\t\t});\n\t\t} else {\n\t\t\tarray = buffers[0] ? new Uint8Array(buffers[0]) : new Uint8Array();\n\t\t}\n\t\treturn array;\n\t};\n\tthat.flush = function () {\n\t\tlet err, array, bufferIndex = 0, bufferSize = 0;\n\t\tconst buffers = [];\n\t\tdo {\n\t\t\tz.next_out_index = 0;\n\t\t\tz.avail_out = bufsize;\n\t\t\terr = z.deflate(Z_FINISH);\n\t\t\tif (err != Z_STREAM_END && err != Z_OK)\n\t\t\t\tthrow new Error(\"deflating: \" + z.msg);\n\t\t\tif (bufsize - z.avail_out > 0)\n\t\t\t\tbuffers.push(buf.slice(0, z.next_out_index));\n\t\t\tbufferSize += z.next_out_index;\n\t\t} while (z.avail_in > 0 || z.avail_out === 0);\n\t\tz.deflateEnd();\n\t\tarray = new Uint8Array(bufferSize);\n\t\tbuffers.forEach(function (chunk) {\n\t\t\tarray.set(chunk, bufferIndex);\n\t\t\tbufferIndex += chunk.length;\n\t\t});\n\t\treturn array;\n\t};\n}\n\nfunction getMaximumCompressedSize(uncompressedSize) {\n\treturn uncompressedSize + (5 * (Math.floor(uncompressedSize / 16383) + 1));\n}\n\nexport {\n\tZipDeflate as Deflate\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n// deno-lint-ignore-file no-this-alias prefer-const\n\n// Global\n\nconst MAX_BITS = 15;\n\nconst Z_OK = 0;\nconst Z_STREAM_END = 1;\nconst Z_NEED_DICT = 2;\nconst Z_STREAM_ERROR = -2;\nconst Z_DATA_ERROR = -3;\nconst Z_MEM_ERROR = -4;\nconst Z_BUF_ERROR = -5;\n\nconst inflate_mask = [0x00000000, 0x00000001, 0x00000003, 0x00000007, 0x0000000f, 0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff, 0x000001ff, 0x000003ff,\n\t0x000007ff, 0x00000fff, 0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff];\n\nconst MANY = 1440;\n\n// JZlib version : \"1.0.2\"\nconst Z_NO_FLUSH = 0;\nconst Z_FINISH = 4;\n\n// InfTree\nconst fixed_bl = 9;\nconst fixed_bd = 5;\n\nconst fixed_tl = [96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115, 82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9, 192, 80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 160, 0, 8, 0,\n\t0, 8, 128, 0, 8, 64, 0, 9, 224, 80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 144, 83, 7, 59, 0, 8, 120, 0, 8, 56, 0, 9, 208, 81, 7, 17, 0, 8, 104, 0, 8, 40,\n\t0, 9, 176, 0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 240, 80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8, 227, 83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 200, 81, 7, 13,\n\t0, 8, 100, 0, 8, 36, 0, 9, 168, 0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 232, 80, 7, 8, 0, 8, 92, 0, 8, 28, 0, 9, 152, 84, 7, 83, 0, 8, 124, 0, 8, 60,\n\t0, 9, 216, 82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 184, 0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9, 248, 80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163, 83, 7,\n\t35, 0, 8, 114, 0, 8, 50, 0, 9, 196, 81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 164, 0, 8, 2, 0, 8, 130, 0, 8, 66, 0, 9, 228, 80, 7, 7, 0, 8, 90, 0, 8,\n\t26, 0, 9, 148, 84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 212, 82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9, 180, 0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 244, 80,\n\t7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0, 83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 204, 81, 7, 15, 0, 8, 102, 0, 8, 38, 0, 9, 172, 0, 8, 6, 0, 8, 134, 0,\n\t8, 70, 0, 9, 236, 80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 156, 84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9, 220, 82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 188, 0,\n\t8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 252, 96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131, 82, 7, 31, 0, 8, 113, 0, 8, 49, 0, 9, 194, 80, 7, 10, 0, 8, 97,\n\t0, 8, 33, 0, 9, 162, 0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 226, 80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9, 146, 83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 210,\n\t81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 178, 0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 242, 80, 7, 4, 0, 8, 85, 0, 8, 21, 80, 8, 258, 83, 7, 43, 0, 8, 117,\n\t0, 8, 53, 0, 9, 202, 81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 170, 0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9, 234, 80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 154,\n\t84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 218, 82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 186, 0, 8, 13, 0, 8, 141, 0, 8, 77, 0, 9, 250, 80, 7, 3, 0, 8, 83,\n\t0, 8, 19, 85, 8, 195, 83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 198, 81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9, 166, 0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 230,\n\t80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 150, 84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 214, 82, 7, 19, 0, 8, 107, 0, 8, 43, 0, 9, 182, 0, 8, 11, 0, 8, 139,\n\t0, 8, 75, 0, 9, 246, 80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0, 83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9, 206, 81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 174,\n\t0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 238, 80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 158, 84, 7, 99, 0, 8, 127, 0, 8, 63, 0, 9, 222, 82, 7, 27, 0, 8, 111,\n\t0, 8, 47, 0, 9, 190, 0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 254, 96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115, 82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9,\n\t193, 80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 161, 0, 8, 0, 0, 8, 128, 0, 8, 64, 0, 9, 225, 80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 145, 83, 7, 59, 0, 8,\n\t120, 0, 8, 56, 0, 9, 209, 81, 7, 17, 0, 8, 104, 0, 8, 40, 0, 9, 177, 0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 241, 80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8,\n\t227, 83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 201, 81, 7, 13, 0, 8, 100, 0, 8, 36, 0, 9, 169, 0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 233, 80, 7, 8, 0, 8,\n\t92, 0, 8, 28, 0, 9, 153, 84, 7, 83, 0, 8, 124, 0, 8, 60, 0, 9, 217, 82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 185, 0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9,\n\t249, 80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163, 83, 7, 35, 0, 8, 114, 0, 8, 50, 0, 9, 197, 81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 165, 0, 8, 2, 0, 8,\n\t130, 0, 8, 66, 0, 9, 229, 80, 7, 7, 0, 8, 90, 0, 8, 26, 0, 9, 149, 84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 213, 82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9,\n\t181, 0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 245, 80, 7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0, 83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 205, 81, 7, 15, 0, 8,\n\t102, 0, 8, 38, 0, 9, 173, 0, 8, 6, 0, 8, 134, 0, 8, 70, 0, 9, 237, 80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 157, 84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9,\n\t221, 82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 189, 0, 8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 253, 96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131, 82, 7, 31, 0,\n\t8, 113, 0, 8, 49, 0, 9, 195, 80, 7, 10, 0, 8, 97, 0, 8, 33, 0, 9, 163, 0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 227, 80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9,\n\t147, 83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 211, 81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 179, 0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 243, 80, 7, 4, 0, 8,\n\t85, 0, 8, 21, 80, 8, 258, 83, 7, 43, 0, 8, 117, 0, 8, 53, 0, 9, 203, 81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 171, 0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9,\n\t235, 80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 155, 84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 219, 82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 187, 0, 8, 13, 0, 8,\n\t141, 0, 8, 77, 0, 9, 251, 80, 7, 3, 0, 8, 83, 0, 8, 19, 85, 8, 195, 83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 199, 81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9,\n\t167, 0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 231, 80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 151, 84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 215, 82, 7, 19, 0, 8,\n\t107, 0, 8, 43, 0, 9, 183, 0, 8, 11, 0, 8, 139, 0, 8, 75, 0, 9, 247, 80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0, 83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9,\n\t207, 81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 175, 0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 239, 80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 159, 84, 7, 99, 0, 8,\n\t127, 0, 8, 63, 0, 9, 223, 82, 7, 27, 0, 8, 111, 0, 8, 47, 0, 9, 191, 0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 255];\nconst fixed_td = [80, 5, 1, 87, 5, 257, 83, 5, 17, 91, 5, 4097, 81, 5, 5, 89, 5, 1025, 85, 5, 65, 93, 5, 16385, 80, 5, 3, 88, 5, 513, 84, 5, 33, 92, 5,\n\t8193, 82, 5, 9, 90, 5, 2049, 86, 5, 129, 192, 5, 24577, 80, 5, 2, 87, 5, 385, 83, 5, 25, 91, 5, 6145, 81, 5, 7, 89, 5, 1537, 85, 5, 97, 93, 5,\n\t24577, 80, 5, 4, 88, 5, 769, 84, 5, 49, 92, 5, 12289, 82, 5, 13, 90, 5, 3073, 86, 5, 193, 192, 5, 24577];\n\n// Tables for deflate from PKZIP's appnote.txt.\nconst cplens = [ // Copy lengths for literal codes 257..285\n\t3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0];\n\n// see note #13 above about 258\nconst cplext = [ // Extra bits for literal codes 257..285\n\t0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 112, 112 // 112==invalid\n];\n\nconst cpdist = [ // Copy offsets for distance codes 0..29\n\t1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];\n\nconst cpdext = [ // Extra bits for distance codes\n\t0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\n\n// If BMAX needs to be larger than 16, then h and x[] should be uLong.\nconst BMAX = 15; // maximum bit length of any code\n\nfunction InfTree() {\n\tconst that = this;\n\n\tlet hn; // hufts used in space\n\tlet v; // work area for huft_build\n\tlet c; // bit length count table\n\tlet r; // table entry for structure assignment\n\tlet u; // table stack\n\tlet x; // bit offsets, then code stack\n\n\tfunction huft_build(b, // code lengths in bits (all assumed <=\n\t\t// BMAX)\n\t\tbindex, n, // number of codes (assumed <= 288)\n\t\ts, // number of simple-valued codes (0..s-1)\n\t\td, // list of base values for non-simple codes\n\t\te, // list of extra bits for non-simple codes\n\t\tt, // result: starting table\n\t\tm, // maximum lookup bits, returns actual\n\t\thp,// space for trees\n\t\thn,// hufts used in space\n\t\tv // working area: values in order of bit length\n\t) {\n\t\t// Given a list of code lengths and a maximum table size, make a set of\n\t\t// tables to decode that set of codes. Return Z_OK on success,\n\t\t// Z_BUF_ERROR\n\t\t// if the given code set is incomplete (the tables are still built in\n\t\t// this\n\t\t// case), Z_DATA_ERROR if the input is invalid (an over-subscribed set\n\t\t// of\n\t\t// lengths), or Z_MEM_ERROR if not enough memory.\n\n\t\tlet a; // counter for codes of length k\n\t\tlet f; // i repeats in table every f entries\n\t\tlet g; // maximum code length\n\t\tlet h; // table level\n\t\tlet i; // counter, current code\n\t\tlet j; // counter\n\t\tlet k; // number of bits in current code\n\t\tlet l; // bits per table (returned in m)\n\t\tlet mask; // (1 << w) - 1, to avoid cc -O bug on HP\n\t\tlet p; // pointer into c[], b[], or v[]\n\t\tlet q; // points to current table\n\t\tlet w; // bits before this table == (l * h)\n\t\tlet xp; // pointer into x\n\t\tlet y; // number of dummy codes added\n\t\tlet z; // number of entries in current table\n\n\t\t// Generate counts for each bit length\n\n\t\tp = 0;\n\t\ti = n;\n\t\tdo {\n\t\t\tc[b[bindex + p]]++;\n\t\t\tp++;\n\t\t\ti--; // assume all entries <= BMAX\n\t\t} while (i !== 0);\n\n\t\tif (c[0] == n) { // null input--all zero length codes\n\t\t\tt[0] = -1;\n\t\t\tm[0] = 0;\n\t\t\treturn Z_OK;\n\t\t}\n\n\t\t// Find minimum and maximum length, bound *m by those\n\t\tl = m[0];\n\t\tfor (j = 1; j <= BMAX; j++)\n\t\t\tif (c[j] !== 0)\n\t\t\t\tbreak;\n\t\tk = j; // minimum code length\n\t\tif (l < j) {\n\t\t\tl = j;\n\t\t}\n\t\tfor (i = BMAX; i !== 0; i--) {\n\t\t\tif (c[i] !== 0)\n\t\t\t\tbreak;\n\t\t}\n\t\tg = i; // maximum code length\n\t\tif (l > i) {\n\t\t\tl = i;\n\t\t}\n\t\tm[0] = l;\n\n\t\t// Adjust last length count to fill out codes, if needed\n\t\tfor (y = 1 << j; j < i; j++, y <<= 1) {\n\t\t\tif ((y -= c[j]) < 0) {\n\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t}\n\t\t}\n\t\tif ((y -= c[i]) < 0) {\n\t\t\treturn Z_DATA_ERROR;\n\t\t}\n\t\tc[i] += y;\n\n\t\t// Generate starting offsets into the value table for each length\n\t\tx[1] = j = 0;\n\t\tp = 1;\n\t\txp = 2;\n\t\twhile (--i !== 0) { // note that i == g from above\n\t\t\tx[xp] = (j += c[p]);\n\t\t\txp++;\n\t\t\tp++;\n\t\t}\n\n\t\t// Make a table of values in order of bit lengths\n\t\ti = 0;\n\t\tp = 0;\n\t\tdo {\n\t\t\tif ((j = b[bindex + p]) !== 0) {\n\t\t\t\tv[x[j]++] = i;\n\t\t\t}\n\t\t\tp++;\n\t\t} while (++i < n);\n\t\tn = x[g]; // set n to length of v\n\n\t\t// Generate the Huffman codes and for each, make the table entries\n\t\tx[0] = i = 0; // first Huffman code is zero\n\t\tp = 0; // grab values in bit order\n\t\th = -1; // no tables yet--level -1\n\t\tw = -l; // bits decoded == (l * h)\n\t\tu[0] = 0; // just to keep compilers happy\n\t\tq = 0; // ditto\n\t\tz = 0; // ditto\n\n\t\t// go through the bit lengths (k already is bits in shortest code)\n\t\tfor (; k <= g; k++) {\n\t\t\ta = c[k];\n\t\t\twhile (a-- !== 0) {\n\t\t\t\t// here i is the Huffman code of length k bits for value *p\n\t\t\t\t// make tables up to required level\n\t\t\t\twhile (k > w + l) {\n\t\t\t\t\th++;\n\t\t\t\t\tw += l; // previous table always l bits\n\t\t\t\t\t// compute minimum size table less than or equal to l bits\n\t\t\t\t\tz = g - w;\n\t\t\t\t\tz = (z > l) ? l : z; // table size upper limit\n\t\t\t\t\tif ((f = 1 << (j = k - w)) > a + 1) { // try a k-w bit table\n\t\t\t\t\t\t// too few codes for\n\t\t\t\t\t\t// k-w bit table\n\t\t\t\t\t\tf -= a + 1; // deduct codes from patterns left\n\t\t\t\t\t\txp = k;\n\t\t\t\t\t\tif (j < z) {\n\t\t\t\t\t\t\twhile (++j < z) { // try smaller tables up to z bits\n\t\t\t\t\t\t\t\tif ((f <<= 1) <= c[++xp])\n\t\t\t\t\t\t\t\t\tbreak; // enough codes to use up j bits\n\t\t\t\t\t\t\t\tf -= c[xp]; // else deduct codes from patterns\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tz = 1 << j; // table entries for j-bit table\n\n\t\t\t\t\t// allocate new table\n\t\t\t\t\tif (hn[0] + z > MANY) { // (note: doesn't matter for fixed)\n\t\t\t\t\t\treturn Z_DATA_ERROR; // overflow of MANY\n\t\t\t\t\t}\n\t\t\t\t\tu[h] = q = /* hp+ */hn[0]; // DEBUG\n\t\t\t\t\thn[0] += z;\n\n\t\t\t\t\t// connect to last table, if there is one\n\t\t\t\t\tif (h !== 0) {\n\t\t\t\t\t\tx[h] = i; // save pattern for backing up\n\t\t\t\t\t\tr[0] = /* (byte) */j; // bits in this table\n\t\t\t\t\t\tr[1] = /* (byte) */l; // bits to dump before this table\n\t\t\t\t\t\tj = i >>> (w - l);\n\t\t\t\t\t\tr[2] = /* (int) */(q - u[h - 1] - j); // offset to this table\n\t\t\t\t\t\thp.set(r, (u[h - 1] + j) * 3);\n\t\t\t\t\t\t// to\n\t\t\t\t\t\t// last\n\t\t\t\t\t\t// table\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt[0] = q; // first table is returned result\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// set up table entry in r\n\t\t\t\tr[1] = /* (byte) */(k - w);\n\t\t\t\tif (p >= n) {\n\t\t\t\t\tr[0] = 128 + 64; // out of values--invalid code\n\t\t\t\t} else if (v[p] < s) {\n\t\t\t\t\tr[0] = /* (byte) */(v[p] < 256 ? 0 : 32 + 64); // 256 is\n\t\t\t\t\t// end-of-block\n\t\t\t\t\tr[2] = v[p++]; // simple code is just the value\n\t\t\t\t} else {\n\t\t\t\t\tr[0] = /* (byte) */(e[v[p] - s] + 16 + 64); // non-simple--look\n\t\t\t\t\t// up in lists\n\t\t\t\t\tr[2] = d[v[p++] - s];\n\t\t\t\t}\n\n\t\t\t\t// fill code-like entries with r\n\t\t\t\tf = 1 << (k - w);\n\t\t\t\tfor (j = i >>> w; j < z; j += f) {\n\t\t\t\t\thp.set(r, (q + j) * 3);\n\t\t\t\t}\n\n\t\t\t\t// backwards increment the k-bit code i\n\t\t\t\tfor (j = 1 << (k - 1); (i & j) !== 0; j >>>= 1) {\n\t\t\t\t\ti ^= j;\n\t\t\t\t}\n\t\t\t\ti ^= j;\n\n\t\t\t\t// backup over finished tables\n\t\t\t\tmask = (1 << w) - 1; // needed on HP, cc -O bug\n\t\t\t\twhile ((i & mask) != x[h]) {\n\t\t\t\t\th--; // don't need to update q\n\t\t\t\t\tw -= l;\n\t\t\t\t\tmask = (1 << w) - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Return Z_BUF_ERROR if we were given an incomplete table\n\t\treturn y !== 0 && g != 1 ? Z_BUF_ERROR : Z_OK;\n\t}\n\n\tfunction initWorkArea(vsize) {\n\t\tlet i;\n\t\tif (!hn) {\n\t\t\thn = []; // []; //new Array(1);\n\t\t\tv = []; // new Array(vsize);\n\t\t\tc = new Int32Array(BMAX + 1); // new Array(BMAX + 1);\n\t\t\tr = []; // new Array(3);\n\t\t\tu = new Int32Array(BMAX); // new Array(BMAX);\n\t\t\tx = new Int32Array(BMAX + 1); // new Array(BMAX + 1);\n\t\t}\n\t\tif (v.length < vsize) {\n\t\t\tv = []; // new Array(vsize);\n\t\t}\n\t\tfor (i = 0; i < vsize; i++) {\n\t\t\tv[i] = 0;\n\t\t}\n\t\tfor (i = 0; i < BMAX + 1; i++) {\n\t\t\tc[i] = 0;\n\t\t}\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tr[i] = 0;\n\t\t}\n\t\t// for(int i=0; i<BMAX; i++){u[i]=0;}\n\t\tu.set(c.subarray(0, BMAX), 0);\n\t\t// for(int i=0; i<BMAX+1; i++){x[i]=0;}\n\t\tx.set(c.subarray(0, BMAX + 1), 0);\n\t}\n\n\tthat.inflate_trees_bits = function (c, // 19 code lengths\n\t\tbb, // bits tree desired/actual depth\n\t\ttb, // bits tree result\n\t\thp, // space for trees\n\t\tz // for messages\n\t) {\n\t\tlet result;\n\t\tinitWorkArea(19);\n\t\thn[0] = 0;\n\t\tresult = huft_build(c, 0, 19, 19, null, null, tb, bb, hp, hn, v);\n\n\t\tif (result == Z_DATA_ERROR) {\n\t\t\tz.msg = \"oversubscribed dynamic bit lengths tree\";\n\t\t} else if (result == Z_BUF_ERROR || bb[0] === 0) {\n\t\t\tz.msg = \"incomplete dynamic bit lengths tree\";\n\t\t\tresult = Z_DATA_ERROR;\n\t\t}\n\t\treturn result;\n\t};\n\n\tthat.inflate_trees_dynamic = function (nl, // number of literal/length codes\n\t\tnd, // number of distance codes\n\t\tc, // that many (total) code lengths\n\t\tbl, // literal desired/actual bit depth\n\t\tbd, // distance desired/actual bit depth\n\t\ttl, // literal/length tree result\n\t\ttd, // distance tree result\n\t\thp, // space for trees\n\t\tz // for messages\n\t) {\n\t\tlet result;\n\n\t\t// build literal/length tree\n\t\tinitWorkArea(288);\n\t\thn[0] = 0;\n\t\tresult = huft_build(c, 0, nl, 257, cplens, cplext, tl, bl, hp, hn, v);\n\t\tif (result != Z_OK || bl[0] === 0) {\n\t\t\tif (result == Z_DATA_ERROR) {\n\t\t\t\tz.msg = \"oversubscribed literal/length tree\";\n\t\t\t} else if (result != Z_MEM_ERROR) {\n\t\t\t\tz.msg = \"incomplete literal/length tree\";\n\t\t\t\tresult = Z_DATA_ERROR;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t// build distance tree\n\t\tinitWorkArea(288);\n\t\tresult = huft_build(c, nl, nd, 0, cpdist, cpdext, td, bd, hp, hn, v);\n\n\t\tif (result != Z_OK || (bd[0] === 0 && nl > 257)) {\n\t\t\tif (result == Z_DATA_ERROR) {\n\t\t\t\tz.msg = \"oversubscribed distance tree\";\n\t\t\t} else if (result == Z_BUF_ERROR) {\n\t\t\t\tz.msg = \"incomplete distance tree\";\n\t\t\t\tresult = Z_DATA_ERROR;\n\t\t\t} else if (result != Z_MEM_ERROR) {\n\t\t\t\tz.msg = \"empty distance tree with lengths\";\n\t\t\t\tresult = Z_DATA_ERROR;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\treturn Z_OK;\n\t};\n\n}\n\nInfTree.inflate_trees_fixed = function (bl, // literal desired/actual bit depth\n\tbd, // distance desired/actual bit depth\n\ttl,// literal/length tree result\n\ttd// distance tree result\n) {\n\tbl[0] = fixed_bl;\n\tbd[0] = fixed_bd;\n\ttl[0] = fixed_tl;\n\ttd[0] = fixed_td;\n\treturn Z_OK;\n};\n\n// InfCodes\n\n// waiting for \"i:\"=input,\n// \"o:\"=output,\n// \"x:\"=nothing\nconst START = 0; // x: set up for LEN\nconst LEN = 1; // i: get length/literal/eob next\nconst LENEXT = 2; // i: getting length extra (have base)\nconst DIST = 3; // i: get distance next\nconst DISTEXT = 4;// i: getting distance extra\nconst COPY = 5; // o: copying bytes in win, waiting\n// for space\nconst LIT = 6; // o: got literal, waiting for output\n// space\nconst WASH = 7; // o: got eob, possibly still output\n// waiting\nconst END = 8; // x: got eob and all data flushed\nconst BADCODE = 9;// x: got error\n\nfunction InfCodes() {\n\tconst that = this;\n\n\tlet mode; // current inflate_codes mode\n\n\t// mode dependent information\n\tlet len = 0;\n\n\tlet tree; // pointer into tree\n\tlet tree_index = 0;\n\tlet need = 0; // bits needed\n\n\tlet lit = 0;\n\n\t// if EXT or COPY, where and how much\n\tlet get = 0; // bits to get for extra\n\tlet dist = 0; // distance back to copy from\n\n\tlet lbits = 0; // ltree bits decoded per branch\n\tlet dbits = 0; // dtree bits decoder per branch\n\tlet ltree; // literal/length/eob tree\n\tlet ltree_index = 0; // literal/length/eob tree\n\tlet dtree; // distance tree\n\tlet dtree_index = 0; // distance tree\n\n\t// Called with number of bytes left to write in win at least 258\n\t// (the maximum string length) and number of input bytes available\n\t// at least ten. The ten bytes are six bytes for the longest length/\n\t// distance pair plus four bytes for overloading the bit buffer.\n\n\tfunction inflate_fast(bl, bd, tl, tl_index, td, td_index, s, z) {\n\t\tlet t; // temporary pointer\n\t\tlet tp; // temporary pointer\n\t\tlet tp_index; // temporary pointer\n\t\tlet e; // extra bits or operation\n\t\tlet b; // bit buffer\n\t\tlet k; // bits in bit buffer\n\t\tlet p; // input data pointer\n\t\tlet n; // bytes available there\n\t\tlet q; // output win write pointer\n\t\tlet m; // bytes to end of win or read pointer\n\t\tlet ml; // mask for literal/length tree\n\t\tlet md; // mask for distance tree\n\t\tlet c; // bytes to copy\n\t\tlet d; // distance back to copy from\n\t\tlet r; // copy source pointer\n\n\t\tlet tp_index_t_3; // (tp_index+t)*3\n\n\t\t// load input, output, bit values\n\t\tp = z.next_in_index;\n\t\tn = z.avail_in;\n\t\tb = s.bitb;\n\t\tk = s.bitk;\n\t\tq = s.write;\n\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t// initialize masks\n\t\tml = inflate_mask[bl];\n\t\tmd = inflate_mask[bd];\n\n\t\t// do until not enough input or output space for fast loop\n\t\tdo { // assume called with m >= 258 && n >= 10\n\t\t\t// get literal/length code\n\t\t\twhile (k < (20)) { // max bits for literal/length code\n\t\t\t\tn--;\n\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\tk += 8;\n\t\t\t}\n\n\t\t\tt = b & ml;\n\t\t\ttp = tl;\n\t\t\ttp_index = tl_index;\n\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\tif ((e = tp[tp_index_t_3]) === 0) {\n\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\ts.win[q++] = /* (byte) */tp[tp_index_t_3 + 2];\n\t\t\t\tm--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdo {\n\n\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\tif ((e & 16) !== 0) {\n\t\t\t\t\te &= 15;\n\t\t\t\t\tc = tp[tp_index_t_3 + 2] + (/* (int) */b & inflate_mask[e]);\n\n\t\t\t\t\tb >>= e;\n\t\t\t\t\tk -= e;\n\n\t\t\t\t\t// decode distance base of block to copy\n\t\t\t\t\twhile (k < (15)) { // max bits for distance code\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tt = b & md;\n\t\t\t\t\ttp = td;\n\t\t\t\t\ttp_index = td_index;\n\t\t\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\t\t\te = tp[tp_index_t_3];\n\n\t\t\t\t\tdo {\n\n\t\t\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\t\t\tif ((e & 16) !== 0) {\n\t\t\t\t\t\t\t// get extra bits to add to distance base\n\t\t\t\t\t\t\te &= 15;\n\t\t\t\t\t\t\twhile (k < (e)) { // get extra bits (up to 13)\n\t\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\td = tp[tp_index_t_3 + 2] + (b & inflate_mask[e]);\n\n\t\t\t\t\t\t\tb >>= (e);\n\t\t\t\t\t\t\tk -= (e);\n\n\t\t\t\t\t\t\t// do the copy\n\t\t\t\t\t\t\tm -= c;\n\t\t\t\t\t\t\tif (q >= d) { // offset before dest\n\t\t\t\t\t\t\t\t// just copy\n\t\t\t\t\t\t\t\tr = q - d;\n\t\t\t\t\t\t\t\tif (q - r > 0 && 2 > (q - r)) {\n\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++]; // minimum\n\t\t\t\t\t\t\t\t\t// count is\n\t\t\t\t\t\t\t\t\t// three,\n\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++]; // so unroll\n\t\t\t\t\t\t\t\t\t// loop a\n\t\t\t\t\t\t\t\t\t// little\n\t\t\t\t\t\t\t\t\tc -= 2;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ts.win.set(s.win.subarray(r, r + 2), q);\n\t\t\t\t\t\t\t\t\tq += 2;\n\t\t\t\t\t\t\t\t\tr += 2;\n\t\t\t\t\t\t\t\t\tc -= 2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else { // else offset after destination\n\t\t\t\t\t\t\t\tr = q - d;\n\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\tr += s.end; // force pointer in win\n\t\t\t\t\t\t\t\t} while (r < 0); // covers invalid distances\n\t\t\t\t\t\t\t\te = s.end - r;\n\t\t\t\t\t\t\t\tif (c > e) { // if source crosses,\n\t\t\t\t\t\t\t\t\tc -= e; // wrapped copy\n\t\t\t\t\t\t\t\t\tif (q - r > 0 && e > (q - r)) {\n\t\t\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++];\n\t\t\t\t\t\t\t\t\t\t} while (--e !== 0);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ts.win.set(s.win.subarray(r, r + e), q);\n\t\t\t\t\t\t\t\t\t\tq += e;\n\t\t\t\t\t\t\t\t\t\tr += e;\n\t\t\t\t\t\t\t\t\t\te = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tr = 0; // copy rest from start of win\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// copy all or what's left\n\t\t\t\t\t\t\tif (q - r > 0 && c > (q - r)) {\n\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++];\n\t\t\t\t\t\t\t\t} while (--c !== 0);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ts.win.set(s.win.subarray(r, r + c), q);\n\t\t\t\t\t\t\t\tq += c;\n\t\t\t\t\t\t\t\tr += c;\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if ((e & 64) === 0) {\n\t\t\t\t\t\t\tt += tp[tp_index_t_3 + 2];\n\t\t\t\t\t\t\tt += (b & inflate_mask[e]);\n\t\t\t\t\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\t\t\t\t\te = tp[tp_index_t_3];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tz.msg = \"invalid distance code\";\n\n\t\t\t\t\t\t\tc = z.avail_in - n;\n\t\t\t\t\t\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\t\t\t\t\t\tn += c;\n\t\t\t\t\t\t\tp -= c;\n\t\t\t\t\t\t\tk -= c << 3;\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\n\t\t\t\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t\t\t} while (true);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ((e & 64) === 0) {\n\t\t\t\t\tt += tp[tp_index_t_3 + 2];\n\t\t\t\t\tt += (b & inflate_mask[e]);\n\t\t\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\t\t\tif ((e = tp[tp_index_t_3]) === 0) {\n\n\t\t\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\t\t\ts.win[q++] = /* (byte) */tp[tp_index_t_3 + 2];\n\t\t\t\t\t\tm--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if ((e & 32) !== 0) {\n\n\t\t\t\t\tc = z.avail_in - n;\n\t\t\t\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\t\t\t\tn += c;\n\t\t\t\t\tp -= c;\n\t\t\t\t\tk -= c << 3;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\n\t\t\t\t\treturn Z_STREAM_END;\n\t\t\t\t} else {\n\t\t\t\t\tz.msg = \"invalid literal/length code\";\n\n\t\t\t\t\tc = z.avail_in - n;\n\t\t\t\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\t\t\t\tn += c;\n\t\t\t\t\tp -= c;\n\t\t\t\t\tk -= c << 3;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\n\t\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t\t}\n\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t} while (true);\n\t\t} while (m >= 258 && n >= 10);\n\n\t\t// not enough input or output--restore pointers and return\n\t\tc = z.avail_in - n;\n\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\tn += c;\n\t\tp -= c;\n\t\tk -= c << 3;\n\n\t\ts.bitb = b;\n\t\ts.bitk = k;\n\t\tz.avail_in = n;\n\t\tz.total_in += p - z.next_in_index;\n\t\tz.next_in_index = p;\n\t\ts.write = q;\n\n\t\treturn Z_OK;\n\t}\n\n\tthat.init = function (bl, bd, tl, tl_index, td, td_index) {\n\t\tmode = START;\n\t\tlbits = /* (byte) */bl;\n\t\tdbits = /* (byte) */bd;\n\t\tltree = tl;\n\t\tltree_index = tl_index;\n\t\tdtree = td;\n\t\tdtree_index = td_index;\n\t\ttree = null;\n\t};\n\n\tthat.proc = function (s, z, r) {\n\t\tlet j; // temporary storage\n\t\tlet tindex; // temporary pointer\n\t\tlet e; // extra bits or operation\n\t\tlet b = 0; // bit buffer\n\t\tlet k = 0; // bits in bit buffer\n\t\tlet p = 0; // input data pointer\n\t\tlet n; // bytes available there\n\t\tlet q; // output win write pointer\n\t\tlet m; // bytes to end of win or read pointer\n\t\tlet f; // pointer to copy strings from\n\n\t\t// copy input/output information to locals (UPDATE macro restores)\n\t\tp = z.next_in_index;\n\t\tn = z.avail_in;\n\t\tb = s.bitb;\n\t\tk = s.bitk;\n\t\tq = s.write;\n\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t// process input and output based on current state\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tswitch (mode) {\n\t\t\t\t// waiting for \"i:\"=input, \"o:\"=output, \"x:\"=nothing\n\t\t\t\tcase START: // x: set up for LEN\n\t\t\t\t\tif (m >= 258 && n >= 10) {\n\n\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\tr = inflate_fast(lbits, dbits, ltree, ltree_index, dtree, dtree_index, s, z);\n\n\t\t\t\t\t\tp = z.next_in_index;\n\t\t\t\t\t\tn = z.avail_in;\n\t\t\t\t\t\tb = s.bitb;\n\t\t\t\t\t\tk = s.bitk;\n\t\t\t\t\t\tq = s.write;\n\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\t\tif (r != Z_OK) {\n\t\t\t\t\t\t\tmode = r == Z_STREAM_END ? WASH : BADCODE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tneed = lbits;\n\t\t\t\t\ttree = ltree;\n\t\t\t\t\ttree_index = ltree_index;\n\n\t\t\t\t\tmode = LEN;\n\t\t\t\t/* falls through */\n\t\t\t\tcase LEN: // i: get length/literal/eob next\n\t\t\t\t\tj = need;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\ttindex = (tree_index + (b & inflate_mask[j])) * 3;\n\n\t\t\t\t\tb >>>= (tree[tindex + 1]);\n\t\t\t\t\tk -= (tree[tindex + 1]);\n\n\t\t\t\t\te = tree[tindex];\n\n\t\t\t\t\tif (e === 0) { // literal\n\t\t\t\t\t\tlit = tree[tindex + 2];\n\t\t\t\t\t\tmode = LIT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 16) !== 0) { // length\n\t\t\t\t\t\tget = e & 15;\n\t\t\t\t\t\tlen = tree[tindex + 2];\n\t\t\t\t\t\tmode = LENEXT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 64) === 0) { // next table\n\t\t\t\t\t\tneed = e;\n\t\t\t\t\t\ttree_index = tindex / 3 + tree[tindex + 2];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 32) !== 0) { // end of block\n\t\t\t\t\t\tmode = WASH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tmode = BADCODE; // invalid code\n\t\t\t\t\tz.msg = \"invalid literal/length code\";\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tcase LENEXT: // i: getting length extra (have base)\n\t\t\t\t\tj = get;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tlen += (b & inflate_mask[j]);\n\n\t\t\t\t\tb >>= j;\n\t\t\t\t\tk -= j;\n\n\t\t\t\t\tneed = dbits;\n\t\t\t\t\ttree = dtree;\n\t\t\t\t\ttree_index = dtree_index;\n\t\t\t\t\tmode = DIST;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DIST: // i: get distance next\n\t\t\t\t\tj = need;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\ttindex = (tree_index + (b & inflate_mask[j])) * 3;\n\n\t\t\t\t\tb >>= tree[tindex + 1];\n\t\t\t\t\tk -= tree[tindex + 1];\n\n\t\t\t\t\te = (tree[tindex]);\n\t\t\t\t\tif ((e & 16) !== 0) { // distance\n\t\t\t\t\t\tget = e & 15;\n\t\t\t\t\t\tdist = tree[tindex + 2];\n\t\t\t\t\t\tmode = DISTEXT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 64) === 0) { // next table\n\t\t\t\t\t\tneed = e;\n\t\t\t\t\t\ttree_index = tindex / 3 + tree[tindex + 2];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tmode = BADCODE; // invalid code\n\t\t\t\t\tz.msg = \"invalid distance code\";\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tcase DISTEXT: // i: getting distance extra\n\t\t\t\t\tj = get;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tdist += (b & inflate_mask[j]);\n\n\t\t\t\t\tb >>= j;\n\t\t\t\t\tk -= j;\n\n\t\t\t\t\tmode = COPY;\n\t\t\t\t/* falls through */\n\t\t\t\tcase COPY: // o: copying bytes in win, waiting for space\n\t\t\t\t\tf = q - dist;\n\t\t\t\t\twhile (f < 0) { // modulo win size-\"while\" instead\n\t\t\t\t\t\tf += s.end; // of \"if\" handles invalid distances\n\t\t\t\t\t}\n\t\t\t\t\twhile (len !== 0) {\n\n\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\t\tr = s.inflate_flush(z, r);\n\t\t\t\t\t\t\t\tq = s.write;\n\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ts.win[q++] = s.win[f++];\n\t\t\t\t\t\tm--;\n\n\t\t\t\t\t\tif (f == s.end)\n\t\t\t\t\t\t\tf = 0;\n\t\t\t\t\t\tlen--;\n\t\t\t\t\t}\n\t\t\t\t\tmode = START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase LIT: // o: got literal, waiting for output space\n\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\tr = s.inflate_flush(z, r);\n\t\t\t\t\t\t\tq = s.write;\n\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tr = Z_OK;\n\n\t\t\t\t\ts.win[q++] = /* (byte) */lit;\n\t\t\t\t\tm--;\n\n\t\t\t\t\tmode = START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase WASH: // o: got eob, possibly more output\n\t\t\t\t\tif (k > 7) { // return unused byte, if any\n\t\t\t\t\t\tk -= 8;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t\tp--; // can always return one\n\t\t\t\t\t}\n\n\t\t\t\t\ts.write = q;\n\t\t\t\t\tr = s.inflate_flush(z, r);\n\t\t\t\t\tq = s.write;\n\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\tif (s.read != s.write) {\n\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tmode = END;\n\t\t\t\t/* falls through */\n\t\t\t\tcase END:\n\t\t\t\t\tr = Z_STREAM_END;\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tcase BADCODE: // x: got error\n\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tdefault:\n\t\t\t\t\tr = Z_STREAM_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t}\n\t\t}\n\t};\n\n\tthat.free = function () {\n\t\t// ZFREE(z, c);\n\t};\n\n}\n\n// InfBlocks\n\n// Table for deflate from PKZIP's appnote.txt.\nconst border = [ // Order of the bit length code lengths\n\t16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\nconst TYPE = 0; // get type bits (3, including end bit)\nconst LENS = 1; // get lengths for stored\nconst STORED = 2;// processing stored block\nconst TABLE = 3; // get table lengths\nconst BTREE = 4; // get bit lengths tree for a dynamic\n// block\nconst DTREE = 5; // get length, distance trees for a\n// dynamic block\nconst CODES = 6; // processing fixed or dynamic block\nconst DRY = 7; // output remaining win bytes\nconst DONELOCKS = 8; // finished last block, done\nconst BADBLOCKS = 9; // ot a data error--stuck here\n\nfunction InfBlocks(z, w) {\n\tconst that = this;\n\n\tlet mode = TYPE; // current inflate_block mode\n\n\tlet left = 0; // if STORED, bytes left to copy\n\n\tlet table = 0; // table lengths (14 bits)\n\tlet index = 0; // index into blens (or border)\n\tlet blens; // bit lengths of codes\n\tconst bb = [0]; // bit length tree depth\n\tconst tb = [0]; // bit length decoding tree\n\n\tconst codes = new InfCodes(); // if CODES, current state\n\n\tlet last = 0; // true if this block is the last block\n\n\tlet hufts = new Int32Array(MANY * 3); // single malloc for tree space\n\tconst check = 0; // check on output\n\tconst inftree = new InfTree();\n\n\tthat.bitk = 0; // bits in bit buffer\n\tthat.bitb = 0; // bit buffer\n\tthat.win = new Uint8Array(w); // sliding win\n\tthat.end = w; // one byte after sliding win\n\tthat.read = 0; // win read pointer\n\tthat.write = 0; // win write pointer\n\n\tthat.reset = function (z, c) {\n\t\tif (c)\n\t\t\tc[0] = check;\n\t\t// if (mode == BTREE || mode == DTREE) {\n\t\t// }\n\t\tif (mode == CODES) {\n\t\t\tcodes.free(z);\n\t\t}\n\t\tmode = TYPE;\n\t\tthat.bitk = 0;\n\t\tthat.bitb = 0;\n\t\tthat.read = that.write = 0;\n\t};\n\n\tthat.reset(z, null);\n\n\t// copy as much as possible from the sliding win to the output area\n\tthat.inflate_flush = function (z, r) {\n\t\tlet n;\n\t\tlet p;\n\t\tlet q;\n\n\t\t// local copies of source and destination pointers\n\t\tp = z.next_out_index;\n\t\tq = that.read;\n\n\t\t// compute number of bytes to copy as far as end of win\n\t\tn = /* (int) */((q <= that.write ? that.write : that.end) - q);\n\t\tif (n > z.avail_out)\n\t\t\tn = z.avail_out;\n\t\tif (n !== 0 && r == Z_BUF_ERROR)\n\t\t\tr = Z_OK;\n\n\t\t// update counters\n\t\tz.avail_out -= n;\n\t\tz.total_out += n;\n\n\t\t// copy as far as end of win\n\t\tz.next_out.set(that.win.subarray(q, q + n), p);\n\t\tp += n;\n\t\tq += n;\n\n\t\t// see if more to copy at beginning of win\n\t\tif (q == that.end) {\n\t\t\t// wrap pointers\n\t\t\tq = 0;\n\t\t\tif (that.write == that.end)\n\t\t\t\tthat.write = 0;\n\n\t\t\t// compute bytes to copy\n\t\t\tn = that.write - q;\n\t\t\tif (n > z.avail_out)\n\t\t\t\tn = z.avail_out;\n\t\t\tif (n !== 0 && r == Z_BUF_ERROR)\n\t\t\t\tr = Z_OK;\n\n\t\t\t// update counters\n\t\t\tz.avail_out -= n;\n\t\t\tz.total_out += n;\n\n\t\t\t// copy\n\t\t\tz.next_out.set(that.win.subarray(q, q + n), p);\n\t\t\tp += n;\n\t\t\tq += n;\n\t\t}\n\n\t\t// update pointers\n\t\tz.next_out_index = p;\n\t\tthat.read = q;\n\n\t\t// done\n\t\treturn r;\n\t};\n\n\tthat.proc = function (z, r) {\n\t\tlet t; // temporary storage\n\t\tlet b; // bit buffer\n\t\tlet k; // bits in bit buffer\n\t\tlet p; // input data pointer\n\t\tlet n; // bytes available there\n\t\tlet q; // output win write pointer\n\t\tlet m; // bytes to end of win or read pointer\n\n\t\tlet i;\n\n\t\t// copy input/output information to locals (UPDATE macro restores)\n\t\t// {\n\t\tp = z.next_in_index;\n\t\tn = z.avail_in;\n\t\tb = that.bitb;\n\t\tk = that.bitk;\n\t\t// }\n\t\t// {\n\t\tq = that.write;\n\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t// }\n\n\t\t// process input based on current state\n\t\t// DEBUG dtree\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tlet bl, bd, tl, td, bl_, bd_, tl_, td_;\n\t\t\tswitch (mode) {\n\t\t\t\tcase TYPE:\n\n\t\t\t\t\twhile (k < (3)) {\n\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\t\t\t\t\tt = /* (int) */(b & 7);\n\t\t\t\t\tlast = t & 1;\n\n\t\t\t\t\tswitch (t >>> 1) {\n\t\t\t\t\t\tcase 0: // stored\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tt = k & 7; // go to byte boundary\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (t);\n\t\t\t\t\t\t\tk -= (t);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tmode = LENS; // get length of stored block\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1: // fixed\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tbl = []; // new Array(1);\n\t\t\t\t\t\t\tbd = []; // new Array(1);\n\t\t\t\t\t\t\ttl = [[]]; // new Array(1);\n\t\t\t\t\t\t\ttd = [[]]; // new Array(1);\n\n\t\t\t\t\t\t\tInfTree.inflate_trees_fixed(bl, bd, tl, td);\n\t\t\t\t\t\t\tcodes.init(bl[0], bd[0], tl[0], 0, td[0], 0);\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\tmode = CODES;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2: // dynamic\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\tmode = TABLE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3: // illegal\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t\tz.msg = \"invalid block type\";\n\t\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase LENS:\n\n\t\t\t\t\twhile (k < (32)) {\n\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((((~b) >>> 16) & 0xffff) != (b & 0xffff)) {\n\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\tz.msg = \"invalid stored block lengths\";\n\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tleft = (b & 0xffff);\n\t\t\t\t\tb = k = 0; // dump bits\n\t\t\t\t\tmode = left !== 0 ? STORED : (last !== 0 ? DRY : TYPE);\n\t\t\t\t\tbreak;\n\t\t\t\tcase STORED:\n\t\t\t\t\tif (n === 0) {\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\tif (q == that.end && that.read !== 0) {\n\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\tr = that.inflate_flush(z, r);\n\t\t\t\t\t\t\tq = that.write;\n\t\t\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\t\t\tif (q == that.end && that.read !== 0) {\n\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tr = Z_OK;\n\n\t\t\t\t\tt = left;\n\t\t\t\t\tif (t > n)\n\t\t\t\t\t\tt = n;\n\t\t\t\t\tif (t > m)\n\t\t\t\t\t\tt = m;\n\t\t\t\t\tthat.win.set(z.read_buf(p, t), q);\n\t\t\t\t\tp += t;\n\t\t\t\t\tn -= t;\n\t\t\t\t\tq += t;\n\t\t\t\t\tm -= t;\n\t\t\t\t\tif ((left -= t) !== 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tmode = last !== 0 ? DRY : TYPE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TABLE:\n\n\t\t\t\t\twhile (k < (14)) {\n\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\ttable = t = (b & 0x3fff);\n\t\t\t\t\tif ((t & 0x1f) > 29 || ((t >> 5) & 0x1f) > 29) {\n\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\tz.msg = \"too many length or distance symbols\";\n\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tt = 258 + (t & 0x1f) + ((t >> 5) & 0x1f);\n\t\t\t\t\tif (!blens || blens.length < t) {\n\t\t\t\t\t\tblens = []; // new Array(t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (i = 0; i < t; i++) {\n\t\t\t\t\t\t\tblens[i] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// {\n\t\t\t\t\tb >>>= (14);\n\t\t\t\t\tk -= (14);\n\t\t\t\t\t// }\n\n\t\t\t\t\tindex = 0;\n\t\t\t\t\tmode = BTREE;\n\t\t\t\t/* falls through */\n\t\t\t\tcase BTREE:\n\t\t\t\t\twhile (index < 4 + (table >>> 10)) {\n\t\t\t\t\t\twhile (k < (3)) {\n\t\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tblens[border[index++]] = b & 7;\n\n\t\t\t\t\t\t// {\n\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (index < 19) {\n\t\t\t\t\t\tblens[border[index++]] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbb[0] = 7;\n\t\t\t\t\tt = inftree.inflate_trees_bits(blens, bb, tb, hufts, z);\n\t\t\t\t\tif (t != Z_OK) {\n\t\t\t\t\t\tr = t;\n\t\t\t\t\t\tif (r == Z_DATA_ERROR) {\n\t\t\t\t\t\t\tblens = null;\n\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\n\t\t\t\t\tindex = 0;\n\t\t\t\t\tmode = DTREE;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DTREE:\n\t\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tt = table;\n\t\t\t\t\t\tif (index >= 258 + (t & 0x1f) + ((t >> 5) & 0x1f)) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet j, c;\n\n\t\t\t\t\t\tt = bb[0];\n\n\t\t\t\t\t\twhile (k < (t)) {\n\t\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if (tb[0] == -1) {\n\t\t\t\t\t\t// System.err.println(\"null...\");\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\tt = hufts[(tb[0] + (b & inflate_mask[t])) * 3 + 1];\n\t\t\t\t\t\tc = hufts[(tb[0] + (b & inflate_mask[t])) * 3 + 2];\n\n\t\t\t\t\t\tif (c < 16) {\n\t\t\t\t\t\t\tb >>>= (t);\n\t\t\t\t\t\t\tk -= (t);\n\t\t\t\t\t\t\tblens[index++] = c;\n\t\t\t\t\t\t} else { // c == 16..18\n\t\t\t\t\t\t\ti = c == 18 ? 7 : c - 14;\n\t\t\t\t\t\t\tj = c == 18 ? 11 : 3;\n\n\t\t\t\t\t\t\twhile (k < (t + i)) {\n\t\t\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tb >>>= (t);\n\t\t\t\t\t\t\tk -= (t);\n\n\t\t\t\t\t\t\tj += (b & inflate_mask[i]);\n\n\t\t\t\t\t\t\tb >>>= (i);\n\t\t\t\t\t\t\tk -= (i);\n\n\t\t\t\t\t\t\ti = index;\n\t\t\t\t\t\t\tt = table;\n\t\t\t\t\t\t\tif (i + j > 258 + (t & 0x1f) + ((t >> 5) & 0x1f) || (c == 16 && i < 1)) {\n\t\t\t\t\t\t\t\tblens = null;\n\t\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t\t\tz.msg = \"invalid bit length repeat\";\n\t\t\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc = c == 16 ? blens[i - 1] : 0;\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\tblens[i++] = c;\n\t\t\t\t\t\t\t} while (--j !== 0);\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttb[0] = -1;\n\t\t\t\t\t// {\n\t\t\t\t\tbl_ = []; // new Array(1);\n\t\t\t\t\tbd_ = []; // new Array(1);\n\t\t\t\t\ttl_ = []; // new Array(1);\n\t\t\t\t\ttd_ = []; // new Array(1);\n\t\t\t\t\tbl_[0] = 9; // must be <= 9 for lookahead assumptions\n\t\t\t\t\tbd_[0] = 6; // must be <= 9 for lookahead assumptions\n\n\t\t\t\t\tt = table;\n\t\t\t\t\tt = inftree.inflate_trees_dynamic(257 + (t & 0x1f), 1 + ((t >> 5) & 0x1f), blens, bl_, bd_, tl_, td_, hufts, z);\n\n\t\t\t\t\tif (t != Z_OK) {\n\t\t\t\t\t\tif (t == Z_DATA_ERROR) {\n\t\t\t\t\t\t\tblens = null;\n\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tr = t;\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tcodes.init(bl_[0], bd_[0], hufts, tl_[0], hufts, td_[0]);\n\t\t\t\t\t// }\n\t\t\t\t\tmode = CODES;\n\t\t\t\t/* falls through */\n\t\t\t\tcase CODES:\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\n\t\t\t\t\tif ((r = codes.proc(that, z, r)) != Z_STREAM_END) {\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tr = Z_OK;\n\t\t\t\t\tcodes.free(z);\n\n\t\t\t\t\tp = z.next_in_index;\n\t\t\t\t\tn = z.avail_in;\n\t\t\t\t\tb = that.bitb;\n\t\t\t\t\tk = that.bitk;\n\t\t\t\t\tq = that.write;\n\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\n\t\t\t\t\tif (last === 0) {\n\t\t\t\t\t\tmode = TYPE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tmode = DRY;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DRY:\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\tr = that.inflate_flush(z, r);\n\t\t\t\t\tq = that.write;\n\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\tif (that.read != that.write) {\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tmode = DONELOCKS;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DONELOCKS:\n\t\t\t\t\tr = Z_STREAM_END;\n\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\tcase BADBLOCKS:\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\treturn that.inflate_flush(z, r);\n\n\t\t\t\tdefault:\n\t\t\t\t\tr = Z_STREAM_ERROR;\n\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t}\n\t\t}\n\t};\n\n\tthat.free = function (z) {\n\t\tthat.reset(z, null);\n\t\tthat.win = null;\n\t\thufts = null;\n\t\t// ZFREE(z, s);\n\t};\n\n\tthat.set_dictionary = function (d, start, n) {\n\t\tthat.win.set(d.subarray(start, start + n), 0);\n\t\tthat.read = that.write = n;\n\t};\n\n\t// Returns true if inflate is currently at the end of a block generated\n\t// by Z_SYNC_FLUSH or Z_FULL_FLUSH.\n\tthat.sync_point = function () {\n\t\treturn mode == LENS ? 1 : 0;\n\t};\n\n}\n\n// Inflate\n\n// preset dictionary flag in zlib header\nconst PRESET_DICT = 0x20;\n\nconst Z_DEFLATED = 8;\n\nconst METHOD = 0; // waiting for method byte\nconst FLAG = 1; // waiting for flag byte\nconst DICT4 = 2; // four dictionary check bytes to go\nconst DICT3 = 3; // three dictionary check bytes to go\nconst DICT2 = 4; // two dictionary check bytes to go\nconst DICT1 = 5; // one dictionary check byte to go\nconst DICT0 = 6; // waiting for inflateSetDictionary\nconst BLOCKS = 7; // decompressing blocks\nconst DONE = 12; // finished check, done\nconst BAD = 13; // got an error--stay here\n\nconst mark = [0, 0, 0xff, 0xff];\n\nfunction Inflate() {\n\tconst that = this;\n\n\tthat.mode = 0; // current inflate mode\n\n\t// mode dependent information\n\tthat.method = 0; // if FLAGS, method byte\n\n\t// if CHECK, check values to compare\n\tthat.was = [0]; // new Array(1); // computed check value\n\tthat.need = 0; // stream check value\n\n\t// if BAD, inflateSync's marker bytes count\n\tthat.marker = 0;\n\n\t// mode independent information\n\tthat.wbits = 0; // log2(win size) (8..15, defaults to 15)\n\n\t// this.blocks; // current inflate_blocks state\n\n\tfunction inflateReset(z) {\n\t\tif (!z || !z.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\n\t\tz.total_in = z.total_out = 0;\n\t\tz.msg = null;\n\t\tz.istate.mode = BLOCKS;\n\t\tz.istate.blocks.reset(z, null);\n\t\treturn Z_OK;\n\t}\n\n\tthat.inflateEnd = function (z) {\n\t\tif (that.blocks)\n\t\t\tthat.blocks.free(z);\n\t\tthat.blocks = null;\n\t\t// ZFREE(z, z->state);\n\t\treturn Z_OK;\n\t};\n\n\tthat.inflateInit = function (z, w) {\n\t\tz.msg = null;\n\t\tthat.blocks = null;\n\n\t\t// set win size\n\t\tif (w < 8 || w > 15) {\n\t\t\tthat.inflateEnd(z);\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\tthat.wbits = w;\n\n\t\tz.istate.blocks = new InfBlocks(z, 1 << w);\n\n\t\t// reset state\n\t\tinflateReset(z);\n\t\treturn Z_OK;\n\t};\n\n\tthat.inflate = function (z, f) {\n\t\tlet r;\n\t\tlet b;\n\n\t\tif (!z || !z.istate || !z.next_in)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst istate = z.istate;\n\t\tf = f == Z_FINISH ? Z_BUF_ERROR : Z_OK;\n\t\tr = Z_BUF_ERROR;\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tswitch (istate.mode) {\n\t\t\t\tcase METHOD:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tif (((istate.method = z.read_byte(z.next_in_index++)) & 0xf) != Z_DEFLATED) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tz.msg = \"unknown compression method\";\n\t\t\t\t\t\tistate.marker = 5; // can't try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((istate.method >> 4) + 8 > istate.wbits) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tz.msg = \"invalid win size\";\n\t\t\t\t\t\tistate.marker = 5; // can't try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tistate.mode = FLAG;\n\t\t\t\t/* falls through */\n\t\t\t\tcase FLAG:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tb = (z.read_byte(z.next_in_index++)) & 0xff;\n\n\t\t\t\t\tif ((((istate.method << 8) + b) % 31) !== 0) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tz.msg = \"incorrect header check\";\n\t\t\t\t\t\tistate.marker = 5; // can't try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((b & PRESET_DICT) === 0) {\n\t\t\t\t\t\tistate.mode = BLOCKS;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tistate.mode = DICT4;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT4:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need = ((z.read_byte(z.next_in_index++) & 0xff) << 24) & 0xff000000;\n\t\t\t\t\tistate.mode = DICT3;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT3:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need += ((z.read_byte(z.next_in_index++) & 0xff) << 16) & 0xff0000;\n\t\t\t\t\tistate.mode = DICT2;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT2:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need += ((z.read_byte(z.next_in_index++) & 0xff) << 8) & 0xff00;\n\t\t\t\t\tistate.mode = DICT1;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT1:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need += (z.read_byte(z.next_in_index++) & 0xff);\n\t\t\t\t\tistate.mode = DICT0;\n\t\t\t\t\treturn Z_NEED_DICT;\n\t\t\t\tcase DICT0:\n\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\tz.msg = \"need dictionary\";\n\t\t\t\t\tistate.marker = 0; // can try inflateSync\n\t\t\t\t\treturn Z_STREAM_ERROR;\n\t\t\t\tcase BLOCKS:\n\n\t\t\t\t\tr = istate.blocks.proc(z, r);\n\t\t\t\t\tif (r == Z_DATA_ERROR) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tistate.marker = 0; // can try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (r == Z_OK) {\n\t\t\t\t\t\tr = f;\n\t\t\t\t\t}\n\t\t\t\t\tif (r != Z_STREAM_END) {\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}\n\t\t\t\t\tr = f;\n\t\t\t\t\tistate.blocks.reset(z, istate.was);\n\t\t\t\t\tistate.mode = DONE;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DONE:\n\t\t\t\t\tz.avail_in = 0;\n\t\t\t\t\treturn Z_STREAM_END;\n\t\t\t\tcase BAD:\n\t\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t\tdefault:\n\t\t\t\t\treturn Z_STREAM_ERROR;\n\t\t\t}\n\t\t}\n\t};\n\n\tthat.inflateSetDictionary = function (z, dictionary, dictLength) {\n\t\tlet index = 0, length = dictLength;\n\t\tif (!z || !z.istate || z.istate.mode != DICT0)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst istate = z.istate;\n\t\tif (length >= (1 << istate.wbits)) {\n\t\t\tlength = (1 << istate.wbits) - 1;\n\t\t\tindex = dictLength - length;\n\t\t}\n\t\tistate.blocks.set_dictionary(dictionary, index, length);\n\t\tistate.mode = BLOCKS;\n\t\treturn Z_OK;\n\t};\n\n\tthat.inflateSync = function (z) {\n\t\tlet n; // number of bytes to look at\n\t\tlet p; // pointer to bytes\n\t\tlet m; // number of marker bytes found in a row\n\t\tlet r, w; // temporaries to save total_in and total_out\n\n\t\t// set up\n\t\tif (!z || !z.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst istate = z.istate;\n\t\tif (istate.mode != BAD) {\n\t\t\tistate.mode = BAD;\n\t\t\tistate.marker = 0;\n\t\t}\n\t\tif ((n = z.avail_in) === 0)\n\t\t\treturn Z_BUF_ERROR;\n\t\tp = z.next_in_index;\n\t\tm = istate.marker;\n\n\t\t// search\n\t\twhile (n !== 0 && m < 4) {\n\t\t\tif (z.read_byte(p) == mark[m]) {\n\t\t\t\tm++;\n\t\t\t} else if (z.read_byte(p) !== 0) {\n\t\t\t\tm = 0;\n\t\t\t} else {\n\t\t\t\tm = 4 - m;\n\t\t\t}\n\t\t\tp++;\n\t\t\tn--;\n\t\t}\n\n\t\t// restore\n\t\tz.total_in += p - z.next_in_index;\n\t\tz.next_in_index = p;\n\t\tz.avail_in = n;\n\t\tistate.marker = m;\n\n\t\t// return no joy or set up to restart on a new block\n\t\tif (m != 4) {\n\t\t\treturn Z_DATA_ERROR;\n\t\t}\n\t\tr = z.total_in;\n\t\tw = z.total_out;\n\t\tinflateReset(z);\n\t\tz.total_in = r;\n\t\tz.total_out = w;\n\t\tistate.mode = BLOCKS;\n\t\treturn Z_OK;\n\t};\n\n\t// Returns true if inflate is currently at the end of a block generated\n\t// by Z_SYNC_FLUSH or Z_FULL_FLUSH. This function is used by one PPP\n\t// implementation to provide an additional safety check. PPP uses\n\t// Z_SYNC_FLUSH\n\t// but removes the length bytes of the resulting empty stored block. When\n\t// decompressing, PPP checks that at the end of input packet, inflate is\n\t// waiting for these length bytes.\n\tthat.inflateSyncPoint = function (z) {\n\t\tif (!z || !z.istate || !z.istate.blocks)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn z.istate.blocks.sync_point();\n\t};\n}\n\n// ZStream\n\nfunction ZStream() {\n}\n\nZStream.prototype = {\n\tinflateInit(bits) {\n\t\tconst that = this;\n\t\tthat.istate = new Inflate();\n\t\tif (!bits)\n\t\t\tbits = MAX_BITS;\n\t\treturn that.istate.inflateInit(that, bits);\n\t},\n\n\tinflate(f) {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.istate.inflate(that, f);\n\t},\n\n\tinflateEnd() {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst ret = that.istate.inflateEnd(that);\n\t\tthat.istate = null;\n\t\treturn ret;\n\t},\n\n\tinflateSync() {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.istate.inflateSync(that);\n\t},\n\tinflateSetDictionary(dictionary, dictLength) {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.istate.inflateSetDictionary(that, dictionary, dictLength);\n\t},\n\tread_byte(start) {\n\t\tconst that = this;\n\t\treturn that.next_in[start];\n\t},\n\tread_buf(start, size) {\n\t\tconst that = this;\n\t\treturn that.next_in.subarray(start, start + size);\n\t}\n};\n\n// Inflater\n\nfunction ZipInflate(options) {\n\tconst that = this;\n\tconst z = new ZStream();\n\tconst bufsize = options && options.chunkSize ? Math.floor(options.chunkSize * 2) : 128 * 1024;\n\tconst flush = Z_NO_FLUSH;\n\tconst buf = new Uint8Array(bufsize);\n\tlet nomoreinput = false;\n\n\tz.inflateInit();\n\tz.next_out = buf;\n\n\tthat.append = function (data, onprogress) {\n\t\tconst buffers = [];\n\t\tlet err, array, lastIndex = 0, bufferIndex = 0, bufferSize = 0;\n\t\tif (data.length === 0)\n\t\t\treturn;\n\t\tz.next_in_index = 0;\n\t\tz.next_in = data;\n\t\tz.avail_in = data.length;\n\t\tdo {\n\t\t\tz.next_out_index = 0;\n\t\t\tz.avail_out = bufsize;\n\t\t\tif ((z.avail_in === 0) && (!nomoreinput)) { // if buffer is empty and more input is available, refill it\n\t\t\t\tz.next_in_index = 0;\n\t\t\t\tnomoreinput = true;\n\t\t\t}\n\t\t\terr = z.inflate(flush);\n\t\t\tif (nomoreinput && (err === Z_BUF_ERROR)) {\n\t\t\t\tif (z.avail_in !== 0)\n\t\t\t\t\tthrow new Error(\"inflating: bad input\");\n\t\t\t} else if (err !== Z_OK && err !== Z_STREAM_END)\n\t\t\t\tthrow new Error(\"inflating: \" + z.msg);\n\t\t\tif ((nomoreinput || err === Z_STREAM_END) && (z.avail_in === data.length))\n\t\t\t\tthrow new Error(\"inflating: bad input\");\n\t\t\tif (z.next_out_index)\n\t\t\t\tif (z.next_out_index === bufsize)\n\t\t\t\t\tbuffers.push(new Uint8Array(buf));\n\t\t\t\telse\n\t\t\t\t\tbuffers.push(buf.subarray(0, z.next_out_index));\n\t\t\tbufferSize += z.next_out_index;\n\t\t\tif (onprogress && z.next_in_index > 0 && z.next_in_index != lastIndex) {\n\t\t\t\tonprogress(z.next_in_index);\n\t\t\t\tlastIndex = z.next_in_index;\n\t\t\t}\n\t\t} while (z.avail_in > 0 || z.avail_out === 0);\n\t\tif (buffers.length > 1) {\n\t\t\tarray = new Uint8Array(bufferSize);\n\t\t\tbuffers.forEach(function (chunk) {\n\t\t\t\tarray.set(chunk, bufferIndex);\n\t\t\t\tbufferIndex += chunk.length;\n\t\t\t});\n\t\t} else {\n\t\t\tarray = buffers[0] ? new Uint8Array(buffers[0]) : new Uint8Array();\n\t\t}\n\t\treturn array;\n\t};\n\tthat.flush = function () {\n\t\tz.inflateEnd();\n\t};\n}\n\nexport {\n\tZipInflate as Inflate\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst MAX_32_BITS = 0xffffffff;\nconst MAX_16_BITS = 0xffff;\nconst COMPRESSION_METHOD_DEFLATE = 0x08;\nconst COMPRESSION_METHOD_STORE = 0x00;\nconst COMPRESSION_METHOD_AES = 0x63;\n\nconst LOCAL_FILE_HEADER_SIGNATURE = 0x04034b50;\nconst SPLIT_ZIP_FILE_SIGNATURE = 0x08074b50;\nconst DATA_DESCRIPTOR_RECORD_SIGNATURE = SPLIT_ZIP_FILE_SIGNATURE;\nconst CENTRAL_FILE_HEADER_SIGNATURE = 0x02014b50;\nconst END_OF_CENTRAL_DIR_SIGNATURE = 0x06054b50;\nconst ZIP64_END_OF_CENTRAL_DIR_SIGNATURE = 0x06064b50;\nconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE = 0x07064b50;\nconst END_OF_CENTRAL_DIR_LENGTH = 22;\nconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH = 20;\nconst ZIP64_END_OF_CENTRAL_DIR_LENGTH = 56;\nconst ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH = END_OF_CENTRAL_DIR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LENGTH;\n\nconst EXTRAFIELD_TYPE_ZIP64 = 0x0001;\nconst EXTRAFIELD_TYPE_AES = 0x9901;\nconst EXTRAFIELD_TYPE_NTFS = 0x000a;\nconst EXTRAFIELD_TYPE_NTFS_TAG1 = 0x0001;\nconst EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP = 0x5455;\nconst EXTRAFIELD_TYPE_UNICODE_PATH = 0x7075;\nconst EXTRAFIELD_TYPE_UNICODE_COMMENT = 0x6375;\nconst EXTRAFIELD_TYPE_USDZ = 0x1986;\n\nconst BITFLAG_ENCRYPTED = 0x01;\nconst BITFLAG_LEVEL = 0x06;\nconst BITFLAG_DATA_DESCRIPTOR = 0x0008;\nconst BITFLAG_LANG_ENCODING_FLAG = 0x0800;\nconst FILE_ATTR_MSDOS_DIR_MASK = 0x10;\n\nconst VERSION_DEFLATE = 0x14;\nconst VERSION_ZIP64 = 0x2D;\nconst VERSION_AES = 0x33;\n\nconst DIRECTORY_SIGNATURE = \"/\";\n\nconst MAX_DATE = new Date(2107, 11, 31);\nconst MIN_DATE = new Date(1980, 0, 1);\n\nconst UNDEFINED_VALUE = undefined;\nconst UNDEFINED_TYPE = \"undefined\";\nconst FUNCTION_TYPE = \"function\";\n\nexport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tSPLIT_ZIP_FILE_SIGNATURE,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_UNICODE_PATH,\n\tEXTRAFIELD_TYPE_UNICODE_COMMENT,\n\tEXTRAFIELD_TYPE_USDZ,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_LEVEL,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tVERSION_DEFLATE,\n\tVERSION_ZIP64,\n\tVERSION_AES,\n\tDIRECTORY_SIGNATURE,\n\tMIN_DATE,\n\tMAX_DATE,\n\tUNDEFINED_VALUE,\n\tUNDEFINED_TYPE,\n\tFUNCTION_TYPE\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n\nexport {\n\tStreamAdapter\n};\n\nclass StreamAdapter {\n\n\tconstructor(Codec) {\n\t\treturn class extends TransformStream {\n\t\t\tconstructor(_format, options) {\n\t\t\t\tconst codec = new Codec(options);\n\t\t\t\tsuper({\n\t\t\t\t\ttransform(chunk, controller) {\n\t\t\t\t\t\tcontroller.enqueue(codec.append(chunk));\n\t\t\t\t\t},\n\t\t\t\t\tflush(controller) {\n\t\t\t\t\t\tconst chunk = codec.flush();\n\t\t\t\t\t\tif (chunk) {\n\t\t\t\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global navigator, CompressionStream, DecompressionStream */\n\nimport {\n\tUNDEFINED_VALUE,\n\tUNDEFINED_TYPE\n} from \"./constants.js\";\nimport { StreamAdapter } from \"./streams/stream-adapter.js\";\n\nconst MINIMUM_CHUNK_SIZE = 64;\nlet maxWorkers = 2;\ntry {\n\tif (typeof navigator != UNDEFINED_TYPE && navigator.hardwareConcurrency) {\n\t\tmaxWorkers = navigator.hardwareConcurrency;\n\t}\n} catch (_error) {\n\t// ignored\n}\nconst DEFAULT_CONFIGURATION = {\n\tchunkSize: 512 * 1024,\n\tmaxWorkers,\n\tterminateWorkerTimeout: 5000,\n\tuseWebWorkers: true,\n\tuseCompressionStream: true,\n\tworkerScripts: UNDEFINED_VALUE,\n\tCompressionStreamNative: typeof CompressionStream != UNDEFINED_TYPE && CompressionStream,\n\tDecompressionStreamNative: typeof DecompressionStream != UNDEFINED_TYPE && DecompressionStream\n};\n\nconst config = Object.assign({}, DEFAULT_CONFIGURATION);\n\nexport {\n\tconfigure,\n\tgetConfiguration,\n\tgetChunkSize\n};\n\nfunction getConfiguration() {\n\treturn config;\n}\n\nfunction getChunkSize(config) {\n\treturn Math.max(config.chunkSize, MINIMUM_CHUNK_SIZE);\n}\n\nfunction configure(configuration) {\n\tconst {\n\t\tbaseURL,\n\t\tchunkSize,\n\t\tmaxWorkers,\n\t\tterminateWorkerTimeout,\n\t\tuseCompressionStream,\n\t\tuseWebWorkers,\n\t\tDeflate,\n\t\tInflate,\n\t\tCompressionStream,\n\t\tDecompressionStream,\n\t\tworkerScripts\n\t} = configuration;\n\tsetIfDefined(\"baseURL\", baseURL);\n\tsetIfDefined(\"chunkSize\", chunkSize);\n\tsetIfDefined(\"maxWorkers\", maxWorkers);\n\tsetIfDefined(\"terminateWorkerTimeout\", terminateWorkerTimeout);\n\tsetIfDefined(\"useCompressionStream\", useCompressionStream);\n\tsetIfDefined(\"useWebWorkers\", useWebWorkers);\n\tif (Deflate) {\n\t\tconfig.CompressionStream = new StreamAdapter(Deflate);\n\t}\n\tif (Inflate) {\n\t\tconfig.DecompressionStream = new StreamAdapter(Inflate);\n\t}\n\tsetIfDefined(\"CompressionStream\", CompressionStream);\n\tsetIfDefined(\"DecompressionStream\", DecompressionStream);\n\tif (workerScripts !== UNDEFINED_VALUE) {\n\t\tconst { deflate, inflate } = workerScripts;\n\t\tif (deflate || inflate) {\n\t\t\tif (!config.workerScripts) {\n\t\t\t\tconfig.workerScripts = {};\n\t\t\t}\n\t\t}\n\t\tif (deflate) {\n\t\t\tif (!Array.isArray(deflate)) {\n\t\t\t\tthrow new Error(\"workerScripts.deflate must be an array\");\n\t\t\t}\n\t\t\tconfig.workerScripts.deflate = deflate;\n\t\t}\n\t\tif (inflate) {\n\t\t\tif (!Array.isArray(inflate)) {\n\t\t\t\tthrow new Error(\"workerScripts.inflate must be an array\");\n\t\t\t}\n\t\t\tconfig.workerScripts.inflate = inflate;\n\t\t}\n\t}\n}\n\nfunction setIfDefined(propertyName, propertyValue) {\n\tif (propertyValue !== UNDEFINED_VALUE) {\n\t\tconfig[propertyName] = propertyValue;\n\t}\n}\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst table = [];\nfor (let i = 0; i < 256; i++) {\n\tlet t = i;\n\tfor (let j = 0; j < 8; j++) {\n\t\tif (t & 1) {\n\t\t\tt = (t >>> 1) ^ 0xEDB88320;\n\t\t} else {\n\t\t\tt = t >>> 1;\n\t\t}\n\t}\n\ttable[i] = t;\n}\n\nclass Crc32 {\n\n\tconstructor(crc) {\n\t\tthis.crc = crc || -1;\n\t}\n\n\tappend(data) {\n\t\tlet crc = this.crc | 0;\n\t\tfor (let offset = 0, length = data.length | 0; offset < length; offset++) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xFF];\n\t\t}\n\t\tthis.crc = crc;\n\t}\n\n\tget() {\n\t\treturn ~this.crc;\n\t}\n}\n\nexport {\n\tCrc32\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n\nimport { Crc32 } from \"./codecs/crc32.js\";\n\nclass Crc32Stream extends TransformStream {\n\n\tconstructor() {\n\t\tlet stream;\n\t\tconst crc32 = new Crc32();\n\t\tsuper({\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tcrc32.append(chunk);\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\tconst value = new Uint8Array(4);\n\t\t\t\tconst dataView = new DataView(value.buffer);\n\t\t\t\tdataView.setUint32(0, crc32.get());\n\t\t\t\tstream.value = value;\n\t\t\t}\n\t\t});\n\t\tstream = this;\n\t}\n}\n\nexport {\n\tCrc32Stream\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextEncoder */\n\nimport { UNDEFINED_TYPE } from \"../constants.js\";\n\nexport {\n\tencodeText\n};\n\nfunction encodeText(value) {\n\tif (typeof TextEncoder == UNDEFINED_TYPE) {\n\t\tvalue = unescape(encodeURIComponent(value));\n\t\tconst result = new Uint8Array(value.length);\n\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\tresult[i] = value.charCodeAt(i);\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn new TextEncoder().encode(value);\n\t}\n}","// Derived from https://github.com/xqdoo00o/jszip/blob/master/lib/sjcl.js and https://github.com/bitwiseshiftleft/sjcl\n\n// deno-lint-ignore-file no-this-alias\n\n/*\n * SJCL is open. You can use, modify and redistribute it under a BSD\n * license or under the GNU GPL, version 2.0.\n */\n\n/** @fileOverview Javascript cryptography implementation.\n *\n * Crush to remove comments, shorten variable names and\n * generally reduce transmission size.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/*jslint indent: 2, bitwise: false, nomen: false, plusplus: false, white: false, regexp: false */\n\n/** @fileOverview Arrays of bits, encoded as arrays of Numbers.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bits, encoded as arrays of Numbers.\n * @namespace\n * @description\n * <p>\n * These objects are the currency accepted by SJCL's crypto functions.\n * </p>\n *\n * <p>\n * Most of our crypto primitives operate on arrays of 4-byte words internally,\n * but many of them can take arguments that are not a multiple of 4 bytes.\n * This library encodes arrays of bits (whose size need not be a multiple of 8\n * bits) as arrays of 32-bit words.  The bits are packed, big-endian, into an\n * array of words, 32 bits at a time.  Since the words are double-precision\n * floating point numbers, they fit some extra data.  We use this (in a private,\n * possibly-changing manner) to encode the number of bits actually  present\n * in the last word of the array.\n * </p>\n *\n * <p>\n * Because bitwise ops clear this out-of-band data, these arrays can be passed\n * to ciphers like AES which want arrays of words.\n * </p>\n */\nconst bitArray = {\n\t/**\n\t * Concatenate two bit arrays.\n\t * @param {bitArray} a1 The first array.\n\t * @param {bitArray} a2 The second array.\n\t * @return {bitArray} The concatenation of a1 and a2.\n\t */\n\tconcat(a1, a2) {\n\t\tif (a1.length === 0 || a2.length === 0) {\n\t\t\treturn a1.concat(a2);\n\t\t}\n\n\t\tconst last = a1[a1.length - 1], shift = bitArray.getPartial(last);\n\t\tif (shift === 32) {\n\t\t\treturn a1.concat(a2);\n\t\t} else {\n\t\t\treturn bitArray._shiftRight(a2, shift, last | 0, a1.slice(0, a1.length - 1));\n\t\t}\n\t},\n\n\t/**\n\t * Find the length of an array of bits.\n\t * @param {bitArray} a The array.\n\t * @return {Number} The length of a, in bits.\n\t */\n\tbitLength(a) {\n\t\tconst l = a.length;\n\t\tif (l === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst x = a[l - 1];\n\t\treturn (l - 1) * 32 + bitArray.getPartial(x);\n\t},\n\n\t/**\n\t * Truncate an array.\n\t * @param {bitArray} a The array.\n\t * @param {Number} len The length to truncate to, in bits.\n\t * @return {bitArray} A new array, truncated to len bits.\n\t */\n\tclamp(a, len) {\n\t\tif (a.length * 32 < len) {\n\t\t\treturn a;\n\t\t}\n\t\ta = a.slice(0, Math.ceil(len / 32));\n\t\tconst l = a.length;\n\t\tlen = len & 31;\n\t\tif (l > 0 && len) {\n\t\t\ta[l - 1] = bitArray.partial(len, a[l - 1] & 0x80000000 >> (len - 1), 1);\n\t\t}\n\t\treturn a;\n\t},\n\n\t/**\n\t * Make a partial word for a bit array.\n\t * @param {Number} len The number of bits in the word.\n\t * @param {Number} x The bits.\n\t * @param {Number} [_end=0] Pass 1 if x has already been shifted to the high side.\n\t * @return {Number} The partial word.\n\t */\n\tpartial(len, x, _end) {\n\t\tif (len === 32) {\n\t\t\treturn x;\n\t\t}\n\t\treturn (_end ? x | 0 : x << (32 - len)) + len * 0x10000000000;\n\t},\n\n\t/**\n\t * Get the number of bits used by a partial word.\n\t * @param {Number} x The partial word.\n\t * @return {Number} The number of bits used by the partial word.\n\t */\n\tgetPartial(x) {\n\t\treturn Math.round(x / 0x10000000000) || 32;\n\t},\n\n\t/** Shift an array right.\n\t * @param {bitArray} a The array to shift.\n\t * @param {Number} shift The number of bits to shift.\n\t * @param {Number} [carry=0] A byte to carry in\n\t * @param {bitArray} [out=[]] An array to prepend to the output.\n\t * @private\n\t */\n\t_shiftRight(a, shift, carry, out) {\n\t\tif (out === undefined) {\n\t\t\tout = [];\n\t\t}\n\n\t\tfor (; shift >= 32; shift -= 32) {\n\t\t\tout.push(carry);\n\t\t\tcarry = 0;\n\t\t}\n\t\tif (shift === 0) {\n\t\t\treturn out.concat(a);\n\t\t}\n\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tout.push(carry | a[i] >>> shift);\n\t\t\tcarry = a[i] << (32 - shift);\n\t\t}\n\t\tconst last2 = a.length ? a[a.length - 1] : 0;\n\t\tconst shift2 = bitArray.getPartial(last2);\n\t\tout.push(bitArray.partial(shift + shift2 & 31, (shift + shift2 > 32) ? carry : out.pop(), 1));\n\t\treturn out;\n\t}\n};\n\n/** @fileOverview Bit array codec implementations.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bytes\n * @namespace\n */\nconst codec = {\n\tbytes: {\n\t\t/** Convert from a bitArray to an array of bytes. */\n\t\tfromBits(arr) {\n\t\t\tconst bl = bitArray.bitLength(arr);\n\t\t\tconst byteLength = bl / 8;\n\t\t\tconst out = new Uint8Array(byteLength);\n\t\t\tlet tmp;\n\t\t\tfor (let i = 0; i < byteLength; i++) {\n\t\t\t\tif ((i & 3) === 0) {\n\t\t\t\t\ttmp = arr[i / 4];\n\t\t\t\t}\n\t\t\t\tout[i] = tmp >>> 24;\n\t\t\t\ttmp <<= 8;\n\t\t\t}\n\t\t\treturn out;\n\t\t},\n\t\t/** Convert from an array of bytes to a bitArray. */\n\t\ttoBits(bytes) {\n\t\t\tconst out = [];\n\t\t\tlet i;\n\t\t\tlet tmp = 0;\n\t\t\tfor (i = 0; i < bytes.length; i++) {\n\t\t\t\ttmp = tmp << 8 | bytes[i];\n\t\t\t\tif ((i & 3) === 3) {\n\t\t\t\t\tout.push(tmp);\n\t\t\t\t\ttmp = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i & 3) {\n\t\t\t\tout.push(bitArray.partial(8 * (i & 3), tmp));\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n};\n\nconst hash = {};\n\n/**\n * Context for a SHA-1 operation in progress.\n * @constructor\n */\nhash.sha1 = class {\n\tconstructor(hash) {\n\t\tconst sha1 = this;\n\t\t/**\n\t\t * The hash's block size, in bits.\n\t\t * @constant\n\t\t */\n\t\tsha1.blockSize = 512;\n\t\t/**\n\t\t * The SHA-1 initialization vector.\n\t\t * @private\n\t\t */\n\t\tsha1._init = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0];\n\t\t/**\n\t\t * The SHA-1 hash key.\n\t\t * @private\n\t\t */\n\t\tsha1._key = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\t\tif (hash) {\n\t\t\tsha1._h = hash._h.slice(0);\n\t\t\tsha1._buffer = hash._buffer.slice(0);\n\t\t\tsha1._length = hash._length;\n\t\t} else {\n\t\t\tsha1.reset();\n\t\t}\n\t}\n\n\t/**\n\t * Reset the hash state.\n\t * @return this\n\t */\n\treset() {\n\t\tconst sha1 = this;\n\t\tsha1._h = sha1._init.slice(0);\n\t\tsha1._buffer = [];\n\t\tsha1._length = 0;\n\t\treturn sha1;\n\t}\n\n\t/**\n\t * Input several words to the hash.\n\t * @param {bitArray|String} data the data to hash.\n\t * @return this\n\t */\n\tupdate(data) {\n\t\tconst sha1 = this;\n\t\tif (typeof data === \"string\") {\n\t\t\tdata = codec.utf8String.toBits(data);\n\t\t}\n\t\tconst b = sha1._buffer = bitArray.concat(sha1._buffer, data);\n\t\tconst ol = sha1._length;\n\t\tconst nl = sha1._length = ol + bitArray.bitLength(data);\n\t\tif (nl > 9007199254740991) {\n\t\t\tthrow new Error(\"Cannot hash more than 2^53 - 1 bits\");\n\t\t}\n\t\tconst c = new Uint32Array(b);\n\t\tlet j = 0;\n\t\tfor (let i = sha1.blockSize + ol - ((sha1.blockSize + ol) & (sha1.blockSize - 1)); i <= nl;\n\t\t\ti += sha1.blockSize) {\n\t\t\tsha1._block(c.subarray(16 * j, 16 * (j + 1)));\n\t\t\tj += 1;\n\t\t}\n\t\tb.splice(0, 16 * j);\n\t\treturn sha1;\n\t}\n\n\t/**\n\t * Complete hashing and output the hash value.\n\t * @return {bitArray} The hash value, an array of 5 big-endian words. TODO\n\t */\n\tfinalize() {\n\t\tconst sha1 = this;\n\t\tlet b = sha1._buffer;\n\t\tconst h = sha1._h;\n\n\t\t// Round out and push the buffer\n\t\tb = bitArray.concat(b, [bitArray.partial(1, 1)]);\n\t\t// Round out the buffer to a multiple of 16 words, less the 2 length words.\n\t\tfor (let i = b.length + 2; i & 15; i++) {\n\t\t\tb.push(0);\n\t\t}\n\n\t\t// append the length\n\t\tb.push(Math.floor(sha1._length / 0x100000000));\n\t\tb.push(sha1._length | 0);\n\n\t\twhile (b.length) {\n\t\t\tsha1._block(b.splice(0, 16));\n\t\t}\n\n\t\tsha1.reset();\n\t\treturn h;\n\t}\n\n\t/**\n\t * The SHA-1 logical functions f(0), f(1), ..., f(79).\n\t * @private\n\t */\n\t_f(t, b, c, d) {\n\t\tif (t <= 19) {\n\t\t\treturn (b & c) | (~b & d);\n\t\t} else if (t <= 39) {\n\t\t\treturn b ^ c ^ d;\n\t\t} else if (t <= 59) {\n\t\t\treturn (b & c) | (b & d) | (c & d);\n\t\t} else if (t <= 79) {\n\t\t\treturn b ^ c ^ d;\n\t\t}\n\t}\n\n\t/**\n\t * Circular left-shift operator.\n\t * @private\n\t */\n\t_S(n, x) {\n\t\treturn (x << n) | (x >>> 32 - n);\n\t}\n\n\t/**\n\t * Perform one cycle of SHA-1.\n\t * @param {Uint32Array|bitArray} words one block of words.\n\t * @private\n\t */\n\t_block(words) {\n\t\tconst sha1 = this;\n\t\tconst h = sha1._h;\n\t\t// When words is passed to _block, it has 16 elements. SHA1 _block\n\t\t// function extends words with new elements (at the end there are 80 elements). \n\t\t// The problem is that if we use Uint32Array instead of Array, \n\t\t// the length of Uint32Array cannot be changed. Thus, we replace words with a \n\t\t// normal Array here.\n\t\tconst w = Array(80); // do not use Uint32Array here as the instantiation is slower\n\t\tfor (let j = 0; j < 16; j++) {\n\t\t\tw[j] = words[j];\n\t\t}\n\n\t\tlet a = h[0];\n\t\tlet b = h[1];\n\t\tlet c = h[2];\n\t\tlet d = h[3];\n\t\tlet e = h[4];\n\n\t\tfor (let t = 0; t <= 79; t++) {\n\t\t\tif (t >= 16) {\n\t\t\t\tw[t] = sha1._S(1, w[t - 3] ^ w[t - 8] ^ w[t - 14] ^ w[t - 16]);\n\t\t\t}\n\t\t\tconst tmp = (sha1._S(5, a) + sha1._f(t, b, c, d) + e + w[t] +\n\t\t\t\tsha1._key[Math.floor(t / 20)]) | 0;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = sha1._S(30, b);\n\t\t\tb = a;\n\t\t\ta = tmp;\n\t\t}\n\n\t\th[0] = (h[0] + a) | 0;\n\t\th[1] = (h[1] + b) | 0;\n\t\th[2] = (h[2] + c) | 0;\n\t\th[3] = (h[3] + d) | 0;\n\t\th[4] = (h[4] + e) | 0;\n\t}\n};\n\n/** @fileOverview Low-level AES implementation.\n *\n * This file contains a low-level implementation of AES, optimized for\n * size and for efficiency on several browsers.  It is based on\n * OpenSSL's aes_core.c, a public-domain implementation by Vincent\n * Rijmen, Antoon Bosselaers and Paulo Barreto.\n *\n * An older version of this implementation is available in the public\n * domain, but this one is (c) Emily Stark, Mike Hamburg, Dan Boneh,\n * Stanford University 2008-2010 and BSD-licensed for liability\n * reasons.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\nconst cipher = {};\n\n/**\n * Schedule out an AES key for both encryption and decryption.  This\n * is a low-level class.  Use a cipher mode to do bulk encryption.\n *\n * @constructor\n * @param {Array} key The key as an array of 4, 6 or 8 words.\n */\ncipher.aes = class {\n\tconstructor(key) {\n\t\t/**\n\t\t * The expanded S-box and inverse S-box tables.  These will be computed\n\t\t * on the client so that we don't have to send them down the wire.\n\t\t *\n\t\t * There are two tables, _tables[0] is for encryption and\n\t\t * _tables[1] is for decryption.\n\t\t *\n\t\t * The first 4 sub-tables are the expanded S-box with MixColumns.  The\n\t\t * last (_tables[01][4]) is the S-box itself.\n\t\t *\n\t\t * @private\n\t\t */\n\t\tconst aes = this;\n\t\taes._tables = [[[], [], [], [], []], [[], [], [], [], []]];\n\n\t\tif (!aes._tables[0][0][0]) {\n\t\t\taes._precompute();\n\t\t}\n\n\t\tconst sbox = aes._tables[0][4];\n\t\tconst decTable = aes._tables[1];\n\t\tconst keyLen = key.length;\n\n\t\tlet i, encKey, decKey, rcon = 1;\n\n\t\tif (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n\t\t\tthrow new Error(\"invalid aes key size\");\n\t\t}\n\n\t\taes._key = [encKey = key.slice(0), decKey = []];\n\n\t\t// schedule encryption keys\n\t\tfor (i = keyLen; i < 4 * keyLen + 28; i++) {\n\t\t\tlet tmp = encKey[i - 1];\n\n\t\t\t// apply sbox\n\t\t\tif (i % keyLen === 0 || (keyLen === 8 && i % keyLen === 4)) {\n\t\t\t\ttmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n\t\t\t\t// shift rows and add rcon\n\t\t\t\tif (i % keyLen === 0) {\n\t\t\t\t\ttmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n\t\t\t\t\trcon = rcon << 1 ^ (rcon >> 7) * 283;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tencKey[i] = encKey[i - keyLen] ^ tmp;\n\t\t}\n\n\t\t// schedule decryption keys\n\t\tfor (let j = 0; i; j++, i--) {\n\t\t\tconst tmp = encKey[j & 3 ? i : i - 4];\n\t\t\tif (i <= 4 || j < 4) {\n\t\t\t\tdecKey[j] = tmp;\n\t\t\t} else {\n\t\t\t\tdecKey[j] = decTable[0][sbox[tmp >>> 24]] ^\n\t\t\t\t\tdecTable[1][sbox[tmp >> 16 & 255]] ^\n\t\t\t\t\tdecTable[2][sbox[tmp >> 8 & 255]] ^\n\t\t\t\t\tdecTable[3][sbox[tmp & 255]];\n\t\t\t}\n\t\t}\n\t}\n\t// public\n\t/* Something like this might appear here eventually\n\tname: \"AES\",\n\tblockSize: 4,\n\tkeySizes: [4,6,8],\n\t*/\n\n\t/**\n\t * Encrypt an array of 4 big-endian words.\n\t * @param {Array} data The plaintext.\n\t * @return {Array} The ciphertext.\n\t */\n\tencrypt(data) {\n\t\treturn this._crypt(data, 0);\n\t}\n\n\t/**\n\t * Decrypt an array of 4 big-endian words.\n\t * @param {Array} data The ciphertext.\n\t * @return {Array} The plaintext.\n\t */\n\tdecrypt(data) {\n\t\treturn this._crypt(data, 1);\n\t}\n\n\t/**\n\t * Expand the S-box tables.\n\t *\n\t * @private\n\t */\n\t_precompute() {\n\t\tconst encTable = this._tables[0];\n\t\tconst decTable = this._tables[1];\n\t\tconst sbox = encTable[4];\n\t\tconst sboxInv = decTable[4];\n\t\tconst d = [];\n\t\tconst th = [];\n\t\tlet xInv, x2, x4, x8;\n\n\t\t// Compute double and third tables\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tth[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n\t\t}\n\n\t\tfor (let x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n\t\t\t// Compute sbox\n\t\t\tlet s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n\t\t\ts = s >> 8 ^ s & 255 ^ 99;\n\t\t\tsbox[x] = s;\n\t\t\tsboxInv[s] = x;\n\n\t\t\t// Compute MixColumns\n\t\t\tx8 = d[x4 = d[x2 = d[x]]];\n\t\t\tlet tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n\t\t\tlet tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tencTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n\t\t\t\tdecTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n\t\t\t}\n\t\t}\n\n\t\t// Compactify.  Considerable speedup on Firefox.\n\t\tfor (let i = 0; i < 5; i++) {\n\t\t\tencTable[i] = encTable[i].slice(0);\n\t\t\tdecTable[i] = decTable[i].slice(0);\n\t\t}\n\t}\n\n\t/**\n\t * Encryption and decryption core.\n\t * @param {Array} input Four words to be encrypted or decrypted.\n\t * @param dir The direction, 0 for encrypt and 1 for decrypt.\n\t * @return {Array} The four encrypted or decrypted words.\n\t * @private\n\t */\n\t_crypt(input, dir) {\n\t\tif (input.length !== 4) {\n\t\t\tthrow new Error(\"invalid aes block size\");\n\t\t}\n\n\t\tconst key = this._key[dir];\n\n\t\tconst nInnerRounds = key.length / 4 - 2;\n\t\tconst out = [0, 0, 0, 0];\n\t\tconst table = this._tables[dir];\n\n\t\t// load up the tables\n\t\tconst t0 = table[0];\n\t\tconst t1 = table[1];\n\t\tconst t2 = table[2];\n\t\tconst t3 = table[3];\n\t\tconst sbox = table[4];\n\n\t\t// state variables a,b,c,d are loaded with pre-whitened data\n\t\tlet a = input[0] ^ key[0];\n\t\tlet b = input[dir ? 3 : 1] ^ key[1];\n\t\tlet c = input[2] ^ key[2];\n\t\tlet d = input[dir ? 1 : 3] ^ key[3];\n\t\tlet kIndex = 4;\n\t\tlet a2, b2, c2;\n\n\t\t// Inner rounds.  Cribbed from OpenSSL.\n\t\tfor (let i = 0; i < nInnerRounds; i++) {\n\t\t\ta2 = t0[a >>> 24] ^ t1[b >> 16 & 255] ^ t2[c >> 8 & 255] ^ t3[d & 255] ^ key[kIndex];\n\t\t\tb2 = t0[b >>> 24] ^ t1[c >> 16 & 255] ^ t2[d >> 8 & 255] ^ t3[a & 255] ^ key[kIndex + 1];\n\t\t\tc2 = t0[c >>> 24] ^ t1[d >> 16 & 255] ^ t2[a >> 8 & 255] ^ t3[b & 255] ^ key[kIndex + 2];\n\t\t\td = t0[d >>> 24] ^ t1[a >> 16 & 255] ^ t2[b >> 8 & 255] ^ t3[c & 255] ^ key[kIndex + 3];\n\t\t\tkIndex += 4;\n\t\t\ta = a2; b = b2; c = c2;\n\t\t}\n\n\t\t// Last round.\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tout[dir ? 3 & -i : i] =\n\t\t\t\tsbox[a >>> 24] << 24 ^\n\t\t\t\tsbox[b >> 16 & 255] << 16 ^\n\t\t\t\tsbox[c >> 8 & 255] << 8 ^\n\t\t\t\tsbox[d & 255] ^\n\t\t\t\tkey[kIndex++];\n\t\t\ta2 = a; a = b; b = c; c = d; d = a2;\n\t\t}\n\n\t\treturn out;\n\t}\n};\n\n/**\n * Random values\n * @namespace\n */\nconst random = {\n\t/** \n\t * Generate random words with pure js, cryptographically not as strong & safe as native implementation.\n\t * @param {TypedArray} typedArray The array to fill.\n\t * @return {TypedArray} The random values.\n\t */\n\tgetRandomValues(typedArray) {\n\t\tconst words = new Uint32Array(typedArray.buffer);\n\t\tconst r = (m_w) => {\n\t\t\tlet m_z = 0x3ade68b1;\n\t\t\tconst mask = 0xffffffff;\n\t\t\treturn function () {\n\t\t\t\tm_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t\t\t\tm_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t\t\t\tconst result = ((((m_z << 0x10) + m_w) & mask) / 0x100000000) + .5;\n\t\t\t\treturn result * (Math.random() > .5 ? 1 : -1);\n\t\t\t};\n\t\t};\n\t\tfor (let i = 0, rcache; i < typedArray.length; i += 4) {\n\t\t\tconst _r = r((rcache || Math.random()) * 0x100000000);\n\t\t\trcache = _r() * 0x3ade67b7;\n\t\t\twords[i / 4] = (_r() * 0x100000000) | 0;\n\t\t}\n\t\treturn typedArray;\n\t}\n};\n\n/** @fileOverview CTR mode implementation.\n *\n * Special thanks to Roy Nicholson for pointing out a bug in our\n * implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** Brian Gladman's CTR Mode.\n* @constructor\n* @param {Object} _prf The aes instance to generate key.\n* @param {bitArray} _iv The iv for ctr mode, it must be 128 bits.\n*/\n\nconst mode = {};\n\n/**\n * Brian Gladman's CTR Mode.\n * @namespace\n */\nmode.ctrGladman = class {\n\tconstructor(prf, iv) {\n\t\tthis._prf = prf;\n\t\tthis._initIv = iv;\n\t\tthis._iv = iv;\n\t}\n\n\treset() {\n\t\tthis._iv = this._initIv;\n\t}\n\n\t/** Input some data to calculate.\n\t * @param {bitArray} data the data to process, it must be intergral multiple of 128 bits unless it's the last.\n\t */\n\tupdate(data) {\n\t\treturn this.calculate(this._prf, data, this._iv);\n\t}\n\n\tincWord(word) {\n\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tlet b1 = (word >> 16) & 0xff;\n\t\t\tlet b2 = (word >> 8) & 0xff;\n\t\t\tlet b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) { // overflow b1   \n\t\t\t\tb1 = 0;\n\t\t\t\tif (b2 === 0xff) {\n\t\t\t\t\tb2 = 0;\n\t\t\t\t\tif (b3 === 0xff) {\n\t\t\t\t\t\tb3 = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t++b3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t++b2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t} else {\n\t\t\tword += (0x01 << 24);\n\t\t}\n\t\treturn word;\n\t}\n\n\tincCounter(counter) {\n\t\tif ((counter[0] = this.incWord(counter[0])) === 0) {\n\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\tcounter[1] = this.incWord(counter[1]);\n\t\t}\n\t}\n\n\tcalculate(prf, data, iv) {\n\t\tlet l;\n\t\tif (!(l = data.length)) {\n\t\t\treturn [];\n\t\t}\n\t\tconst bl = bitArray.bitLength(data);\n\t\tfor (let i = 0; i < l; i += 4) {\n\t\t\tthis.incCounter(iv);\n\t\t\tconst e = prf.encrypt(iv);\n\t\t\tdata[i] ^= e[0];\n\t\t\tdata[i + 1] ^= e[1];\n\t\t\tdata[i + 2] ^= e[2];\n\t\t\tdata[i + 3] ^= e[3];\n\t\t}\n\t\treturn bitArray.clamp(data, bl);\n\t}\n};\n\nconst misc = {\n\timportKey(password) {\n\t\treturn new misc.hmacSha1(codec.bytes.toBits(password));\n\t},\n\tpbkdf2(prf, salt, count, length) {\n\t\tcount = count || 10000;\n\t\tif (length < 0 || count < 0) {\n\t\t\tthrow new Error(\"invalid params to pbkdf2\");\n\t\t}\n\t\tconst byteLength = ((length >> 5) + 1) << 2;\n\t\tlet u, ui, i, j, k;\n\t\tconst arrayBuffer = new ArrayBuffer(byteLength);\n\t\tconst out = new DataView(arrayBuffer);\n\t\tlet outLength = 0;\n\t\tconst b = bitArray;\n\t\tsalt = codec.bytes.toBits(salt);\n\t\tfor (k = 1; outLength < (byteLength || 1); k++) {\n\t\t\tu = ui = prf.encrypt(b.concat(salt, [k]));\n\t\t\tfor (i = 1; i < count; i++) {\n\t\t\t\tui = prf.encrypt(ui);\n\t\t\t\tfor (j = 0; j < ui.length; j++) {\n\t\t\t\t\tu[j] ^= ui[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = 0; outLength < (byteLength || 1) && i < u.length; i++) {\n\t\t\t\tout.setInt32(outLength, u[i]);\n\t\t\t\toutLength += 4;\n\t\t\t}\n\t\t}\n\t\treturn arrayBuffer.slice(0, length / 8);\n\t}\n};\n\n/** @fileOverview HMAC implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** HMAC with the specified hash function.\n * @constructor\n * @param {bitArray} key the key for HMAC.\n * @param {Object} [Hash=hash.sha1] The hash function to use.\n */\nmisc.hmacSha1 = class {\n\n\tconstructor(key) {\n\t\tconst hmac = this;\n\t\tconst Hash = hmac._hash = hash.sha1;\n\t\tconst exKey = [[], []];\n\t\thmac._baseHash = [new Hash(), new Hash()];\n\t\tconst bs = hmac._baseHash[0].blockSize / 32;\n\n\t\tif (key.length > bs) {\n\t\t\tkey = new Hash().update(key).finalize();\n\t\t}\n\n\t\tfor (let i = 0; i < bs; i++) {\n\t\t\texKey[0][i] = key[i] ^ 0x36363636;\n\t\t\texKey[1][i] = key[i] ^ 0x5C5C5C5C;\n\t\t}\n\n\t\thmac._baseHash[0].update(exKey[0]);\n\t\thmac._baseHash[1].update(exKey[1]);\n\t\thmac._resultHash = new Hash(hmac._baseHash[0]);\n\t}\n\treset() {\n\t\tconst hmac = this;\n\t\thmac._resultHash = new hmac._hash(hmac._baseHash[0]);\n\t\thmac._updated = false;\n\t}\n\n\tupdate(data) {\n\t\tconst hmac = this;\n\t\thmac._updated = true;\n\t\thmac._resultHash.update(data);\n\t}\n\n\tdigest() {\n\t\tconst hmac = this;\n\t\tconst w = hmac._resultHash.finalize();\n\t\tconst result = new (hmac._hash)(hmac._baseHash[1]).update(w).finalize();\n\n\t\thmac.reset();\n\n\t\treturn result;\n\t}\n\n\tencrypt(data) {\n\t\tif (!this._updated) {\n\t\t\tthis.update(data);\n\t\t\treturn this.digest(data);\n\t\t} else {\n\t\t\tthrow new Error(\"encrypt on already updated hmac called!\");\n\t\t}\n\t}\n};\n\nexport {\n\tcipher,\n\tcodec,\n\tmisc,\n\tmode,\n\trandom\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global crypto */\n\nimport { FUNCTION_TYPE, UNDEFINED_TYPE } from \"../constants.js\";\nimport {\n\trandom\n} from \"./codecs/sjcl.js\";\n\nconst GET_RANDOM_VALUES_SUPPORTED = typeof crypto != UNDEFINED_TYPE && typeof crypto.getRandomValues == FUNCTION_TYPE;\n\nconst ERR_INVALID_PASSWORD = \"Invalid password\";\nconst ERR_INVALID_SIGNATURE = \"Invalid signature\";\nconst ERR_ABORT_CHECK_PASSWORD = \"zipjs-abort-check-password\";\n\nexport {\n\tgetRandomValues,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD\n};\n\nfunction getRandomValues(array) {\n\tif (GET_RANDOM_VALUES_SUPPORTED) {\n\t\treturn crypto.getRandomValues(array);\n\t} else {\n\t\treturn random.getRandomValues(array);\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global crypto, TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { UNDEFINED_VALUE, UNDEFINED_TYPE, FUNCTION_TYPE } from \"../constants.js\";\nimport { encodeText } from \"./../util/encode-text.js\";\nimport {\n\tcipher,\n\tcodec,\n\tmisc,\n\tmode\n} from \"./codecs/sjcl.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD,\n\tgetRandomValues\n} from \"./common-crypto.js\";\n\nconst BLOCK_LENGTH = 16;\nconst RAW_FORMAT = \"raw\";\nconst PBKDF2_ALGORITHM = { name: \"PBKDF2\" };\nconst HASH_ALGORITHM = { name: \"HMAC\" };\nconst HASH_FUNCTION = \"SHA-1\";\nconst BASE_KEY_ALGORITHM = Object.assign({ hash: HASH_ALGORITHM }, PBKDF2_ALGORITHM);\nconst DERIVED_BITS_ALGORITHM = Object.assign({ iterations: 1000, hash: { name: HASH_FUNCTION } }, PBKDF2_ALGORITHM);\nconst DERIVED_BITS_USAGE = [\"deriveBits\"];\nconst SALT_LENGTH = [8, 12, 16];\nconst KEY_LENGTH = [16, 24, 32];\nconst SIGNATURE_LENGTH = 10;\nconst COUNTER_DEFAULT_VALUE = [0, 0, 0, 0];\n// deno-lint-ignore valid-typeof\nconst CRYPTO_API_SUPPORTED = typeof crypto != UNDEFINED_TYPE;\nconst subtle = CRYPTO_API_SUPPORTED && crypto.subtle;\nconst SUBTLE_API_SUPPORTED = CRYPTO_API_SUPPORTED && typeof subtle != UNDEFINED_TYPE;\nconst codecBytes = codec.bytes;\nconst Aes = cipher.aes;\nconst CtrGladman = mode.ctrGladman;\nconst HmacSha1 = misc.hmacSha1;\n\nlet IMPORT_KEY_SUPPORTED = CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof subtle.importKey == FUNCTION_TYPE;\nlet DERIVE_BITS_SUPPORTED = CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof subtle.deriveBits == FUNCTION_TYPE;\n\nclass AESDecryptionStream extends TransformStream {\n\n\tconstructor({ password, rawPassword, signed, encryptionStrength, checkPasswordOnly }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tready: new Promise(resolve => this.resolveReady = resolve),\n\t\t\t\t\tpassword: encodePassword(password, rawPassword),\n\t\t\t\t\tsigned,\n\t\t\t\t\tstrength: encryptionStrength - 1,\n\t\t\t\t\tpending: new Uint8Array()\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tconst aesCrypto = this;\n\t\t\t\tconst {\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength,\n\t\t\t\t\tresolveReady,\n\t\t\t\t\tready\n\t\t\t\t} = aesCrypto;\n\t\t\t\tif (password) {\n\t\t\t\t\tawait createDecryptionKeys(aesCrypto, strength, password, subarray(chunk, 0, SALT_LENGTH[strength] + 2));\n\t\t\t\t\tchunk = subarray(chunk, SALT_LENGTH[strength] + 2);\n\t\t\t\t\tif (checkPasswordOnly) {\n\t\t\t\t\t\tcontroller.error(new Error(ERR_ABORT_CHECK_PASSWORD));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolveReady();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait ready;\n\t\t\t\t}\n\t\t\t\tconst output = new Uint8Array(chunk.length - SIGNATURE_LENGTH - ((chunk.length - SIGNATURE_LENGTH) % BLOCK_LENGTH));\n\t\t\t\tcontroller.enqueue(append(aesCrypto, chunk, output, 0, SIGNATURE_LENGTH, true));\n\t\t\t},\n\t\t\tasync flush(controller) {\n\t\t\t\tconst {\n\t\t\t\t\tsigned,\n\t\t\t\t\tctr,\n\t\t\t\t\thmac,\n\t\t\t\t\tpending,\n\t\t\t\t\tready\n\t\t\t\t} = this;\n\t\t\t\tif (hmac && ctr) {\n\t\t\t\t\tawait ready;\n\t\t\t\t\tconst chunkToDecrypt = subarray(pending, 0, pending.length - SIGNATURE_LENGTH);\n\t\t\t\t\tconst originalSignature = subarray(pending, pending.length - SIGNATURE_LENGTH);\n\t\t\t\t\tlet decryptedChunkArray = new Uint8Array();\n\t\t\t\t\tif (chunkToDecrypt.length) {\n\t\t\t\t\t\tconst encryptedChunk = toBits(codecBytes, chunkToDecrypt);\n\t\t\t\t\t\thmac.update(encryptedChunk);\n\t\t\t\t\t\tconst decryptedChunk = ctr.update(encryptedChunk);\n\t\t\t\t\t\tdecryptedChunkArray = fromBits(codecBytes, decryptedChunk);\n\t\t\t\t\t}\n\t\t\t\t\tif (signed) {\n\t\t\t\t\t\tconst signature = subarray(fromBits(codecBytes, hmac.digest()), 0, SIGNATURE_LENGTH);\n\t\t\t\t\t\tfor (let indexSignature = 0; indexSignature < SIGNATURE_LENGTH; indexSignature++) {\n\t\t\t\t\t\t\tif (signature[indexSignature] != originalSignature[indexSignature]) {\n\t\t\t\t\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.enqueue(decryptedChunkArray);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass AESEncryptionStream extends TransformStream {\n\n\tconstructor({ password, rawPassword, encryptionStrength }) {\n\t\t// deno-lint-ignore prefer-const\n\t\tlet stream;\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tready: new Promise(resolve => this.resolveReady = resolve),\n\t\t\t\t\tpassword: encodePassword(password, rawPassword),\n\t\t\t\t\tstrength: encryptionStrength - 1,\n\t\t\t\t\tpending: new Uint8Array()\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tconst aesCrypto = this;\n\t\t\t\tconst {\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength,\n\t\t\t\t\tresolveReady,\n\t\t\t\t\tready\n\t\t\t\t} = aesCrypto;\n\t\t\t\tlet preamble = new Uint8Array();\n\t\t\t\tif (password) {\n\t\t\t\t\tpreamble = await createEncryptionKeys(aesCrypto, strength, password);\n\t\t\t\t\tresolveReady();\n\t\t\t\t} else {\n\t\t\t\t\tawait ready;\n\t\t\t\t}\n\t\t\t\tconst output = new Uint8Array(preamble.length + chunk.length - (chunk.length % BLOCK_LENGTH));\n\t\t\t\toutput.set(preamble, 0);\n\t\t\t\tcontroller.enqueue(append(aesCrypto, chunk, output, preamble.length, 0));\n\t\t\t},\n\t\t\tasync flush(controller) {\n\t\t\t\tconst {\n\t\t\t\t\tctr,\n\t\t\t\t\thmac,\n\t\t\t\t\tpending,\n\t\t\t\t\tready\n\t\t\t\t} = this;\n\t\t\t\tif (hmac && ctr) {\n\t\t\t\t\tawait ready;\n\t\t\t\t\tlet encryptedChunkArray = new Uint8Array();\n\t\t\t\t\tif (pending.length) {\n\t\t\t\t\t\tconst encryptedChunk = ctr.update(toBits(codecBytes, pending));\n\t\t\t\t\t\thmac.update(encryptedChunk);\n\t\t\t\t\t\tencryptedChunkArray = fromBits(codecBytes, encryptedChunk);\n\t\t\t\t\t}\n\t\t\t\t\tstream.signature = fromBits(codecBytes, hmac.digest()).slice(0, SIGNATURE_LENGTH);\n\t\t\t\t\tcontroller.enqueue(concat(encryptedChunkArray, stream.signature));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tstream = this;\n\t}\n}\n\nexport {\n\tAESDecryptionStream,\n\tAESEncryptionStream,\n\tERR_INVALID_PASSWORD\n};\n\nfunction append(aesCrypto, input, output, paddingStart, paddingEnd, verifySignature) {\n\tconst {\n\t\tctr,\n\t\thmac,\n\t\tpending\n\t} = aesCrypto;\n\tconst inputLength = input.length - paddingEnd;\n\tif (pending.length) {\n\t\tinput = concat(pending, input);\n\t\toutput = expand(output, inputLength - (inputLength % BLOCK_LENGTH));\n\t}\n\tlet offset;\n\tfor (offset = 0; offset <= inputLength - BLOCK_LENGTH; offset += BLOCK_LENGTH) {\n\t\tconst inputChunk = toBits(codecBytes, subarray(input, offset, offset + BLOCK_LENGTH));\n\t\tif (verifySignature) {\n\t\t\thmac.update(inputChunk);\n\t\t}\n\t\tconst outputChunk = ctr.update(inputChunk);\n\t\tif (!verifySignature) {\n\t\t\thmac.update(outputChunk);\n\t\t}\n\t\toutput.set(fromBits(codecBytes, outputChunk), offset + paddingStart);\n\t}\n\taesCrypto.pending = subarray(input, offset);\n\treturn output;\n}\n\nasync function createDecryptionKeys(decrypt, strength, password, preamble) {\n\tconst passwordVerificationKey = await createKeys(decrypt, strength, password, subarray(preamble, 0, SALT_LENGTH[strength]));\n\tconst passwordVerification = subarray(preamble, SALT_LENGTH[strength]);\n\tif (passwordVerificationKey[0] != passwordVerification[0] || passwordVerificationKey[1] != passwordVerification[1]) {\n\t\tthrow new Error(ERR_INVALID_PASSWORD);\n\t}\n}\n\nasync function createEncryptionKeys(encrypt, strength, password) {\n\tconst salt = getRandomValues(new Uint8Array(SALT_LENGTH[strength]));\n\tconst passwordVerification = await createKeys(encrypt, strength, password, salt);\n\treturn concat(salt, passwordVerification);\n}\n\nasync function createKeys(aesCrypto, strength, password, salt) {\n\taesCrypto.password = null;\n\tconst baseKey = await importKey(RAW_FORMAT, password, BASE_KEY_ALGORITHM, false, DERIVED_BITS_USAGE);\n\tconst derivedBits = await deriveBits(Object.assign({ salt }, DERIVED_BITS_ALGORITHM), baseKey, 8 * ((KEY_LENGTH[strength] * 2) + 2));\n\tconst compositeKey = new Uint8Array(derivedBits);\n\tconst key = toBits(codecBytes, subarray(compositeKey, 0, KEY_LENGTH[strength]));\n\tconst authentication = toBits(codecBytes, subarray(compositeKey, KEY_LENGTH[strength], KEY_LENGTH[strength] * 2));\n\tconst passwordVerification = subarray(compositeKey, KEY_LENGTH[strength] * 2);\n\tObject.assign(aesCrypto, {\n\t\tkeys: {\n\t\t\tkey,\n\t\t\tauthentication,\n\t\t\tpasswordVerification\n\t\t},\n\t\tctr: new CtrGladman(new Aes(key), Array.from(COUNTER_DEFAULT_VALUE)),\n\t\thmac: new HmacSha1(authentication)\n\t});\n\treturn passwordVerification;\n}\n\nasync function importKey(format, password, algorithm, extractable, keyUsages) {\n\tif (IMPORT_KEY_SUPPORTED) {\n\t\ttry {\n\t\t\treturn await subtle.importKey(format, password, algorithm, extractable, keyUsages);\n\t\t} catch (_error) {\n\t\t\tIMPORT_KEY_SUPPORTED = false;\n\t\t\treturn misc.importKey(password);\n\t\t}\n\t} else {\n\t\treturn misc.importKey(password);\n\t}\n}\n\nasync function deriveBits(algorithm, baseKey, length) {\n\tif (DERIVE_BITS_SUPPORTED) {\n\t\ttry {\n\t\t\treturn await subtle.deriveBits(algorithm, baseKey, length);\n\t\t} catch (_error) {\n\t\t\tDERIVE_BITS_SUPPORTED = false;\n\t\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\n\t\t}\n\t} else {\n\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\n\t}\n}\n\nfunction encodePassword(password, rawPassword) {\n\tif (rawPassword === UNDEFINED_VALUE) {\n\t\treturn encodeText(password);\n\t} else {\n\t\treturn rawPassword;\n\t}\n}\n\nfunction concat(leftArray, rightArray) {\n\tlet array = leftArray;\n\tif (leftArray.length + rightArray.length) {\n\t\tarray = new Uint8Array(leftArray.length + rightArray.length);\n\t\tarray.set(leftArray, 0);\n\t\tarray.set(rightArray, leftArray.length);\n\t}\n\treturn array;\n}\n\nfunction expand(inputArray, length) {\n\tif (length && length > inputArray.length) {\n\t\tconst array = inputArray;\n\t\tinputArray = new Uint8Array(length);\n\t\tinputArray.set(array, 0);\n\t}\n\treturn inputArray;\n}\n\nfunction subarray(array, begin, end) {\n\treturn array.subarray(begin, end);\n}\n\nfunction fromBits(codecBytes, chunk) {\n\treturn codecBytes.fromBits(chunk);\n}\nfunction toBits(codecBytes, chunk) {\n\treturn codecBytes.toBits(chunk);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { Crc32 } from \"./codecs/crc32.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD,\n\tgetRandomValues\n} from \"./common-crypto.js\";\n\nconst HEADER_LENGTH = 12;\n\nclass ZipCryptoDecryptionStream extends TransformStream {\n\n\tconstructor({ password, passwordVerification, checkPasswordOnly }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tpassword,\n\t\t\t\t\tpasswordVerification\n\t\t\t\t});\n\t\t\t\tcreateKeys(this, password);\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tconst zipCrypto = this;\n\t\t\t\tif (zipCrypto.password) {\n\t\t\t\t\tconst decryptedHeader = decrypt(zipCrypto, chunk.subarray(0, HEADER_LENGTH));\n\t\t\t\t\tzipCrypto.password = null;\n\t\t\t\t\tif (decryptedHeader[HEADER_LENGTH - 1] != zipCrypto.passwordVerification) {\n\t\t\t\t\t\tthrow new Error(ERR_INVALID_PASSWORD);\n\t\t\t\t\t}\n\t\t\t\t\tchunk = chunk.subarray(HEADER_LENGTH);\n\t\t\t\t}\n\t\t\t\tif (checkPasswordOnly) {\n\t\t\t\t\tcontroller.error(new Error(ERR_ABORT_CHECK_PASSWORD));\n\t\t\t\t} else {\n\t\t\t\t\tcontroller.enqueue(decrypt(zipCrypto, chunk));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass ZipCryptoEncryptionStream extends TransformStream {\n\n\tconstructor({ password, passwordVerification }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tpassword,\n\t\t\t\t\tpasswordVerification\n\t\t\t\t});\n\t\t\t\tcreateKeys(this, password);\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tconst zipCrypto = this;\n\t\t\t\tlet output;\n\t\t\t\tlet offset;\n\t\t\t\tif (zipCrypto.password) {\n\t\t\t\t\tzipCrypto.password = null;\n\t\t\t\t\tconst header = getRandomValues(new Uint8Array(HEADER_LENGTH));\n\t\t\t\t\theader[HEADER_LENGTH - 1] = zipCrypto.passwordVerification;\n\t\t\t\t\toutput = new Uint8Array(chunk.length + header.length);\n\t\t\t\t\toutput.set(encrypt(zipCrypto, header), 0);\n\t\t\t\t\toffset = HEADER_LENGTH;\n\t\t\t\t} else {\n\t\t\t\t\toutput = new Uint8Array(chunk.length);\n\t\t\t\t\toffset = 0;\n\t\t\t\t}\n\t\t\t\toutput.set(encrypt(zipCrypto, chunk), offset);\n\t\t\t\tcontroller.enqueue(output);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport {\n\tZipCryptoDecryptionStream,\n\tZipCryptoEncryptionStream,\n\tERR_INVALID_PASSWORD\n};\n\nfunction decrypt(target, input) {\n\tconst output = new Uint8Array(input.length);\n\tfor (let index = 0; index < input.length; index++) {\n\t\toutput[index] = getByte(target) ^ input[index];\n\t\tupdateKeys(target, output[index]);\n\t}\n\treturn output;\n}\n\nfunction encrypt(target, input) {\n\tconst output = new Uint8Array(input.length);\n\tfor (let index = 0; index < input.length; index++) {\n\t\toutput[index] = getByte(target) ^ input[index];\n\t\tupdateKeys(target, input[index]);\n\t}\n\treturn output;\n}\n\nfunction createKeys(target, password) {\n\tconst keys = [0x12345678, 0x23456789, 0x34567890];\n\tObject.assign(target, {\n\t\tkeys,\n\t\tcrcKey0: new Crc32(keys[0]),\n\t\tcrcKey2: new Crc32(keys[2]),\n\t});\n\tfor (let index = 0; index < password.length; index++) {\n\t\tupdateKeys(target, password.charCodeAt(index));\n\t}\n}\n\nfunction updateKeys(target, byte) {\n\tlet [key0, key1, key2] = target.keys;\n\ttarget.crcKey0.append([byte]);\n\tkey0 = ~target.crcKey0.get();\n\tkey1 = getInt32(Math.imul(getInt32(key1 + getInt8(key0)), 134775813) + 1);\n\ttarget.crcKey2.append([key1 >>> 24]);\n\tkey2 = ~target.crcKey2.get();\n\ttarget.keys = [key0, key1, key2];\n}\n\nfunction getByte(target) {\n\tconst temp = target.keys[2] | 2;\n\treturn getInt8(Math.imul(temp, (temp ^ 1)) >>> 8);\n}\n\nfunction getInt8(number) {\n\treturn number & 0xFF;\n}\n\nfunction getInt32(number) {\n\treturn number & 0xFFFFFFFF;\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { Crc32Stream } from \"./crc32-stream.js\";\nimport {\n\tAESEncryptionStream,\n\tAESDecryptionStream\n} from \"./aes-crypto-stream.js\";\nimport {\n\tZipCryptoEncryptionStream,\n\tZipCryptoDecryptionStream\n} from \"./zip-crypto-stream.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD\n} from \"./common-crypto.js\";\n\nconst COMPRESSION_FORMAT = \"deflate-raw\";\n\nclass DeflateStream extends TransformStream {\n\n\tconstructor(options, { chunkSize, CompressionStream, CompressionStreamNative }) {\n\t\tsuper({});\n\t\tconst { compressed, encrypted, useCompressionStream, zipCrypto, signed, level } = options;\n\t\tconst stream = this;\n\t\tlet crc32Stream, encryptionStream;\n\t\tlet readable = filterEmptyChunks(super.readable);\n\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\tcrc32Stream = new Crc32Stream();\n\t\t\treadable = pipeThrough(readable, crc32Stream);\n\t\t}\n\t\tif (compressed) {\n\t\t\treadable = pipeThroughCommpressionStream(readable, useCompressionStream, { level, chunkSize }, CompressionStreamNative, CompressionStream);\n\t\t}\n\t\tif (encrypted) {\n\t\t\tif (zipCrypto) {\n\t\t\t\treadable = pipeThrough(readable, new ZipCryptoEncryptionStream(options));\n\t\t\t} else {\n\t\t\t\tencryptionStream = new AESEncryptionStream(options);\n\t\t\t\treadable = pipeThrough(readable, encryptionStream);\n\t\t\t}\n\t\t}\n\t\tsetReadable(stream, readable, () => {\n\t\t\tlet signature;\n\t\t\tif (encrypted && !zipCrypto) {\n\t\t\t\tsignature = encryptionStream.signature;\n\t\t\t}\n\t\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\t\tsignature = new DataView(crc32Stream.value.buffer).getUint32(0);\n\t\t\t}\n\t\t\tstream.signature = signature;\n\t\t});\n\t}\n}\n\nclass InflateStream extends TransformStream {\n\n\tconstructor(options, { chunkSize, DecompressionStream, DecompressionStreamNative }) {\n\t\tsuper({});\n\t\tconst { zipCrypto, encrypted, signed, signature, compressed, useCompressionStream } = options;\n\t\tlet crc32Stream, decryptionStream;\n\t\tlet readable = filterEmptyChunks(super.readable);\n\t\tif (encrypted) {\n\t\t\tif (zipCrypto) {\n\t\t\t\treadable = pipeThrough(readable, new ZipCryptoDecryptionStream(options));\n\t\t\t} else {\n\t\t\t\tdecryptionStream = new AESDecryptionStream(options);\n\t\t\t\treadable = pipeThrough(readable, decryptionStream);\n\t\t\t}\n\t\t}\n\t\tif (compressed) {\n\t\t\treadable = pipeThroughCommpressionStream(readable, useCompressionStream, { chunkSize }, DecompressionStreamNative, DecompressionStream);\n\t\t}\n\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\tcrc32Stream = new Crc32Stream();\n\t\t\treadable = pipeThrough(readable, crc32Stream);\n\t\t}\n\t\tsetReadable(this, readable, () => {\n\t\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\t\tconst dataViewSignature = new DataView(crc32Stream.value.buffer);\n\t\t\t\tif (signature != dataViewSignature.getUint32(0, false)) {\n\t\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport {\n\tDeflateStream,\n\tInflateStream,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD\n};\n\nfunction filterEmptyChunks(readable) {\n\treturn pipeThrough(readable, new TransformStream({\n\t\ttransform(chunk, controller) {\n\t\t\tif (chunk && chunk.length) {\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t}\n\t\t}\n\t}));\n}\n\nfunction setReadable(stream, readable, flush) {\n\treadable = pipeThrough(readable, new TransformStream({ flush }));\n\tObject.defineProperty(stream, \"readable\", {\n\t\tget() {\n\t\t\treturn readable;\n\t\t}\n\t});\n}\n\nfunction pipeThroughCommpressionStream(readable, useCompressionStream, options, CodecStreamNative, CodecStream) {\n\ttry {\n\t\tconst CompressionStream = useCompressionStream && CodecStreamNative ? CodecStreamNative : CodecStream;\n\t\treadable = pipeThrough(readable, new CompressionStream(COMPRESSION_FORMAT, options));\n\t} catch (error) {\n\t\tif (useCompressionStream) {\n\t\t\ttry {\n\t\t\t\treadable = pipeThrough(readable, new CodecStream(COMPRESSION_FORMAT, options));\n\t\t\t} catch (error) {\n\t\t\t\treturn readable;\n\t\t\t}\n\t\t} else {\n\t\t\treturn readable;\n\t\t}\n\t}\n\treturn readable;\n}\n\nfunction pipeThrough(readable, transformStream) {\n\treturn readable.pipeThrough(transformStream);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD,\n\tInflateStream,\n\tDeflateStream\n} from \"./zip-entry-stream.js\";\n\nconst MESSAGE_EVENT_TYPE = \"message\";\nconst MESSAGE_START = \"start\";\nconst MESSAGE_PULL = \"pull\";\nconst MESSAGE_DATA = \"data\";\nconst MESSAGE_ACK_DATA = \"ack\";\nconst MESSAGE_CLOSE = \"close\";\nconst CODEC_DEFLATE = \"deflate\";\nconst CODEC_INFLATE = \"inflate\";\n\nexport {\n\tCODEC_DEFLATE,\n\tCODEC_INFLATE,\n\tMESSAGE_EVENT_TYPE,\n\tMESSAGE_START,\n\tMESSAGE_PULL,\n\tMESSAGE_DATA,\n\tMESSAGE_ACK_DATA,\n\tMESSAGE_CLOSE,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD,\n\tCodecStream,\n\tChunkStream\n};\n\nclass CodecStream extends TransformStream {\n\n\tconstructor(options, config) {\n\t\tsuper({});\n\t\tconst codec = this;\n\t\tconst { codecType } = options;\n\t\tlet Stream;\n\t\tif (codecType.startsWith(CODEC_DEFLATE)) {\n\t\t\tStream = DeflateStream;\n\t\t} else if (codecType.startsWith(CODEC_INFLATE)) {\n\t\t\tStream = InflateStream;\n\t\t}\n\t\tlet outputSize = 0;\n\t\tlet inputSize = 0;\n\t\tconst stream = new Stream(options, config);\n\t\tconst readable = super.readable;\n\t\tconst inputSizeStream = new TransformStream({\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tif (chunk && chunk.length) {\n\t\t\t\t\tinputSize += chunk.length;\n\t\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\tObject.assign(codec, {\n\t\t\t\t\tinputSize\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tconst outputSizeStream = new TransformStream({\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tif (chunk && chunk.length) {\n\t\t\t\t\toutputSize += chunk.length;\n\t\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\tconst { signature } = stream;\n\t\t\t\tObject.assign(codec, {\n\t\t\t\t\tsignature,\n\t\t\t\t\toutputSize,\n\t\t\t\t\tinputSize\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(codec, \"readable\", {\n\t\t\tget() {\n\t\t\t\treturn readable.pipeThrough(inputSizeStream).pipeThrough(stream).pipeThrough(outputSizeStream);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass ChunkStream extends TransformStream {\n\n\tconstructor(chunkSize) {\n\t\tlet pendingChunk;\n\t\tsuper({\n\t\t\ttransform,\n\t\t\tflush(controller) {\n\t\t\t\tif (pendingChunk && pendingChunk.length) {\n\t\t\t\t\tcontroller.enqueue(pendingChunk);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tfunction transform(chunk, controller) {\n\t\t\tif (pendingChunk) {\n\t\t\t\tconst newChunk = new Uint8Array(pendingChunk.length + chunk.length);\n\t\t\t\tnewChunk.set(pendingChunk);\n\t\t\t\tnewChunk.set(chunk, pendingChunk.length);\n\t\t\t\tchunk = newChunk;\n\t\t\t\tpendingChunk = null;\n\t\t\t}\n\t\t\tif (chunk.length > chunkSize) {\n\t\t\t\tcontroller.enqueue(chunk.slice(0, chunkSize));\n\t\t\t\ttransform(chunk.slice(chunkSize), controller);\n\t\t\t} else {\n\t\t\t\tpendingChunk = chunk;\n\t\t\t}\n\t\t}\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Worker, URL, TransformStream, WritableStream */\n\nimport {\n\tUNDEFINED_TYPE,\n\tFUNCTION_TYPE\n} from \"./constants.js\";\nimport {\n\tCodecStream,\n\tChunkStream,\n\tMESSAGE_EVENT_TYPE,\n\tMESSAGE_START,\n\tMESSAGE_PULL,\n\tMESSAGE_DATA,\n\tMESSAGE_ACK_DATA,\n\tMESSAGE_CLOSE\n} from \"./streams/codec-stream.js\";\n\n// deno-lint-ignore valid-typeof\nlet WEB_WORKERS_SUPPORTED = typeof Worker != UNDEFINED_TYPE;\n\nexport {\n\tCodecWorker\n};\n\nclass CodecWorker {\n\n\tconstructor(workerData, { readable, writable }, { options, config, streamOptions, useWebWorkers, transferStreams, scripts }, onTaskFinished) {\n\t\tconst { signal } = streamOptions;\n\t\tObject.assign(workerData, {\n\t\t\tbusy: true,\n\t\t\treadable: readable\n\t\t\t\t.pipeThrough(new ChunkStream(config.chunkSize))\n\t\t\t\t.pipeThrough(new ProgressWatcherStream(readable, streamOptions), { signal }),\n\t\t\twritable,\n\t\t\toptions: Object.assign({}, options),\n\t\t\tscripts,\n\t\t\ttransferStreams,\n\t\t\tterminate() {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\tconst { worker, busy } = workerData;\n\t\t\t\t\tif (worker) {\n\t\t\t\t\t\tif (busy) {\n\t\t\t\t\t\t\tworkerData.resolveTerminated = resolve;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tworker.terminate();\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tworkerData.interface = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonTaskFinished() {\n\t\t\t\tconst { resolveTerminated } = workerData;\n\t\t\t\tif (resolveTerminated) {\n\t\t\t\t\tworkerData.resolveTerminated = null;\n\t\t\t\t\tworkerData.terminated = true;\n\t\t\t\t\tworkerData.worker.terminate();\n\t\t\t\t\tresolveTerminated();\n\t\t\t\t}\n\t\t\t\tworkerData.busy = false;\n\t\t\t\tonTaskFinished(workerData);\n\t\t\t}\n\t\t});\n\t\treturn (useWebWorkers && WEB_WORKERS_SUPPORTED ? createWebWorkerInterface : createWorkerInterface)(workerData, config);\n\t}\n}\n\nclass ProgressWatcherStream extends TransformStream {\n\n\tconstructor(readableSource, { onstart, onprogress, size, onend }) {\n\t\tlet chunkOffset = 0;\n\t\tsuper({\n\t\t\tasync start() {\n\t\t\t\tif (onstart) {\n\t\t\t\t\tawait callHandler(onstart, size);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tchunkOffset += chunk.length;\n\t\t\t\tif (onprogress) {\n\t\t\t\t\tawait callHandler(onprogress, chunkOffset, size);\n\t\t\t\t}\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t\tasync flush() {\n\t\t\t\treadableSource.size = chunkOffset;\n\t\t\t\tif (onend) {\n\t\t\t\t\tawait callHandler(onend, chunkOffset);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nasync function callHandler(handler, ...parameters) {\n\ttry {\n\t\tawait handler(...parameters);\n\t} catch (_error) {\n\t\t// ignored\n\t}\n}\n\nfunction createWorkerInterface(workerData, config) {\n\treturn {\n\t\trun: () => runWorker(workerData, config)\n\t};\n}\n\nfunction createWebWorkerInterface(workerData, config) {\n\tconst { baseURL, chunkSize } = config;\n\tif (!workerData.interface) {\n\t\tlet worker;\n\t\ttry {\n\t\t\tworker = getWebWorker(workerData.scripts[0], baseURL, workerData);\n\t\t} catch (error) {\n\t\t\tWEB_WORKERS_SUPPORTED = false;\n\t\t\treturn createWorkerInterface(workerData, config);\n\t\t}\n\t\tObject.assign(workerData, {\n\t\t\tworker,\n\t\t\tinterface: {\n\t\t\t\trun: () => runWebWorker(workerData, { chunkSize })\n\t\t\t}\n\t\t});\n\t}\n\treturn workerData.interface;\n}\n\nasync function runWorker({ options, readable, writable, onTaskFinished }, config) {\n\ttry {\n\t\tconst codecStream = new CodecStream(options, config);\n\t\tawait readable.pipeThrough(codecStream).pipeTo(writable, { preventClose: true, preventAbort: true });\n\t\tconst {\n\t\t\tsignature,\n\t\t\tinputSize,\n\t\t\toutputSize\n\t\t} = codecStream;\n\t\treturn {\n\t\t\tsignature,\n\t\t\tinputSize,\n\t\t\toutputSize\n\t\t};\n\t} finally {\n\t\tonTaskFinished();\n\t}\n}\n\nasync function runWebWorker(workerData, config) {\n\tlet resolveResult, rejectResult;\n\tconst result = new Promise((resolve, reject) => {\n\t\tresolveResult = resolve;\n\t\trejectResult = reject;\n\t});\n\tObject.assign(workerData, {\n\t\treader: null,\n\t\twriter: null,\n\t\tresolveResult,\n\t\trejectResult,\n\t\tresult\n\t});\n\tconst { readable, options, scripts } = workerData;\n\tconst { writable, closed } = watchClosedStream(workerData.writable);\n\tconst streamsTransferred = sendMessage({\n\t\ttype: MESSAGE_START,\n\t\tscripts: scripts.slice(1),\n\t\toptions,\n\t\tconfig,\n\t\treadable,\n\t\twritable\n\t}, workerData);\n\tif (!streamsTransferred) {\n\t\tObject.assign(workerData, {\n\t\t\treader: readable.getReader(),\n\t\t\twriter: writable.getWriter()\n\t\t});\n\t}\n\tconst resultValue = await result;\n\tif (!streamsTransferred) {\n\t\tawait writable.getWriter().close();\n\t}\n\tawait closed;\n\treturn resultValue;\n}\n\nfunction watchClosedStream(writableSource) {\n\tlet resolveStreamClosed;\n\tconst closed = new Promise(resolve => resolveStreamClosed = resolve);\n\tconst writable = new WritableStream({\n\t\tasync write(chunk) {\n\t\t\tconst writer = writableSource.getWriter();\n\t\t\tawait writer.ready;\n\t\t\tawait writer.write(chunk);\n\t\t\twriter.releaseLock();\n\t\t},\n\t\tclose() {\n\t\t\tresolveStreamClosed();\n\t\t},\n\t\tabort(reason) {\n\t\t\tconst writer = writableSource.getWriter();\n\t\t\treturn writer.abort(reason);\n\t\t}\n\t});\n\treturn { writable, closed };\n}\n\nlet classicWorkersSupported = true;\nlet transferStreamsSupported = true;\n\nfunction getWebWorker(url, baseURL, workerData) {\n\tconst workerOptions = { type: \"module\" };\n\tlet scriptUrl, worker;\n\t// deno-lint-ignore valid-typeof\n\tif (typeof url == FUNCTION_TYPE) {\n\t\turl = url();\n\t}\n\ttry {\n\t\tscriptUrl = new URL(url, baseURL);\n\t} catch (_error) {\n\t\tscriptUrl = url;\n\t}\n\tif (classicWorkersSupported) {\n\t\ttry {\n\t\t\tworker = new Worker(scriptUrl);\n\t\t} catch (_error) {\n\t\t\tclassicWorkersSupported = false;\n\t\t\tworker = new Worker(scriptUrl, workerOptions);\n\t\t}\n\t} else {\n\t\tworker = new Worker(scriptUrl, workerOptions);\n\t}\n\tworker.addEventListener(MESSAGE_EVENT_TYPE, event => onMessage(event, workerData));\n\treturn worker;\n}\n\nfunction sendMessage(message, { worker, writer, onTaskFinished, transferStreams }) {\n\ttry {\n\t\tlet { value, readable, writable } = message;\n\t\tconst transferables = [];\n\t\tif (value) {\n\t\t\tif (value.byteLength < value.buffer.byteLength) {\n\t\t\t\tmessage.value = value.buffer.slice(0, value.byteLength);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmessage.value = value.buffer;\n\t\t\t}\n\t\t\ttransferables.push(message.value);\n\t\t}\n\t\tif (transferStreams && transferStreamsSupported) {\n\t\t\tif (readable) {\n\t\t\t\ttransferables.push(readable);\n\t\t\t}\n\t\t\tif (writable) {\n\t\t\t\ttransferables.push(writable);\n\t\t\t}\n\t\t} else {\n\t\t\tmessage.readable = message.writable = null;\n\t\t}\n\t\tif (transferables.length) {\n\t\t\ttry {\n\t\t\t\tworker.postMessage(message, transferables);\n\t\t\t\treturn true;\n\t\t\t} catch (_error) {\n\t\t\t\ttransferStreamsSupported = false;\n\t\t\t\tmessage.readable = message.writable = null;\n\t\t\t\tworker.postMessage(message);\n\t\t\t}\n\t\t} else {\n\t\t\tworker.postMessage(message);\n\t\t}\n\t} catch (error) {\n\t\tif (writer) {\n\t\t\twriter.releaseLock();\n\t\t}\n\t\tonTaskFinished();\n\t\tthrow error;\n\t}\n}\n\nasync function onMessage({ data }, workerData) {\n\tconst { type, value, messageId, result, error } = data;\n\tconst { reader, writer, resolveResult, rejectResult, onTaskFinished } = workerData;\n\ttry {\n\t\tif (error) {\n\t\t\tconst { message, stack, code, name } = error;\n\t\t\tconst responseError = new Error(message);\n\t\t\tObject.assign(responseError, { stack, code, name });\n\t\t\tclose(responseError);\n\t\t} else {\n\t\t\tif (type == MESSAGE_PULL) {\n\t\t\t\tconst { value, done } = await reader.read();\n\t\t\t\tsendMessage({ type: MESSAGE_DATA, value, done, messageId }, workerData);\n\t\t\t}\n\t\t\tif (type == MESSAGE_DATA) {\n\t\t\t\tawait writer.ready;\n\t\t\t\tawait writer.write(new Uint8Array(value));\n\t\t\t\tsendMessage({ type: MESSAGE_ACK_DATA, messageId }, workerData);\n\t\t\t}\n\t\t\tif (type == MESSAGE_CLOSE) {\n\t\t\t\tclose(null, result);\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tsendMessage({ type: MESSAGE_CLOSE, messageId }, workerData);\n\t\tclose(error);\n\t}\n\n\tfunction close(error, result) {\n\t\tif (error) {\n\t\t\trejectResult(error);\n\t\t} else {\n\t\t\tresolveResult(result);\n\t\t}\n\t\tif (writer) {\n\t\t\twriter.releaseLock();\n\t\t}\n\t\tonTaskFinished();\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global setTimeout, clearTimeout */\n\nimport { UNDEFINED_VALUE } from \"./constants.js\";\nimport {\n\tCODEC_INFLATE,\n\tCODEC_DEFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD\n} from \"./streams/codec-stream.js\";\nimport { CodecWorker } from \"./codec-worker.js\";\n\nlet pool = [];\nconst pendingRequests = [];\n\nexport {\n\trunWorker,\n\tterminateWorkers,\n\tCODEC_DEFLATE,\n\tCODEC_INFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD\n};\n\nlet indexWorker = 0;\n\nasync function runWorker(stream, workerOptions) {\n\tconst { options, config } = workerOptions;\n\tconst { transferStreams, useWebWorkers, useCompressionStream, codecType, compressed, signed, encrypted } = options;\n\tconst { workerScripts, maxWorkers } = config;\n\tworkerOptions.transferStreams = transferStreams || transferStreams === UNDEFINED_VALUE;\n\tconst streamCopy = !compressed && !signed && !encrypted && !workerOptions.transferStreams;\n\tworkerOptions.useWebWorkers = !streamCopy && (useWebWorkers || (useWebWorkers === UNDEFINED_VALUE && config.useWebWorkers));\n\tworkerOptions.scripts = workerOptions.useWebWorkers && workerScripts ? workerScripts[codecType] : [];\n\toptions.useCompressionStream = useCompressionStream || (useCompressionStream === UNDEFINED_VALUE && config.useCompressionStream);\n\treturn (await getWorker()).run();\n\n\tasync function getWorker() {\n\t\tconst workerData = pool.find(workerData => !workerData.busy);\n\t\tif (workerData) {\n\t\t\tclearTerminateTimeout(workerData);\n\t\t\treturn new CodecWorker(workerData, stream, workerOptions, onTaskFinished);\n\t\t} else if (pool.length < maxWorkers) {\n\t\t\tconst workerData = { indexWorker };\n\t\t\tindexWorker++;\n\t\t\tpool.push(workerData);\n\t\t\treturn new CodecWorker(workerData, stream, workerOptions, onTaskFinished);\n\t\t} else {\n\t\t\treturn new Promise(resolve => pendingRequests.push({ resolve, stream, workerOptions }));\n\t\t}\n\t}\n\n\tfunction onTaskFinished(workerData) {\n\t\tif (pendingRequests.length) {\n\t\t\tconst [{ resolve, stream, workerOptions }] = pendingRequests.splice(0, 1);\n\t\t\tresolve(new CodecWorker(workerData, stream, workerOptions, onTaskFinished));\n\t\t} else if (workerData.worker) {\n\t\t\tclearTerminateTimeout(workerData);\n\t\t\tterminateWorker(workerData, workerOptions);\n\t\t} else {\n\t\t\tpool = pool.filter(data => data != workerData);\n\t\t}\n\t}\n}\n\nfunction terminateWorker(workerData, workerOptions) {\n\tconst { config } = workerOptions;\n\tconst { terminateWorkerTimeout } = config;\n\tif (Number.isFinite(terminateWorkerTimeout) && terminateWorkerTimeout >= 0) {\n\t\tif (workerData.terminated) {\n\t\t\tworkerData.terminated = false;\n\t\t} else {\n\t\t\tworkerData.terminateTimeout = setTimeout(async () => {\n\t\t\t\tpool = pool.filter(data => data != workerData);\n\t\t\t\ttry {\n\t\t\t\t\tawait workerData.terminate();\n\t\t\t\t} catch (_error) {\n\t\t\t\t\t// ignored\n\t\t\t\t}\n\t\t\t}, terminateWorkerTimeout);\n\t\t}\n\t}\n}\n\nfunction clearTerminateTimeout(workerData) {\n\tconst { terminateTimeout } = workerData;\n\tif (terminateTimeout) {\n\t\tclearTimeout(terminateTimeout);\n\t\tworkerData.terminateTimeout = null;\n\t}\n}\n\nasync function terminateWorkers() {\n\tawait Promise.allSettled(pool.map(workerData => {\n\t\tclearTerminateTimeout(workerData);\n\t\treturn workerData.terminate();\n\t}));\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Blob, atob, btoa, XMLHttpRequest, URL, fetch, ReadableStream, WritableStream, FileReader, TransformStream, Response */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tUNDEFINED_VALUE,\n\tFUNCTION_TYPE,\n\tEND_OF_CENTRAL_DIR_LENGTH\n} from \"./constants.js\";\nimport { getConfiguration } from \"./configuration.js\";\n\nconst ERR_HTTP_STATUS = \"HTTP error \";\nconst ERR_HTTP_RANGE = \"HTTP Range not supported\";\nconst ERR_ITERATOR_COMPLETED_TOO_SOON = \"Writer iterator completed too soon\";\n\nconst CONTENT_TYPE_TEXT_PLAIN = \"text/plain\";\nconst HTTP_HEADER_CONTENT_LENGTH = \"Content-Length\";\nconst HTTP_HEADER_CONTENT_RANGE = \"Content-Range\";\nconst HTTP_HEADER_ACCEPT_RANGES = \"Accept-Ranges\";\nconst HTTP_HEADER_RANGE = \"Range\";\nconst HTTP_HEADER_CONTENT_TYPE = \"Content-Type\";\nconst HTTP_METHOD_HEAD = \"HEAD\";\nconst HTTP_METHOD_GET = \"GET\";\nconst HTTP_RANGE_UNIT = \"bytes\";\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst PROPERTY_NAME_WRITABLE = \"writable\";\n\nclass Stream {\n\n\tconstructor() {\n\t\tthis.size = 0;\n\t}\n\n\tinit() {\n\t\tthis.initialized = true;\n\t}\n}\n\nclass Reader extends Stream {\n\n\tget readable() {\n\t\tconst reader = this;\n\t\tconst { chunkSize = DEFAULT_CHUNK_SIZE } = reader;\n\t\tconst readable = new ReadableStream({\n\t\t\tstart() {\n\t\t\t\tthis.chunkOffset = 0;\n\t\t\t},\n\t\t\tasync pull(controller) {\n\t\t\t\tconst { offset = 0, size, diskNumberStart } = readable;\n\t\t\t\tconst { chunkOffset } = this;\n\t\t\t\tcontroller.enqueue(await readUint8Array(reader, offset + chunkOffset, Math.min(chunkSize, size - chunkOffset), diskNumberStart));\n\t\t\t\tif (chunkOffset + chunkSize > size) {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t} else {\n\t\t\t\t\tthis.chunkOffset += chunkSize;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn readable;\n\t}\n}\n\nclass Writer extends Stream {\n\n\tconstructor() {\n\t\tsuper();\n\t\tconst writer = this;\n\t\tconst writable = new WritableStream({\n\t\t\twrite(chunk) {\n\t\t\t\treturn writer.writeUint8Array(chunk);\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn writable;\n\t\t\t}\n\t\t});\n\t}\n\n\twriteUint8Array() {\n\t\t// abstract\n\t}\n}\n\nclass Data64URIReader extends Reader {\n\n\tconstructor(dataURI) {\n\t\tsuper();\n\t\tlet dataEnd = dataURI.length;\n\t\twhile (dataURI.charAt(dataEnd - 1) == \"=\") {\n\t\t\tdataEnd--;\n\t\t}\n\t\tconst dataStart = dataURI.indexOf(\",\") + 1;\n\t\tObject.assign(this, {\n\t\t\tdataURI,\n\t\t\tdataStart,\n\t\t\tsize: Math.floor((dataEnd - dataStart) * 0.75)\n\t\t});\n\t}\n\n\treadUint8Array(offset, length) {\n\t\tconst {\n\t\t\tdataStart,\n\t\t\tdataURI\n\t\t} = this;\n\t\tconst dataArray = new Uint8Array(length);\n\t\tconst start = Math.floor(offset / 3) * 4;\n\t\tconst bytes = atob(dataURI.substring(start + dataStart, Math.ceil((offset + length) / 3) * 4 + dataStart));\n\t\tconst delta = offset - Math.floor(start / 4) * 3;\n\t\tfor (let indexByte = delta; indexByte < delta + length; indexByte++) {\n\t\t\tdataArray[indexByte - delta] = bytes.charCodeAt(indexByte);\n\t\t}\n\t\treturn dataArray;\n\t}\n}\n\nclass Data64URIWriter extends Writer {\n\n\tconstructor(contentType) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tdata: \"data:\" + (contentType || \"\") + \";base64,\",\n\t\t\tpending: []\n\t\t});\n\t}\n\n\twriteUint8Array(array) {\n\t\tconst writer = this;\n\t\tlet indexArray = 0;\n\t\tlet dataString = writer.pending;\n\t\tconst delta = writer.pending.length;\n\t\twriter.pending = \"\";\n\t\tfor (indexArray = 0; indexArray < (Math.floor((delta + array.length) / 3) * 3) - delta; indexArray++) {\n\t\t\tdataString += String.fromCharCode(array[indexArray]);\n\t\t}\n\t\tfor (; indexArray < array.length; indexArray++) {\n\t\t\twriter.pending += String.fromCharCode(array[indexArray]);\n\t\t}\n\t\tif (dataString.length > 2) {\n\t\t\twriter.data += btoa(dataString);\n\t\t} else {\n\t\t\twriter.pending = dataString;\n\t\t}\n\t}\n\n\tgetData() {\n\t\treturn this.data + btoa(this.pending);\n\t}\n}\n\nclass BlobReader extends Reader {\n\n\tconstructor(blob) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tblob,\n\t\t\tsize: blob.size\n\t\t});\n\t}\n\n\tasync readUint8Array(offset, length) {\n\t\tconst reader = this;\n\t\tconst offsetEnd = offset + length;\n\t\tconst blob = offset || offsetEnd < reader.size ? reader.blob.slice(offset, offsetEnd) : reader.blob;\n\t\tlet arrayBuffer = await blob.arrayBuffer();\n\t\tif (arrayBuffer.byteLength > length) {\n\t\t\tarrayBuffer = arrayBuffer.slice(offset, offsetEnd);\n\t\t}\n\t\treturn new Uint8Array(arrayBuffer);\n\t}\n}\n\nclass BlobWriter extends Stream {\n\n\tconstructor(contentType) {\n\t\tsuper();\n\t\tconst writer = this;\n\t\tconst transformStream = new TransformStream();\n\t\tconst headers = [];\n\t\tif (contentType) {\n\t\t\theaders.push([HTTP_HEADER_CONTENT_TYPE, contentType]);\n\t\t}\n\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn transformStream.writable;\n\t\t\t}\n\t\t});\n\t\twriter.blob = new Response(transformStream.readable, { headers }).blob();\n\t}\n\n\tgetData() {\n\t\treturn this.blob;\n\t}\n}\n\nclass TextReader extends BlobReader {\n\n\tconstructor(text) {\n\t\tsuper(new Blob([text], { type: CONTENT_TYPE_TEXT_PLAIN }));\n\t}\n}\n\nclass TextWriter extends BlobWriter {\n\n\tconstructor(encoding) {\n\t\tsuper(encoding);\n\t\tObject.assign(this, {\n\t\t\tencoding,\n\t\t\tutf8: !encoding || encoding.toLowerCase() == \"utf-8\"\n\t\t});\n\t}\n\n\tasync getData() {\n\t\tconst {\n\t\t\tencoding,\n\t\t\tutf8\n\t\t} = this;\n\t\tconst blob = await super.getData();\n\t\tif (blob.text && utf8) {\n\t\t\treturn blob.text();\n\t\t} else {\n\t\t\tconst reader = new FileReader();\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tObject.assign(reader, {\n\t\t\t\t\tonload: ({ target }) => resolve(target.result),\n\t\t\t\t\tonerror: () => reject(reader.error)\n\t\t\t\t});\n\t\t\t\treader.readAsText(blob, encoding);\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass FetchReader extends Reader {\n\n\tconstructor(url, options) {\n\t\tsuper();\n\t\tcreateHttpReader(this, url, options);\n\t}\n\n\tasync init() {\n\t\tawait initHttpReader(this, sendFetchRequest, getFetchRequestData);\n\t\tsuper.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn readUint8ArrayHttpReader(this, index, length, sendFetchRequest, getFetchRequestData);\n\t}\n}\n\nclass XHRReader extends Reader {\n\n\tconstructor(url, options) {\n\t\tsuper();\n\t\tcreateHttpReader(this, url, options);\n\t}\n\n\tasync init() {\n\t\tawait initHttpReader(this, sendXMLHttpRequest, getXMLHttpRequestData);\n\t\tsuper.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn readUint8ArrayHttpReader(this, index, length, sendXMLHttpRequest, getXMLHttpRequestData);\n\t}\n}\n\nfunction createHttpReader(httpReader, url, options) {\n\tconst {\n\t\tpreventHeadRequest,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests,\n\t\tcombineSizeEocd\n\t} = options;\n\toptions = Object.assign({}, options);\n\tdelete options.preventHeadRequest;\n\tdelete options.useRangeHeader;\n\tdelete options.forceRangeRequests;\n\tdelete options.combineSizeEocd;\n\tdelete options.useXHR;\n\tObject.assign(httpReader, {\n\t\turl,\n\t\toptions,\n\t\tpreventHeadRequest,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests,\n\t\tcombineSizeEocd\n\t});\n}\n\nasync function initHttpReader(httpReader, sendRequest, getRequestData) {\n\tconst {\n\t\turl,\n\t\tpreventHeadRequest,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests,\n\t\tcombineSizeEocd\n\t} = httpReader;\n\tif (isHttpFamily(url) && (useRangeHeader || forceRangeRequests) && (typeof preventHeadRequest == \"undefined\" || preventHeadRequest)) {\n\t\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader, combineSizeEocd ? -END_OF_CENTRAL_DIR_LENGTH : undefined));\n\t\tif (!forceRangeRequests && response.headers.get(HTTP_HEADER_ACCEPT_RANGES) != HTTP_RANGE_UNIT) {\n\t\t\tthrow new Error(ERR_HTTP_RANGE);\n\t\t} else {\n\t\t\tif (combineSizeEocd) {\n\t\t\t\thttpReader.eocdCache = new Uint8Array(await response.arrayBuffer());\n\t\t\t}\n\t\t\tlet contentSize;\n\t\t\tconst contentRangeHeader = response.headers.get(HTTP_HEADER_CONTENT_RANGE);\n\t\t\tif (contentRangeHeader) {\n\t\t\t\tconst splitHeader = contentRangeHeader.trim().split(/\\s*\\/\\s*/);\n\t\t\t\tif (splitHeader.length) {\n\t\t\t\t\tconst headerValue = splitHeader[1];\n\t\t\t\t\tif (headerValue && headerValue != \"*\") {\n\t\t\t\t\t\tcontentSize = Number(headerValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (contentSize === UNDEFINED_VALUE) {\n\t\t\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\n\t\t\t} else {\n\t\t\t\thttpReader.size = contentSize;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\n\t}\n}\n\nasync function readUint8ArrayHttpReader(httpReader, index, length, sendRequest, getRequestData) {\n\tconst {\n\t\tuseRangeHeader,\n\t\tforceRangeRequests,\n\t\teocdCache,\n\t\tsize,\n\t\toptions\n\t} = httpReader;\n\tif (useRangeHeader || forceRangeRequests) {\n\t\tif (eocdCache && index == size - END_OF_CENTRAL_DIR_LENGTH && length == END_OF_CENTRAL_DIR_LENGTH) {\n\t\t\treturn eocdCache;\n\t\t}\n\t\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader, index, length));\n\t\tif (response.status != 206) {\n\t\t\tthrow new Error(ERR_HTTP_RANGE);\n\t\t}\n\t\treturn new Uint8Array(await response.arrayBuffer());\n\t} else {\n\t\tconst { data } = httpReader;\n\t\tif (!data) {\n\t\t\tawait getRequestData(httpReader, options);\n\t\t}\n\t\treturn new Uint8Array(httpReader.data.subarray(index, index + length));\n\t}\n}\n\nfunction getRangeHeaders(httpReader, index = 0, length = 1) {\n\treturn Object.assign({}, getHeaders(httpReader), { [HTTP_HEADER_RANGE]: HTTP_RANGE_UNIT + \"=\" + (index < 0 ? index : index + \"-\" + (index + length - 1)) });\n}\n\nfunction getHeaders({ options }) {\n\tconst { headers } = options;\n\tif (headers) {\n\t\tif (Symbol.iterator in headers) {\n\t\t\treturn Object.fromEntries(headers);\n\t\t} else {\n\t\t\treturn headers;\n\t\t}\n\t}\n}\n\nasync function getFetchRequestData(httpReader) {\n\tawait getRequestData(httpReader, sendFetchRequest);\n}\n\nasync function getXMLHttpRequestData(httpReader) {\n\tawait getRequestData(httpReader, sendXMLHttpRequest);\n}\n\nasync function getRequestData(httpReader, sendRequest) {\n\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getHeaders(httpReader));\n\thttpReader.data = new Uint8Array(await response.arrayBuffer());\n\tif (!httpReader.size) {\n\t\thttpReader.size = httpReader.data.length;\n\t}\n}\n\nasync function getContentLength(httpReader, sendRequest, getRequestData) {\n\tif (httpReader.preventHeadRequest) {\n\t\tawait getRequestData(httpReader, httpReader.options);\n\t} else {\n\t\tconst response = await sendRequest(HTTP_METHOD_HEAD, httpReader, getHeaders(httpReader));\n\t\tconst contentLength = response.headers.get(HTTP_HEADER_CONTENT_LENGTH);\n\t\tif (contentLength) {\n\t\t\thttpReader.size = Number(contentLength);\n\t\t} else {\n\t\t\tawait getRequestData(httpReader, httpReader.options);\n\t\t}\n\t}\n}\n\nasync function sendFetchRequest(method, { options, url }, headers) {\n\tconst response = await fetch(url, Object.assign({}, options, { method, headers }));\n\tif (response.status < 400) {\n\t\treturn response;\n\t} else {\n\t\tthrow response.status == 416 ? new Error(ERR_HTTP_RANGE) : new Error(ERR_HTTP_STATUS + (response.statusText || response.status));\n\t}\n}\n\nfunction sendXMLHttpRequest(method, { url }, headers) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\trequest.addEventListener(\"load\", () => {\n\t\t\tif (request.status < 400) {\n\t\t\t\tconst headers = [];\n\t\t\t\trequest.getAllResponseHeaders().trim().split(/[\\r\\n]+/).forEach(header => {\n\t\t\t\t\tconst splitHeader = header.trim().split(/\\s*:\\s*/);\n\t\t\t\t\tsplitHeader[0] = splitHeader[0].trim().replace(/^[a-z]|-[a-z]/g, value => value.toUpperCase());\n\t\t\t\t\theaders.push(splitHeader);\n\t\t\t\t});\n\t\t\t\tresolve({\n\t\t\t\t\tstatus: request.status,\n\t\t\t\t\tarrayBuffer: () => request.response,\n\t\t\t\t\theaders: new Map(headers)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treject(request.status == 416 ? new Error(ERR_HTTP_RANGE) : new Error(ERR_HTTP_STATUS + (request.statusText || request.status)));\n\t\t\t}\n\t\t}, false);\n\t\trequest.addEventListener(\"error\", event => reject(event.detail ? event.detail.error : new Error(\"Network error\")), false);\n\t\trequest.open(method, url);\n\t\tif (headers) {\n\t\t\tfor (const entry of Object.entries(headers)) {\n\t\t\t\trequest.setRequestHeader(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t\trequest.responseType = \"arraybuffer\";\n\t\trequest.send();\n\t});\n}\n\nclass HttpReader extends Reader {\n\n\tconstructor(url, options = {}) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\turl,\n\t\t\treader: options.useXHR ? new XHRReader(url, options) : new FetchReader(url, options)\n\t\t});\n\t}\n\n\tset size(value) {\n\t\t// ignored\n\t}\n\n\tget size() {\n\t\treturn this.reader.size;\n\t}\n\n\tasync init() {\n\t\tawait this.reader.init();\n\t\tsuper.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn this.reader.readUint8Array(index, length);\n\t}\n}\n\nclass HttpRangeReader extends HttpReader {\n\n\tconstructor(url, options = {}) {\n\t\toptions.useRangeHeader = true;\n\t\tsuper(url, options);\n\t}\n}\n\n\nclass Uint8ArrayReader extends Reader {\n\n\tconstructor(array) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tarray,\n\t\t\tsize: array.length\n\t\t});\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn this.array.slice(index, index + length);\n\t}\n}\n\nclass Uint8ArrayWriter extends Writer {\n\n\tinit(initSize = 0) {\n\t\tObject.assign(this, {\n\t\t\toffset: 0,\n\t\t\tarray: new Uint8Array(initSize)\n\t\t});\n\t\tsuper.init();\n\t}\n\n\twriteUint8Array(array) {\n\t\tconst writer = this;\n\t\tif (writer.offset + array.length > writer.array.length) {\n\t\t\tconst previousArray = writer.array;\n\t\t\twriter.array = new Uint8Array(previousArray.length + array.length);\n\t\t\twriter.array.set(previousArray);\n\t\t}\n\t\twriter.array.set(array, writer.offset);\n\t\twriter.offset += array.length;\n\t}\n\n\tgetData() {\n\t\treturn this.array;\n\t}\n}\n\nclass SplitDataReader extends Reader {\n\n\tconstructor(readers) {\n\t\tsuper();\n\t\tthis.readers = readers;\n\t}\n\n\tasync init() {\n\t\tconst reader = this;\n\t\tconst { readers } = reader;\n\t\treader.lastDiskNumber = 0;\n\t\treader.lastDiskOffset = 0;\n\t\tawait Promise.all(readers.map(async (diskReader, indexDiskReader) => {\n\t\t\tawait diskReader.init();\n\t\t\tif (indexDiskReader != readers.length - 1) {\n\t\t\t\treader.lastDiskOffset += diskReader.size;\n\t\t\t}\n\t\t\treader.size += diskReader.size;\n\t\t}));\n\t\tsuper.init();\n\t}\n\n\tasync readUint8Array(offset, length, diskNumber = 0) {\n\t\tconst reader = this;\n\t\tconst { readers } = this;\n\t\tlet result;\n\t\tlet currentDiskNumber = diskNumber;\n\t\tif (currentDiskNumber == -1) {\n\t\t\tcurrentDiskNumber = readers.length - 1;\n\t\t}\n\t\tlet currentReaderOffset = offset;\n\t\twhile (currentReaderOffset >= readers[currentDiskNumber].size) {\n\t\t\tcurrentReaderOffset -= readers[currentDiskNumber].size;\n\t\t\tcurrentDiskNumber++;\n\t\t}\n\t\tconst currentReader = readers[currentDiskNumber];\n\t\tconst currentReaderSize = currentReader.size;\n\t\tif (currentReaderOffset + length <= currentReaderSize) {\n\t\t\tresult = await readUint8Array(currentReader, currentReaderOffset, length);\n\t\t} else {\n\t\t\tconst chunkLength = currentReaderSize - currentReaderOffset;\n\t\t\tresult = new Uint8Array(length);\n\t\t\tresult.set(await readUint8Array(currentReader, currentReaderOffset, chunkLength));\n\t\t\tresult.set(await reader.readUint8Array(offset + chunkLength, length - chunkLength, diskNumber), chunkLength);\n\t\t}\n\t\treader.lastDiskNumber = Math.max(currentDiskNumber, reader.lastDiskNumber);\n\t\treturn result;\n\t}\n}\n\nclass SplitDataWriter extends Stream {\n\n\tconstructor(writerGenerator, maxSize = 4294967295) {\n\t\tsuper();\n\t\tconst writer = this;\n\t\tObject.assign(writer, {\n\t\t\tdiskNumber: 0,\n\t\t\tdiskOffset: 0,\n\t\t\tsize: 0,\n\t\t\tmaxSize,\n\t\t\tavailableSize: maxSize\n\t\t});\n\t\tlet diskSourceWriter, diskWritable, diskWriter;\n\t\tconst writable = new WritableStream({\n\t\t\tasync write(chunk) {\n\t\t\t\tconst { availableSize } = writer;\n\t\t\t\tif (!diskWriter) {\n\t\t\t\t\tconst { value, done } = await writerGenerator.next();\n\t\t\t\t\tif (done && !value) {\n\t\t\t\t\t\tthrow new Error(ERR_ITERATOR_COMPLETED_TOO_SOON);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdiskSourceWriter = value;\n\t\t\t\t\t\tdiskSourceWriter.size = 0;\n\t\t\t\t\t\tif (diskSourceWriter.maxSize) {\n\t\t\t\t\t\t\twriter.maxSize = diskSourceWriter.maxSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twriter.availableSize = writer.maxSize;\n\t\t\t\t\t\tawait initStream(diskSourceWriter);\n\t\t\t\t\t\tdiskWritable = value.writable;\n\t\t\t\t\t\tdiskWriter = diskWritable.getWriter();\n\t\t\t\t\t}\n\t\t\t\t\tawait this.write(chunk);\n\t\t\t\t} else if (chunk.length >= availableSize) {\n\t\t\t\t\tawait writeChunk(chunk.slice(0, availableSize));\n\t\t\t\t\tawait closeDisk();\n\t\t\t\t\twriter.diskOffset += diskSourceWriter.size;\n\t\t\t\t\twriter.diskNumber++;\n\t\t\t\t\tdiskWriter = null;\n\t\t\t\t\tawait this.write(chunk.slice(availableSize));\n\t\t\t\t} else {\n\t\t\t\t\tawait writeChunk(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync close() {\n\t\t\t\tawait diskWriter.ready;\n\t\t\t\tawait closeDisk();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn writable;\n\t\t\t}\n\t\t});\n\n\t\tasync function writeChunk(chunk) {\n\t\t\tconst chunkLength = chunk.length;\n\t\t\tif (chunkLength) {\n\t\t\t\tawait diskWriter.ready;\n\t\t\t\tawait diskWriter.write(chunk);\n\t\t\t\tdiskSourceWriter.size += chunkLength;\n\t\t\t\twriter.size += chunkLength;\n\t\t\t\twriter.availableSize -= chunkLength;\n\t\t\t}\n\t\t}\n\n\t\tasync function closeDisk() {\n\t\t\tdiskWritable.size = diskSourceWriter.size;\n\t\t\tawait diskWriter.close();\n\t\t}\n\t}\n}\n\nfunction isHttpFamily(url) {\n\tconst { baseURL } = getConfiguration();\n\tconst { protocol } = new URL(url, baseURL);\n\treturn protocol == \"http:\" || protocol == \"https:\";\n}\n\nasync function initStream(stream, initSize) {\n\tif (stream.init && !stream.initialized) {\n\t\tawait stream.init(initSize);\n\t} else {\n\t\treturn Promise.resolve();\n\t}\n}\n\nfunction initReader(reader) {\n\tif (Array.isArray(reader)) {\n\t\treader = new SplitDataReader(reader);\n\t}\n\tif (reader instanceof ReadableStream) {\n\t\treader = {\n\t\t\treadable: reader\n\t\t};\n\t}\n\treturn reader;\n}\n\nfunction initWriter(writer) {\n\tif (writer.writable === UNDEFINED_VALUE && typeof writer.next == FUNCTION_TYPE) {\n\t\twriter = new SplitDataWriter(writer);\n\t}\n\tif (writer instanceof WritableStream) {\n\t\twriter = {\n\t\t\twritable: writer\n\t\t};\n\t}\n\tconst { writable } = writer;\n\tif (writable.size === UNDEFINED_VALUE) {\n\t\twritable.size = 0;\n\t}\n\tif (!(writer instanceof SplitDataWriter)) {\n\t\tObject.assign(writer, {\n\t\t\tdiskNumber: 0,\n\t\t\tdiskOffset: 0,\n\t\t\tavailableSize: Infinity,\n\t\t\tmaxSize: Infinity\n\t\t});\n\t}\n\treturn writer;\n}\n\nfunction readUint8Array(reader, offset, size, diskNumber) {\n\treturn reader.readUint8Array(offset, size, diskNumber);\n}\n\nconst SplitZipReader = SplitDataReader;\nconst SplitZipWriter = SplitDataWriter;\n\nexport {\n\tinitStream,\n\tinitReader,\n\tinitWriter,\n\treadUint8Array,\n\tReader,\n\tWriter,\n\tTextReader,\n\tTextWriter,\n\tData64URIReader,\n\tData64URIWriter,\n\tBlobReader,\n\tBlobWriter,\n\tUint8ArrayReader,\n\tUint8ArrayWriter,\n\tHttpReader,\n\tHttpRangeReader,\n\tSplitZipReader,\n\tSplitZipWriter,\n\tSplitDataReader,\n\tSplitDataWriter,\n\tERR_HTTP_RANGE,\n\tERR_ITERATOR_COMPLETED_TOO_SOON\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextDecoder */\n\nconst CP437 = \"\\0☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \".split(\"\");\nconst VALID_CP437 = CP437.length == 256;\n\nexport {\n\tdecodeCP437\n};\n\nfunction decodeCP437(stringValue) {\n\tif (VALID_CP437) {\n\t\tlet result = \"\";\n\t\tfor (let indexCharacter = 0; indexCharacter < stringValue.length; indexCharacter++) {\n\t\t\tresult += CP437[stringValue[indexCharacter]];\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn new TextDecoder().decode(stringValue);\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst PROPERTY_NAME_FILENAME = \"filename\";\nconst PROPERTY_NAME_RAW_FILENAME = \"rawFilename\";\nconst PROPERTY_NAME_COMMENT = \"comment\";\nconst PROPERTY_NAME_RAW_COMMENT = \"rawComment\";\nconst PROPERTY_NAME_UNCOMPPRESSED_SIZE = \"uncompressedSize\";\nconst PROPERTY_NAME_COMPPRESSED_SIZE = \"compressedSize\";\nconst PROPERTY_NAME_OFFSET = \"offset\";\nconst PROPERTY_NAME_DISK_NUMBER_START = \"diskNumberStart\";\nconst PROPERTY_NAME_LAST_MODIFICATION_DATE = \"lastModDate\";\nconst PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE = \"rawLastModDate\";\nconst PROPERTY_NAME_LAST_ACCESS_DATE = \"lastAccessDate\";\nconst PROPERTY_NAME_RAW_LAST_ACCESS_DATE = \"rawLastAccessDate\";\nconst PROPERTY_NAME_CREATION_DATE = \"creationDate\";\nconst PROPERTY_NAME_RAW_CREATION_DATE = \"rawCreationDate\";\nconst PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE = \"internalFileAttribute\";\nconst PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE = \"externalFileAttribute\";\nconst PROPERTY_NAME_MS_DOS_COMPATIBLE = \"msDosCompatible\";\nconst PROPERTY_NAME_ZIP64 = \"zip64\";\n\nconst PROPERTY_NAMES = [\n\tPROPERTY_NAME_FILENAME, PROPERTY_NAME_RAW_FILENAME, PROPERTY_NAME_COMPPRESSED_SIZE, PROPERTY_NAME_UNCOMPPRESSED_SIZE,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE, PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE, PROPERTY_NAME_COMMENT, PROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_LAST_ACCESS_DATE, PROPERTY_NAME_CREATION_DATE, PROPERTY_NAME_OFFSET, PROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_DISK_NUMBER_START, PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE, PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE, PROPERTY_NAME_ZIP64,\n\t\"directory\", \"bitFlag\", \"encrypted\", \"signature\", \"filenameUTF8\", \"commentUTF8\", \"compressionMethod\", \"version\", \"versionMadeBy\",\n\t\"extraField\", \"rawExtraField\", \"extraFieldZip64\", \"extraFieldUnicodePath\", \"extraFieldUnicodeComment\", \"extraFieldAES\", \"extraFieldNTFS\",\n\t\"extraFieldExtendedTimestamp\"];\n\nclass Entry {\n\n\tconstructor(data) {\n\t\tPROPERTY_NAMES.forEach(name => this[name] = data[name]);\n\t}\n\n}\n\nexport {\n\tPROPERTY_NAME_FILENAME,\n\tPROPERTY_NAME_RAW_FILENAME,\n\tPROPERTY_NAME_COMMENT,\n\tPROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_UNCOMPPRESSED_SIZE,\n\tPROPERTY_NAME_COMPPRESSED_SIZE,\n\tPROPERTY_NAME_OFFSET,\n\tPROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_RAW_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_RAW_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_RAW_CREATION_DATE,\n\tPROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE,\n\tPROPERTY_NAME_ZIP64,\n\tEntry\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in\n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global BigInt, TransformStream, Response */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tSPLIT_ZIP_FILE_SIGNATURE,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_USDZ,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tVERSION_DEFLATE,\n\tVERSION_ZIP64,\n\tVERSION_AES,\n\tDIRECTORY_SIGNATURE,\n\tMIN_DATE,\n\tMAX_DATE,\n\tUNDEFINED_VALUE\n} from \"./constants.js\";\nimport {\n\tgetConfiguration,\n\tgetChunkSize\n} from \"./configuration.js\";\nimport {\n\tCODEC_DEFLATE,\n\trunWorker\n} from \"./codec-pool.js\";\nimport {\n\tinitStream,\n\tinitReader,\n\tinitWriter\n} from \"./io.js\";\nimport { encodeText } from \"./util/encode-text.js\";\nimport {\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE,\n\tPROPERTY_NAME_ZIP64,\n\tEntry\n} from \"./zip-entry.js\";\n\nconst ERR_DUPLICATED_NAME = \"File already exists\";\nconst ERR_INVALID_COMMENT = \"Zip file comment exceeds 64KB\";\nconst ERR_INVALID_ENTRY_COMMENT = \"File entry comment exceeds 64KB\";\nconst ERR_INVALID_ENTRY_NAME = \"File entry name exceeds 64KB\";\nconst ERR_INVALID_VERSION = \"Version exceeds 65535\";\nconst ERR_INVALID_ENCRYPTION_STRENGTH = \"The strength must equal 1, 2, or 3\";\nconst ERR_INVALID_EXTRAFIELD_TYPE = \"Extra field type exceeds 65535\";\nconst ERR_INVALID_EXTRAFIELD_DATA = \"Extra field data exceeds 64KB\";\nconst ERR_UNSUPPORTED_FORMAT = \"Zip64 is not supported (make sure 'keepOrder' is set to 'true')\";\n\nconst EXTRAFIELD_DATA_AES = new Uint8Array([0x07, 0x00, 0x02, 0x00, 0x41, 0x45, 0x03, 0x00, 0x00]);\n\nlet workers = 0;\nconst pendingEntries = [];\n\nclass ZipWriter {\n\n\tconstructor(writer, options = {}) {\n\t\twriter = initWriter(writer);\n\t\tconst addSplitZipSignature =\n\t\t\twriter.availableSize !== UNDEFINED_VALUE && writer.availableSize > 0 && writer.availableSize !== Infinity &&\n\t\t\twriter.maxSize !== UNDEFINED_VALUE && writer.maxSize > 0 && writer.maxSize !== Infinity;\n\t\tObject.assign(this, {\n\t\t\twriter,\n\t\t\taddSplitZipSignature,\n\t\t\toptions,\n\t\t\tconfig: getConfiguration(),\n\t\t\tfiles: new Map(),\n\t\t\tfilenames: new Set(),\n\t\t\toffset: writer.writable.size,\n\t\t\tpendingEntriesSize: 0,\n\t\t\tpendingAddFileCalls: new Set(),\n\t\t\tbufferedWrites: 0\n\t\t});\n\t}\n\n\tasync add(name = \"\", reader, options = {}) {\n\t\tconst zipWriter = this;\n\t\tconst {\n\t\t\tpendingAddFileCalls,\n\t\t\tconfig\n\t\t} = zipWriter;\n\t\tif (workers < config.maxWorkers) {\n\t\t\tworkers++;\n\t\t} else {\n\t\t\tawait new Promise(resolve => pendingEntries.push(resolve));\n\t\t}\n\t\tlet promiseAddFile;\n\t\ttry {\n\t\t\tname = name.trim();\n\t\t\tif (zipWriter.filenames.has(name)) {\n\t\t\t\tthrow new Error(ERR_DUPLICATED_NAME);\n\t\t\t}\n\t\t\tzipWriter.filenames.add(name);\n\t\t\tpromiseAddFile = addFile(zipWriter, name, reader, options);\n\t\t\tpendingAddFileCalls.add(promiseAddFile);\n\t\t\treturn await promiseAddFile;\n\t\t} catch (error) {\n\t\t\tzipWriter.filenames.delete(name);\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\tpendingAddFileCalls.delete(promiseAddFile);\n\t\t\tconst pendingEntry = pendingEntries.shift();\n\t\t\tif (pendingEntry) {\n\t\t\t\tpendingEntry();\n\t\t\t} else {\n\t\t\t\tworkers--;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync close(comment = new Uint8Array(), options = {}) {\n\t\tconst zipWriter = this;\n\t\tconst { pendingAddFileCalls, writer } = this;\n\t\tconst { writable } = writer;\n\t\twhile (pendingAddFileCalls.size) {\n\t\t\tawait Promise.allSettled(Array.from(pendingAddFileCalls));\n\t\t}\n\t\tawait closeFile(this, comment, options);\n\t\tconst preventClose = getOptionValue(zipWriter, options, \"preventClose\");\n\t\tif (!preventClose) {\n\t\t\tawait writable.getWriter().close();\n\t\t}\n\t\treturn writer.getData ? writer.getData() : writable;\n\t}\n}\n\nclass ZipWriterStream {\n\n\tconstructor(options = {}) {\n\t\tconst { readable, writable } = new TransformStream();\n\t\tthis.readable = readable;\n\t\tthis.zipWriter = new ZipWriter(writable, options);\n\t}\n\n\ttransform(path) {\n\t\tconst { readable, writable } = new TransformStream({\n\t\t\tflush: () => { this.zipWriter.close(); }\n\t\t});\n\t\tthis.zipWriter.add(path, readable);\n\t\treturn { readable: this.readable, writable };\n\t}\n\n\twritable(path) {\n\t\tconst { readable, writable } = new TransformStream();\n\t\tthis.zipWriter.add(path, readable);\n\t\treturn writable;\n\t}\n\n\tclose(comment = undefined, options = {}) {\n\t\treturn this.zipWriter.close(comment, options);\n\t}\n}\n\nexport {\n\tZipWriter,\n\tZipWriterStream,\n\tERR_DUPLICATED_NAME,\n\tERR_INVALID_COMMENT,\n\tERR_INVALID_ENTRY_NAME,\n\tERR_INVALID_ENTRY_COMMENT,\n\tERR_INVALID_VERSION,\n\tERR_INVALID_EXTRAFIELD_TYPE,\n\tERR_INVALID_EXTRAFIELD_DATA,\n\tERR_INVALID_ENCRYPTION_STRENGTH,\n\tERR_UNSUPPORTED_FORMAT\n};\n\nasync function addFile(zipWriter, name, reader, options) {\n\tname = name.trim();\n\tif (options.directory && (!name.endsWith(DIRECTORY_SIGNATURE))) {\n\t\tname += DIRECTORY_SIGNATURE;\n\t} else {\n\t\toptions.directory = name.endsWith(DIRECTORY_SIGNATURE);\n\t}\n\tconst encode = getOptionValue(zipWriter, options, \"encodeText\", encodeText);\n\tlet rawFilename = encode(name);\n\tif (rawFilename === UNDEFINED_VALUE) {\n\t\trawFilename = encodeText(name);\n\t}\n\tif (getLength(rawFilename) > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_ENTRY_NAME);\n\t}\n\tconst comment = options.comment || \"\";\n\tlet rawComment = encode(comment);\n\tif (rawComment === UNDEFINED_VALUE) {\n\t\trawComment = encodeText(comment);\n\t}\n\tif (getLength(rawComment) > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_ENTRY_COMMENT);\n\t}\n\tconst version = getOptionValue(zipWriter, options, \"version\", VERSION_DEFLATE);\n\tif (version > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_VERSION);\n\t}\n\tconst versionMadeBy = getOptionValue(zipWriter, options, \"versionMadeBy\", 20);\n\tif (versionMadeBy > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_VERSION);\n\t}\n\tconst lastModDate = getOptionValue(zipWriter, options, PROPERTY_NAME_LAST_MODIFICATION_DATE, new Date());\n\tconst lastAccessDate = getOptionValue(zipWriter, options, PROPERTY_NAME_LAST_ACCESS_DATE);\n\tconst creationDate = getOptionValue(zipWriter, options, PROPERTY_NAME_CREATION_DATE);\n\tconst msDosCompatible = getOptionValue(zipWriter, options, PROPERTY_NAME_MS_DOS_COMPATIBLE, true);\n\tconst internalFileAttribute = getOptionValue(zipWriter, options, PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE, 0);\n\tconst externalFileAttribute = getOptionValue(zipWriter, options, PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE, 0);\n\tconst password = getOptionValue(zipWriter, options, \"password\");\n\tconst rawPassword = getOptionValue(zipWriter, options, \"rawPassword\");\n\tconst encryptionStrength = getOptionValue(zipWriter, options, \"encryptionStrength\", 3);\n\tconst zipCrypto = getOptionValue(zipWriter, options, \"zipCrypto\");\n\tconst extendedTimestamp = getOptionValue(zipWriter, options, \"extendedTimestamp\", true);\n\tconst keepOrder = getOptionValue(zipWriter, options, \"keepOrder\", true);\n\tconst level = getOptionValue(zipWriter, options, \"level\");\n\tconst useWebWorkers = getOptionValue(zipWriter, options, \"useWebWorkers\");\n\tconst bufferedWrite = getOptionValue(zipWriter, options, \"bufferedWrite\");\n\tconst dataDescriptorSignature = getOptionValue(zipWriter, options, \"dataDescriptorSignature\", false);\n\tconst signal = getOptionValue(zipWriter, options, \"signal\");\n\tconst useCompressionStream = getOptionValue(zipWriter, options, \"useCompressionStream\");\n\tlet dataDescriptor = getOptionValue(zipWriter, options, \"dataDescriptor\", true);\n\tlet zip64 = getOptionValue(zipWriter, options, PROPERTY_NAME_ZIP64);\n\tif (password !== UNDEFINED_VALUE && encryptionStrength !== UNDEFINED_VALUE && (encryptionStrength < 1 || encryptionStrength > 3)) {\n\t\tthrow new Error(ERR_INVALID_ENCRYPTION_STRENGTH);\n\t}\n\tlet rawExtraField = new Uint8Array();\n\tconst { extraField } = options;\n\tif (extraField) {\n\t\tlet extraFieldSize = 0;\n\t\tlet offset = 0;\n\t\textraField.forEach(data => extraFieldSize += 4 + getLength(data));\n\t\trawExtraField = new Uint8Array(extraFieldSize);\n\t\textraField.forEach((data, type) => {\n\t\t\tif (type > MAX_16_BITS) {\n\t\t\t\tthrow new Error(ERR_INVALID_EXTRAFIELD_TYPE);\n\t\t\t}\n\t\t\tif (getLength(data) > MAX_16_BITS) {\n\t\t\t\tthrow new Error(ERR_INVALID_EXTRAFIELD_DATA);\n\t\t\t}\n\t\t\tarraySet(rawExtraField, new Uint16Array([type]), offset);\n\t\t\tarraySet(rawExtraField, new Uint16Array([getLength(data)]), offset + 2);\n\t\t\tarraySet(rawExtraField, data, offset + 4);\n\t\t\toffset += 4 + getLength(data);\n\t\t});\n\t}\n\tlet maximumCompressedSize = 0;\n\tlet maximumEntrySize = 0;\n\tlet uncompressedSize = 0;\n\tconst zip64Enabled = zip64 === true;\n\tif (reader) {\n\t\treader = initReader(reader);\n\t\tawait initStream(reader);\n\t\tif (reader.size === UNDEFINED_VALUE) {\n\t\t\tdataDescriptor = true;\n\t\t\tif (zip64 || zip64 === UNDEFINED_VALUE) {\n\t\t\t\tzip64 = true;\n\t\t\t\tuncompressedSize = maximumCompressedSize = MAX_32_BITS + 1;\n\t\t\t}\n\t\t} else {\n\t\t\tuncompressedSize = reader.size;\n\t\t\tmaximumCompressedSize = getMaximumCompressedSize(uncompressedSize);\n\t\t}\n\t}\n\tconst { diskOffset, diskNumber, maxSize } = zipWriter.writer;\n\tconst zip64UncompressedSize = zip64Enabled || uncompressedSize > MAX_32_BITS;\n\tconst zip64CompressedSize = zip64Enabled || maximumCompressedSize > MAX_32_BITS;\n\tconst zip64Offset = zip64Enabled || zipWriter.offset + zipWriter.pendingEntriesSize - diskOffset > MAX_32_BITS;\n\tconst supportZip64SplitFile = getOptionValue(zipWriter, options, \"supportZip64SplitFile\", true);\n\tconst zip64DiskNumberStart = (supportZip64SplitFile && zip64Enabled) || diskNumber + Math.ceil(zipWriter.pendingEntriesSize / maxSize) > MAX_16_BITS;\n\tif (zip64Offset || zip64UncompressedSize || zip64CompressedSize || zip64DiskNumberStart) {\n\t\tif (zip64 === false || !keepOrder) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\n\t\t} else {\n\t\t\tzip64 = true;\n\t\t}\n\t}\n\tzip64 = zip64 || false;\n\toptions = Object.assign({}, options, {\n\t\trawFilename,\n\t\trawComment,\n\t\tversion,\n\t\tversionMadeBy,\n\t\tlastModDate,\n\t\tlastAccessDate,\n\t\tcreationDate,\n\t\trawExtraField,\n\t\tzip64,\n\t\tzip64UncompressedSize,\n\t\tzip64CompressedSize,\n\t\tzip64Offset,\n\t\tzip64DiskNumberStart,\n\t\tpassword,\n\t\trawPassword,\n\t\tlevel: !useCompressionStream && (zipWriter.config.CompressionStream === UNDEFINED_VALUE && zipWriter.config.CompressionStreamNative === UNDEFINED_VALUE) ? 0 : level,\n\t\tuseWebWorkers,\n\t\tencryptionStrength,\n\t\textendedTimestamp,\n\t\tzipCrypto,\n\t\tbufferedWrite,\n\t\tkeepOrder,\n\t\tdataDescriptor,\n\t\tdataDescriptorSignature,\n\t\tsignal,\n\t\tmsDosCompatible,\n\t\tinternalFileAttribute,\n\t\texternalFileAttribute,\n\t\tuseCompressionStream\n\t});\n\tconst headerInfo = getHeaderInfo(options);\n\tconst dataDescriptorInfo = getDataDescriptorInfo(options);\n\tconst metadataSize = getLength(headerInfo.localHeaderArray, dataDescriptorInfo.dataDescriptorArray);\n\tmaximumEntrySize = metadataSize + maximumCompressedSize;\n\tif (zipWriter.options.usdz) {\n\t\tmaximumEntrySize += maximumEntrySize + 64;\n\t}\n\tzipWriter.pendingEntriesSize += maximumEntrySize;\n\tlet fileEntry;\n\ttry {\n\t\tfileEntry = await getFileEntry(zipWriter, name, reader, { headerInfo, dataDescriptorInfo, metadataSize }, options);\n\t} finally {\n\t\tzipWriter.pendingEntriesSize -= maximumEntrySize;\n\t}\n\tObject.assign(fileEntry, { name, comment, extraField });\n\treturn new Entry(fileEntry);\n}\n\nasync function getFileEntry(zipWriter, name, reader, entryInfo, options) {\n\tconst {\n\t\tfiles,\n\t\twriter\n\t} = zipWriter;\n\tconst {\n\t\tkeepOrder,\n\t\tdataDescriptor,\n\t\tsignal\n\t} = options;\n\tconst {\n\t\theaderInfo\n\t} = entryInfo;\n\tconst { usdz } = zipWriter.options;\n\tconst previousFileEntry = Array.from(files.values()).pop();\n\tlet fileEntry = {};\n\tlet bufferedWrite;\n\tlet releaseLockWriter;\n\tlet releaseLockCurrentFileEntry;\n\tlet writingBufferedEntryData;\n\tlet writingEntryData;\n\tlet fileWriter;\n\tlet blobPromise;\n\tfiles.set(name, fileEntry);\n\ttry {\n\t\tlet lockPreviousFileEntry;\n\t\tif (keepOrder) {\n\t\t\tlockPreviousFileEntry = previousFileEntry && previousFileEntry.lock;\n\t\t\trequestLockCurrentFileEntry();\n\t\t}\n\t\tif ((options.bufferedWrite || zipWriter.writerLocked || (zipWriter.bufferedWrites && keepOrder) || !dataDescriptor) && !usdz) {\n\t\t\tfileWriter = new TransformStream();\n\t\t\tblobPromise = new Response(fileWriter.readable).blob();\n\t\t\tfileWriter.writable.size = 0;\n\t\t\tbufferedWrite = true;\n\t\t\tzipWriter.bufferedWrites++;\n\t\t\tawait initStream(writer);\n\t\t} else {\n\t\t\tfileWriter = writer;\n\t\t\tawait requestLockWriter();\n\t\t}\n\t\tawait initStream(fileWriter);\n\t\tconst { writable } = writer;\n\t\tlet { diskOffset } = writer;\n\t\tif (zipWriter.addSplitZipSignature) {\n\t\t\tdelete zipWriter.addSplitZipSignature;\n\t\t\tconst signatureArray = new Uint8Array(4);\n\t\t\tconst signatureArrayView = getDataView(signatureArray);\n\t\t\tsetUint32(signatureArrayView, 0, SPLIT_ZIP_FILE_SIGNATURE);\n\t\t\tawait writeData(writable, signatureArray);\n\t\t\tzipWriter.offset += 4;\n\t\t}\n\t\tif (usdz) {\n\t\t\tappendExtraFieldUSDZ(entryInfo, zipWriter.offset - diskOffset);\n\t\t}\n\t\tif (!bufferedWrite) {\n\t\t\tawait lockPreviousFileEntry;\n\t\t\tawait skipDiskIfNeeded(writable);\n\t\t}\n\t\tconst { diskNumber } = writer;\n\t\twritingEntryData = true;\n\t\tfileEntry.diskNumberStart = diskNumber;\n\t\tfileEntry = await createFileEntry(reader, fileWriter, fileEntry, entryInfo, zipWriter.config, options);\n\t\twritingEntryData = false;\n\t\tfiles.set(name, fileEntry);\n\t\tfileEntry.filename = name;\n\t\tif (bufferedWrite) {\n\t\t\tawait fileWriter.writable.getWriter().close();\n\t\t\tlet blob = await blobPromise;\n\t\t\tawait lockPreviousFileEntry;\n\t\t\tawait requestLockWriter();\n\t\t\twritingBufferedEntryData = true;\n\t\t\tif (!dataDescriptor) {\n\t\t\t\tblob = await writeExtraHeaderInfo(fileEntry, blob, writable, options);\n\t\t\t}\n\t\t\tawait skipDiskIfNeeded(writable);\n\t\t\tfileEntry.diskNumberStart = writer.diskNumber;\n\t\t\tdiskOffset = writer.diskOffset;\n\t\t\tawait blob.stream().pipeTo(writable, { preventClose: true, preventAbort: true, signal });\n\t\t\twritable.size += blob.size;\n\t\t\twritingBufferedEntryData = false;\n\t\t}\n\t\tfileEntry.offset = zipWriter.offset - diskOffset;\n\t\tif (fileEntry.zip64) {\n\t\t\tsetZip64ExtraInfo(fileEntry, options);\n\t\t} else if (fileEntry.offset > MAX_32_BITS) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\n\t\t}\n\t\tzipWriter.offset += fileEntry.size;\n\t\treturn fileEntry;\n\t} catch (error) {\n\t\tif ((bufferedWrite && writingBufferedEntryData) || (!bufferedWrite && writingEntryData)) {\n\t\t\tzipWriter.hasCorruptedEntries = true;\n\t\t\tif (error) {\n\t\t\t\ttry {\n\t\t\t\t\terror.corruptedEntry = true;\n\t\t\t\t} catch (_error) {\n\t\t\t\t\t// ignored\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bufferedWrite) {\n\t\t\t\tzipWriter.offset += fileWriter.writable.size;\n\t\t\t} else {\n\t\t\t\tzipWriter.offset = fileWriter.writable.size;\n\t\t\t}\n\t\t}\n\t\tfiles.delete(name);\n\t\tthrow error;\n\t} finally {\n\t\tif (bufferedWrite) {\n\t\t\tzipWriter.bufferedWrites--;\n\t\t}\n\t\tif (releaseLockCurrentFileEntry) {\n\t\t\treleaseLockCurrentFileEntry();\n\t\t}\n\t\tif (releaseLockWriter) {\n\t\t\treleaseLockWriter();\n\t\t}\n\t}\n\n\tfunction requestLockCurrentFileEntry() {\n\t\tfileEntry.lock = new Promise(resolve => releaseLockCurrentFileEntry = resolve);\n\t}\n\n\tasync function requestLockWriter() {\n\t\tzipWriter.writerLocked = true;\n\t\tconst { lockWriter } = zipWriter;\n\t\tzipWriter.lockWriter = new Promise(resolve => releaseLockWriter = () => {\n\t\t\tzipWriter.writerLocked = false;\n\t\t\tresolve();\n\t\t});\n\t\tawait lockWriter;\n\t}\n\n\tasync function skipDiskIfNeeded(writable) {\n\t\tif (getLength(headerInfo.localHeaderArray) > writer.availableSize) {\n\t\t\twriter.availableSize = 0;\n\t\t\tawait writeData(writable, new Uint8Array());\n\t\t}\n\t}\n}\n\nasync function createFileEntry(reader, writer, { diskNumberStart, lock }, entryInfo, config, options) {\n\tconst {\n\t\theaderInfo,\n\t\tdataDescriptorInfo,\n\t\tmetadataSize\n\t} = entryInfo;\n\tconst {\n\t\tlocalHeaderArray,\n\t\theaderArray,\n\t\tlastModDate,\n\t\trawLastModDate,\n\t\tencrypted,\n\t\tcompressed,\n\t\tversion,\n\t\tcompressionMethod,\n\t\trawExtraFieldExtendedTimestamp,\n\t\textraFieldExtendedTimestampFlag,\n\t\trawExtraFieldNTFS,\n\t\trawExtraFieldAES\n\t} = headerInfo;\n\tconst { dataDescriptorArray } = dataDescriptorInfo;\n\tconst {\n\t\trawFilename,\n\t\tlastAccessDate,\n\t\tcreationDate,\n\t\tpassword,\n\t\trawPassword,\n\t\tlevel,\n\t\tzip64,\n\t\tzip64UncompressedSize,\n\t\tzip64CompressedSize,\n\t\tzip64Offset,\n\t\tzip64DiskNumberStart,\n\t\tzipCrypto,\n\t\tdataDescriptor,\n\t\tdirectory,\n\t\tversionMadeBy,\n\t\trawComment,\n\t\trawExtraField,\n\t\tuseWebWorkers,\n\t\tonstart,\n\t\tonprogress,\n\t\tonend,\n\t\tsignal,\n\t\tencryptionStrength,\n\t\textendedTimestamp,\n\t\tmsDosCompatible,\n\t\tinternalFileAttribute,\n\t\texternalFileAttribute,\n\t\tuseCompressionStream\n\t} = options;\n\tconst fileEntry = {\n\t\tlock,\n\t\tversionMadeBy,\n\t\tzip64,\n\t\tdirectory: Boolean(directory),\n\t\tfilenameUTF8: true,\n\t\trawFilename,\n\t\tcommentUTF8: true,\n\t\trawComment,\n\t\trawExtraFieldExtendedTimestamp,\n\t\trawExtraFieldNTFS,\n\t\trawExtraFieldAES,\n\t\trawExtraField,\n\t\textendedTimestamp,\n\t\tmsDosCompatible,\n\t\tinternalFileAttribute,\n\t\texternalFileAttribute,\n\t\tdiskNumberStart\n\t};\n\tlet compressedSize = 0;\n\tlet uncompressedSize = 0;\n\tlet signature;\n\tconst { writable } = writer;\n\tif (reader) {\n\t\treader.chunkSize = getChunkSize(config);\n\t\tawait writeData(writable, localHeaderArray);\n\t\tconst readable = reader.readable;\n\t\tconst size = readable.size = reader.size;\n\t\tconst workerOptions = {\n\t\t\toptions: {\n\t\t\t\tcodecType: CODEC_DEFLATE,\n\t\t\t\tlevel,\n\t\t\t\trawPassword,\n\t\t\t\tpassword,\n\t\t\t\tencryptionStrength,\n\t\t\t\tzipCrypto: encrypted && zipCrypto,\n\t\t\t\tpasswordVerification: encrypted && zipCrypto && (rawLastModDate >> 8) & 0xFF,\n\t\t\t\tsigned: true,\n\t\t\t\tcompressed,\n\t\t\t\tencrypted,\n\t\t\t\tuseWebWorkers,\n\t\t\t\tuseCompressionStream,\n\t\t\t\ttransferStreams: false\n\t\t\t},\n\t\t\tconfig,\n\t\t\tstreamOptions: { signal, size, onstart, onprogress, onend }\n\t\t};\n\t\tconst result = await runWorker({ readable, writable }, workerOptions);\n\t\tuncompressedSize = result.inputSize;\n\t\tcompressedSize = result.outputSize;\n\t\tsignature = result.signature;\n\t\twritable.size += uncompressedSize;\n\t} else {\n\t\tawait writeData(writable, localHeaderArray);\n\t}\n\tlet rawExtraFieldZip64;\n\tif (zip64) {\n\t\tlet rawExtraFieldZip64Length = 4;\n\t\tif (zip64UncompressedSize) {\n\t\t\trawExtraFieldZip64Length += 8;\n\t\t}\n\t\tif (zip64CompressedSize) {\n\t\t\trawExtraFieldZip64Length += 8;\n\t\t}\n\t\tif (zip64Offset) {\n\t\t\trawExtraFieldZip64Length += 8;\n\t\t}\n\t\tif (zip64DiskNumberStart) {\n\t\t\trawExtraFieldZip64Length += 4;\n\t\t}\n\t\trawExtraFieldZip64 = new Uint8Array(rawExtraFieldZip64Length);\n\t} else {\n\t\trawExtraFieldZip64 = new Uint8Array();\n\t}\n\tsetEntryInfo({\n\t\tsignature,\n\t\trawExtraFieldZip64,\n\t\tcompressedSize,\n\t\tuncompressedSize,\n\t\theaderInfo,\n\t\tdataDescriptorInfo\n\t}, options);\n\tif (dataDescriptor) {\n\t\tawait writeData(writable, dataDescriptorArray);\n\t}\n\tObject.assign(fileEntry, {\n\t\tuncompressedSize,\n\t\tcompressedSize,\n\t\tlastModDate,\n\t\trawLastModDate,\n\t\tcreationDate,\n\t\tlastAccessDate,\n\t\tencrypted,\n\t\tsize: metadataSize + compressedSize,\n\t\tcompressionMethod,\n\t\tversion,\n\t\theaderArray,\n\t\tsignature,\n\t\trawExtraFieldZip64,\n\t\textraFieldExtendedTimestampFlag,\n\t\tzip64UncompressedSize,\n\t\tzip64CompressedSize,\n\t\tzip64Offset,\n\t\tzip64DiskNumberStart\n\t});\n\treturn fileEntry;\n}\n\nfunction getHeaderInfo(options) {\n\tconst {\n\t\trawFilename,\n\t\tlastModDate,\n\t\tlastAccessDate,\n\t\tcreationDate,\n\t\trawPassword,\n\t\tpassword,\n\t\tlevel,\n\t\tzip64,\n\t\tzipCrypto,\n\t\tdataDescriptor,\n\t\tdirectory,\n\t\trawExtraField,\n\t\tencryptionStrength,\n\t\textendedTimestamp\n\t} = options;\n\tconst compressed = level !== 0 && !directory;\n\tconst encrypted = Boolean((password && getLength(password)) || (rawPassword && getLength(rawPassword)));\n\tlet version = options.version;\n\tlet rawExtraFieldAES;\n\tif (encrypted && !zipCrypto) {\n\t\trawExtraFieldAES = new Uint8Array(getLength(EXTRAFIELD_DATA_AES) + 2);\n\t\tconst extraFieldAESView = getDataView(rawExtraFieldAES);\n\t\tsetUint16(extraFieldAESView, 0, EXTRAFIELD_TYPE_AES);\n\t\tarraySet(rawExtraFieldAES, EXTRAFIELD_DATA_AES, 2);\n\t\tsetUint8(extraFieldAESView, 8, encryptionStrength);\n\t} else {\n\t\trawExtraFieldAES = new Uint8Array();\n\t}\n\tlet rawExtraFieldNTFS;\n\tlet rawExtraFieldExtendedTimestamp;\n\tlet extraFieldExtendedTimestampFlag;\n\tif (extendedTimestamp) {\n\t\trawExtraFieldExtendedTimestamp = new Uint8Array(9 + (lastAccessDate ? 4 : 0) + (creationDate ? 4 : 0));\n\t\tconst extraFieldExtendedTimestampView = getDataView(rawExtraFieldExtendedTimestamp);\n\t\tsetUint16(extraFieldExtendedTimestampView, 0, EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\t\tsetUint16(extraFieldExtendedTimestampView, 2, getLength(rawExtraFieldExtendedTimestamp) - 4);\n\t\textraFieldExtendedTimestampFlag = 0x1 + (lastAccessDate ? 0x2 : 0) + (creationDate ? 0x4 : 0);\n\t\tsetUint8(extraFieldExtendedTimestampView, 4, extraFieldExtendedTimestampFlag);\n\t\tlet offset = 5;\n\t\tsetUint32(extraFieldExtendedTimestampView, offset, Math.floor(lastModDate.getTime() / 1000));\n\t\toffset += 4;\n\t\tif (lastAccessDate) {\n\t\t\tsetUint32(extraFieldExtendedTimestampView, offset, Math.floor(lastAccessDate.getTime() / 1000));\n\t\t\toffset += 4;\n\t\t}\n\t\tif (creationDate) {\n\t\t\tsetUint32(extraFieldExtendedTimestampView, offset, Math.floor(creationDate.getTime() / 1000));\n\t\t}\n\t\ttry {\n\t\t\trawExtraFieldNTFS = new Uint8Array(36);\n\t\t\tconst extraFieldNTFSView = getDataView(rawExtraFieldNTFS);\n\t\t\tconst lastModTimeNTFS = getTimeNTFS(lastModDate);\n\t\t\tsetUint16(extraFieldNTFSView, 0, EXTRAFIELD_TYPE_NTFS);\n\t\t\tsetUint16(extraFieldNTFSView, 2, 32);\n\t\t\tsetUint16(extraFieldNTFSView, 8, EXTRAFIELD_TYPE_NTFS_TAG1);\n\t\t\tsetUint16(extraFieldNTFSView, 10, 24);\n\t\t\tsetBigUint64(extraFieldNTFSView, 12, lastModTimeNTFS);\n\t\t\tsetBigUint64(extraFieldNTFSView, 20, getTimeNTFS(lastAccessDate) || lastModTimeNTFS);\n\t\t\tsetBigUint64(extraFieldNTFSView, 28, getTimeNTFS(creationDate) || lastModTimeNTFS);\n\t\t} catch (_error) {\n\t\t\trawExtraFieldNTFS = new Uint8Array();\n\t\t}\n\t} else {\n\t\trawExtraFieldNTFS = rawExtraFieldExtendedTimestamp = new Uint8Array();\n\t}\n\tlet bitFlag = BITFLAG_LANG_ENCODING_FLAG;\n\tif (dataDescriptor) {\n\t\tbitFlag = bitFlag | BITFLAG_DATA_DESCRIPTOR;\n\t}\n\tlet compressionMethod = COMPRESSION_METHOD_STORE;\n\tif (compressed) {\n\t\tcompressionMethod = COMPRESSION_METHOD_DEFLATE;\n\t}\n\tif (zip64) {\n\t\tversion = version > VERSION_ZIP64 ? version : VERSION_ZIP64;\n\t}\n\tif (encrypted) {\n\t\tbitFlag = bitFlag | BITFLAG_ENCRYPTED;\n\t\tif (!zipCrypto) {\n\t\t\tversion = version > VERSION_AES ? version : VERSION_AES;\n\t\t\tcompressionMethod = COMPRESSION_METHOD_AES;\n\t\t\tif (compressed) {\n\t\t\t\trawExtraFieldAES[9] = COMPRESSION_METHOD_DEFLATE;\n\t\t\t}\n\t\t}\n\t}\n\tconst headerArray = new Uint8Array(26);\n\tconst headerView = getDataView(headerArray);\n\tsetUint16(headerView, 0, version);\n\tsetUint16(headerView, 2, bitFlag);\n\tsetUint16(headerView, 4, compressionMethod);\n\tconst dateArray = new Uint32Array(1);\n\tconst dateView = getDataView(dateArray);\n\tlet lastModDateMsDos;\n\tif (lastModDate < MIN_DATE) {\n\t\tlastModDateMsDos = MIN_DATE;\n\t} else if (lastModDate > MAX_DATE) {\n\t\tlastModDateMsDos = MAX_DATE;\n\t} else {\n\t\tlastModDateMsDos = lastModDate;\n\t}\n\tsetUint16(dateView, 0, (((lastModDateMsDos.getHours() << 6) | lastModDateMsDos.getMinutes()) << 5) | lastModDateMsDos.getSeconds() / 2);\n\tsetUint16(dateView, 2, ((((lastModDateMsDos.getFullYear() - 1980) << 4) | (lastModDateMsDos.getMonth() + 1)) << 5) | lastModDateMsDos.getDate());\n\tconst rawLastModDate = dateArray[0];\n\tsetUint32(headerView, 6, rawLastModDate);\n\tsetUint16(headerView, 22, getLength(rawFilename));\n\tconst extraFieldLength = getLength(rawExtraFieldAES, rawExtraFieldExtendedTimestamp, rawExtraFieldNTFS, rawExtraField);\n\tsetUint16(headerView, 24, extraFieldLength);\n\tconst localHeaderArray = new Uint8Array(30 + getLength(rawFilename) + extraFieldLength);\n\tconst localHeaderView = getDataView(localHeaderArray);\n\tsetUint32(localHeaderView, 0, LOCAL_FILE_HEADER_SIGNATURE);\n\tarraySet(localHeaderArray, headerArray, 4);\n\tarraySet(localHeaderArray, rawFilename, 30);\n\tarraySet(localHeaderArray, rawExtraFieldAES, 30 + getLength(rawFilename));\n\tarraySet(localHeaderArray, rawExtraFieldExtendedTimestamp, 30 + getLength(rawFilename, rawExtraFieldAES));\n\tarraySet(localHeaderArray, rawExtraFieldNTFS, 30 + getLength(rawFilename, rawExtraFieldAES, rawExtraFieldExtendedTimestamp));\n\tarraySet(localHeaderArray, rawExtraField, 30 + getLength(rawFilename, rawExtraFieldAES, rawExtraFieldExtendedTimestamp, rawExtraFieldNTFS));\n\treturn {\n\t\tlocalHeaderArray,\n\t\theaderArray,\n\t\theaderView,\n\t\tlastModDate,\n\t\trawLastModDate,\n\t\tencrypted,\n\t\tcompressed,\n\t\tversion,\n\t\tcompressionMethod,\n\t\textraFieldExtendedTimestampFlag,\n\t\trawExtraFieldExtendedTimestamp,\n\t\trawExtraFieldNTFS,\n\t\trawExtraFieldAES,\n\t\textraFieldLength\n\t};\n}\n\nfunction appendExtraFieldUSDZ(entryInfo, zipWriterOffset) {\n\tconst { headerInfo } = entryInfo;\n\tlet { localHeaderArray, extraFieldLength } = headerInfo;\n\tlet localHeaderArrayView = getDataView(localHeaderArray);\n\tlet extraBytesLength = 64 - ((zipWriterOffset + getLength(localHeaderArray)) % 64);\n\tif (extraBytesLength < 4) {\n\t\textraBytesLength += 64;\n\t}\n\tconst rawExtraFieldUSDZ = new Uint8Array(extraBytesLength);\n\tconst extraFieldUSDZView = getDataView(rawExtraFieldUSDZ);\n\tsetUint16(extraFieldUSDZView, 0, EXTRAFIELD_TYPE_USDZ);\n\tsetUint16(extraFieldUSDZView, 2, extraBytesLength - 2);\n\tconst previousLocalHeaderArray = localHeaderArray;\n\theaderInfo.localHeaderArray = localHeaderArray = new Uint8Array(getLength(previousLocalHeaderArray) + extraBytesLength);\n\tarraySet(localHeaderArray, previousLocalHeaderArray);\n\tarraySet(localHeaderArray, rawExtraFieldUSDZ, getLength(previousLocalHeaderArray));\n\tlocalHeaderArrayView = getDataView(localHeaderArray);\n\tsetUint16(localHeaderArrayView, 28, extraFieldLength + extraBytesLength);\n\tentryInfo.metadataSize += extraBytesLength;\n}\n\nfunction getDataDescriptorInfo(options) {\n\tconst {\n\t\tzip64,\n\t\tdataDescriptor,\n\t\tdataDescriptorSignature\n\t} = options;\n\tlet dataDescriptorArray = new Uint8Array();\n\tlet dataDescriptorView, dataDescriptorOffset = 0;\n\tif (dataDescriptor) {\n\t\tdataDescriptorArray = new Uint8Array(zip64 ? (dataDescriptorSignature ? 24 : 20) : (dataDescriptorSignature ? 16 : 12));\n\t\tdataDescriptorView = getDataView(dataDescriptorArray);\n\t\tif (dataDescriptorSignature) {\n\t\t\tdataDescriptorOffset = 4;\n\t\t\tsetUint32(dataDescriptorView, 0, DATA_DESCRIPTOR_RECORD_SIGNATURE);\n\t\t}\n\t}\n\treturn {\n\t\tdataDescriptorArray,\n\t\tdataDescriptorView,\n\t\tdataDescriptorOffset\n\t};\n}\n\nfunction setEntryInfo(entryInfo, options) {\n\tconst {\n\t\tsignature,\n\t\trawExtraFieldZip64,\n\t\tcompressedSize,\n\t\tuncompressedSize,\n\t\theaderInfo,\n\t\tdataDescriptorInfo\n\t} = entryInfo;\n\tconst {\n\t\theaderView,\n\t\tencrypted\n\t} = headerInfo;\n\tconst {\n\t\tdataDescriptorView,\n\t\tdataDescriptorOffset\n\t} = dataDescriptorInfo;\n\tconst {\n\t\tzip64,\n\t\tzip64UncompressedSize,\n\t\tzip64CompressedSize,\n\t\tzipCrypto,\n\t\tdataDescriptor\n\t} = options;\n\tif ((!encrypted || zipCrypto) && signature !== UNDEFINED_VALUE) {\n\t\tsetUint32(headerView, 10, signature);\n\t\tif (dataDescriptor) {\n\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset, signature);\n\t\t}\n\t}\n\tif (zip64) {\n\t\tconst rawExtraFieldZip64View = getDataView(rawExtraFieldZip64);\n\t\tsetUint16(rawExtraFieldZip64View, 0, EXTRAFIELD_TYPE_ZIP64);\n\t\tsetUint16(rawExtraFieldZip64View, 2, getLength(rawExtraFieldZip64) - 4);\n\t\tlet rawExtraFieldZip64Offset = 4;\n\t\tif (zip64UncompressedSize) {\n\t\t\tsetUint32(headerView, 18, MAX_32_BITS);\n\t\t\tsetBigUint64(rawExtraFieldZip64View, rawExtraFieldZip64Offset, BigInt(uncompressedSize));\n\t\t\trawExtraFieldZip64Offset += 8;\n\t\t}\n\t\tif (zip64CompressedSize) {\n\t\t\tsetUint32(headerView, 14, MAX_32_BITS);\n\t\t\tsetBigUint64(rawExtraFieldZip64View, rawExtraFieldZip64Offset, BigInt(compressedSize));\n\t\t}\n\t\tif (dataDescriptor) {\n\t\t\tsetBigUint64(dataDescriptorView, dataDescriptorOffset + 4, BigInt(compressedSize));\n\t\t\tsetBigUint64(dataDescriptorView, dataDescriptorOffset + 12, BigInt(uncompressedSize));\n\t\t}\n\t} else {\n\t\tsetUint32(headerView, 14, compressedSize);\n\t\tsetUint32(headerView, 18, uncompressedSize);\n\t\tif (dataDescriptor) {\n\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset + 4, compressedSize);\n\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset + 8, uncompressedSize);\n\t\t}\n\t}\n}\n\nasync function writeExtraHeaderInfo(fileEntry, entryData, writable, { zipCrypto }) {\n\tlet arrayBuffer;\n\tarrayBuffer = await entryData.slice(0, 26).arrayBuffer();\n\tif (arrayBuffer.byteLength != 26) {\n\t\tarrayBuffer = arrayBuffer.slice(0, 26);\n\t}\n\tconst arrayBufferView = new DataView(arrayBuffer);\n\tif (!fileEntry.encrypted || zipCrypto) {\n\t\tsetUint32(arrayBufferView, 14, fileEntry.signature);\n\t}\n\tif (fileEntry.zip64) {\n\t\tsetUint32(arrayBufferView, 18, MAX_32_BITS);\n\t\tsetUint32(arrayBufferView, 22, MAX_32_BITS);\n\t} else {\n\t\tsetUint32(arrayBufferView, 18, fileEntry.compressedSize);\n\t\tsetUint32(arrayBufferView, 22, fileEntry.uncompressedSize);\n\t}\n\tawait writeData(writable, new Uint8Array(arrayBuffer));\n\treturn entryData.slice(arrayBuffer.byteLength);\n}\n\nfunction setZip64ExtraInfo(fileEntry, options) {\n\tconst { rawExtraFieldZip64, offset, diskNumberStart } = fileEntry;\n\tconst { zip64UncompressedSize, zip64CompressedSize, zip64Offset, zip64DiskNumberStart } = options;\n\tconst rawExtraFieldZip64View = getDataView(rawExtraFieldZip64);\n\tlet rawExtraFieldZip64Offset = 4;\n\tif (zip64UncompressedSize) {\n\t\trawExtraFieldZip64Offset += 8;\n\t}\n\tif (zip64CompressedSize) {\n\t\trawExtraFieldZip64Offset += 8;\n\t}\n\tif (zip64Offset) {\n\t\tsetBigUint64(rawExtraFieldZip64View, rawExtraFieldZip64Offset, BigInt(offset));\n\t\trawExtraFieldZip64Offset += 8;\n\t}\n\tif (zip64DiskNumberStart) {\n\t\tsetUint32(rawExtraFieldZip64View, rawExtraFieldZip64Offset, diskNumberStart);\n\t}\n}\n\nasync function closeFile(zipWriter, comment, options) {\n\tconst { files, writer } = zipWriter;\n\tconst { diskOffset, writable } = writer;\n\tlet { diskNumber } = writer;\n\tlet offset = 0;\n\tlet directoryDataLength = 0;\n\tlet directoryOffset = zipWriter.offset - diskOffset;\n\tlet filesLength = files.size;\n\tfor (const [, fileEntry] of files) {\n\t\tconst {\n\t\t\trawFilename,\n\t\t\trawExtraFieldZip64,\n\t\t\trawExtraFieldAES,\n\t\t\trawComment,\n\t\t\trawExtraFieldNTFS,\n\t\t\trawExtraField,\n\t\t\textendedTimestamp,\n\t\t\textraFieldExtendedTimestampFlag,\n\t\t\tlastModDate\n\t\t} = fileEntry;\n\t\tlet rawExtraFieldTimestamp;\n\t\tif (extendedTimestamp) {\n\t\t\trawExtraFieldTimestamp = new Uint8Array(9);\n\t\t\tconst extraFieldExtendedTimestampView = getDataView(rawExtraFieldTimestamp);\n\t\t\tsetUint16(extraFieldExtendedTimestampView, 0, EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\t\t\tsetUint16(extraFieldExtendedTimestampView, 2, 5);\n\t\t\tsetUint8(extraFieldExtendedTimestampView, 4, extraFieldExtendedTimestampFlag);\n\t\t\tsetUint32(extraFieldExtendedTimestampView, 5, Math.floor(lastModDate.getTime() / 1000));\n\t\t} else {\n\t\t\trawExtraFieldTimestamp = new Uint8Array();\n\t\t}\n\t\tfileEntry.rawExtraFieldCDExtendedTimestamp = rawExtraFieldTimestamp;\n\t\tdirectoryDataLength += 46 +\n\t\t\tgetLength(\n\t\t\t\trawFilename,\n\t\t\t\trawComment,\n\t\t\t\trawExtraFieldZip64,\n\t\t\t\trawExtraFieldAES,\n\t\t\t\trawExtraFieldNTFS,\n\t\t\t\trawExtraFieldTimestamp,\n\t\t\t\trawExtraField);\n\t}\n\tconst directoryArray = new Uint8Array(directoryDataLength);\n\tconst directoryView = getDataView(directoryArray);\n\tawait initStream(writer);\n\tlet directoryDiskOffset = 0;\n\tfor (const [indexFileEntry, fileEntry] of Array.from(files.values()).entries()) {\n\t\tconst {\n\t\t\toffset: fileEntryOffset,\n\t\t\trawFilename,\n\t\t\trawExtraFieldZip64,\n\t\t\trawExtraFieldAES,\n\t\t\trawExtraFieldCDExtendedTimestamp,\n\t\t\trawExtraFieldNTFS,\n\t\t\trawExtraField,\n\t\t\trawComment,\n\t\t\tversionMadeBy,\n\t\t\theaderArray,\n\t\t\tdirectory,\n\t\t\tzip64,\n\t\t\tzip64UncompressedSize,\n\t\t\tzip64CompressedSize,\n\t\t\tzip64DiskNumberStart,\n\t\t\tzip64Offset,\n\t\t\tmsDosCompatible,\n\t\t\tinternalFileAttribute,\n\t\t\texternalFileAttribute,\n\t\t\tdiskNumberStart,\n\t\t\tuncompressedSize,\n\t\t\tcompressedSize\n\t\t} = fileEntry;\n\t\tconst extraFieldLength = getLength(rawExtraFieldZip64, rawExtraFieldAES, rawExtraFieldCDExtendedTimestamp, rawExtraFieldNTFS, rawExtraField);\n\t\tsetUint32(directoryView, offset, CENTRAL_FILE_HEADER_SIGNATURE);\n\t\tsetUint16(directoryView, offset + 4, versionMadeBy);\n\t\tconst headerView = getDataView(headerArray);\n\t\tif (!zip64UncompressedSize) {\n\t\t\tsetUint32(headerView, 18, uncompressedSize);\n\t\t}\n\t\tif (!zip64CompressedSize) {\n\t\t\tsetUint32(headerView, 14, compressedSize);\n\t\t}\n\t\tarraySet(directoryArray, headerArray, offset + 6);\n\t\tsetUint16(directoryView, offset + 30, extraFieldLength);\n\t\tsetUint16(directoryView, offset + 32, getLength(rawComment));\n\t\tsetUint16(directoryView, offset + 34, zip64 && zip64DiskNumberStart ? MAX_16_BITS : diskNumberStart);\n\t\tsetUint16(directoryView, offset + 36, internalFileAttribute);\n\t\tif (externalFileAttribute) {\n\t\t\tsetUint32(directoryView, offset + 38, externalFileAttribute);\n\t\t} else if (directory && msDosCompatible) {\n\t\t\tsetUint8(directoryView, offset + 38, FILE_ATTR_MSDOS_DIR_MASK);\n\t\t}\n\t\tsetUint32(directoryView, offset + 42, zip64 && zip64Offset ? MAX_32_BITS : fileEntryOffset);\n\t\tarraySet(directoryArray, rawFilename, offset + 46);\n\t\tarraySet(directoryArray, rawExtraFieldZip64, offset + 46 + getLength(rawFilename));\n\t\tarraySet(directoryArray, rawExtraFieldAES, offset + 46 + getLength(rawFilename, rawExtraFieldZip64));\n\t\tarraySet(directoryArray, rawExtraFieldCDExtendedTimestamp, offset + 46 + getLength(rawFilename, rawExtraFieldZip64, rawExtraFieldAES));\n\t\tarraySet(directoryArray, rawExtraFieldNTFS, offset + 46 + getLength(rawFilename, rawExtraFieldZip64, rawExtraFieldAES, rawExtraFieldCDExtendedTimestamp));\n\t\tarraySet(directoryArray, rawExtraField, offset + 46 + getLength(rawFilename, rawExtraFieldZip64, rawExtraFieldAES, rawExtraFieldCDExtendedTimestamp, rawExtraFieldNTFS));\n\t\tarraySet(directoryArray, rawComment, offset + 46 + getLength(rawFilename) + extraFieldLength);\n\t\tconst directoryEntryLength = 46 + getLength(rawFilename, rawComment) + extraFieldLength;\n\t\tif (offset - directoryDiskOffset > writer.availableSize) {\n\t\t\twriter.availableSize = 0;\n\t\t\tawait writeData(writable, directoryArray.slice(directoryDiskOffset, offset));\n\t\t\tdirectoryDiskOffset = offset;\n\t\t}\n\t\toffset += directoryEntryLength;\n\t\tif (options.onprogress) {\n\t\t\ttry {\n\t\t\t\tawait options.onprogress(indexFileEntry + 1, files.size, new Entry(fileEntry));\n\t\t\t} catch (_error) {\n\t\t\t\t// ignored\n\t\t\t}\n\t\t}\n\t}\n\tawait writeData(writable, directoryDiskOffset ? directoryArray.slice(directoryDiskOffset) : directoryArray);\n\tlet lastDiskNumber = writer.diskNumber;\n\tconst { availableSize } = writer;\n\tif (availableSize < END_OF_CENTRAL_DIR_LENGTH) {\n\t\tlastDiskNumber++;\n\t}\n\tlet zip64 = getOptionValue(zipWriter, options, \"zip64\");\n\tif (directoryOffset > MAX_32_BITS || directoryDataLength > MAX_32_BITS || filesLength > MAX_16_BITS || lastDiskNumber > MAX_16_BITS) {\n\t\tif (zip64 === false) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\n\t\t} else {\n\t\t\tzip64 = true;\n\t\t}\n\t}\n\tconst endOfdirectoryArray = new Uint8Array(zip64 ? ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH : END_OF_CENTRAL_DIR_LENGTH);\n\tconst endOfdirectoryView = getDataView(endOfdirectoryArray);\n\toffset = 0;\n\tif (zip64) {\n\t\tsetUint32(endOfdirectoryView, 0, ZIP64_END_OF_CENTRAL_DIR_SIGNATURE);\n\t\tsetBigUint64(endOfdirectoryView, 4, BigInt(44));\n\t\tsetUint16(endOfdirectoryView, 12, 45);\n\t\tsetUint16(endOfdirectoryView, 14, 45);\n\t\tsetUint32(endOfdirectoryView, 16, lastDiskNumber);\n\t\tsetUint32(endOfdirectoryView, 20, diskNumber);\n\t\tsetBigUint64(endOfdirectoryView, 24, BigInt(filesLength));\n\t\tsetBigUint64(endOfdirectoryView, 32, BigInt(filesLength));\n\t\tsetBigUint64(endOfdirectoryView, 40, BigInt(directoryDataLength));\n\t\tsetBigUint64(endOfdirectoryView, 48, BigInt(directoryOffset));\n\t\tsetUint32(endOfdirectoryView, 56, ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE);\n\t\tsetBigUint64(endOfdirectoryView, 64, BigInt(directoryOffset) + BigInt(directoryDataLength));\n\t\tsetUint32(endOfdirectoryView, 72, lastDiskNumber + 1);\n\t\tconst supportZip64SplitFile = getOptionValue(zipWriter, options, \"supportZip64SplitFile\", true);\n\t\tif (supportZip64SplitFile) {\n\t\t\tlastDiskNumber = MAX_16_BITS;\n\t\t\tdiskNumber = MAX_16_BITS;\n\t\t}\n\t\tfilesLength = MAX_16_BITS;\n\t\tdirectoryOffset = MAX_32_BITS;\n\t\tdirectoryDataLength = MAX_32_BITS;\n\t\toffset += ZIP64_END_OF_CENTRAL_DIR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH;\n\t}\n\tsetUint32(endOfdirectoryView, offset, END_OF_CENTRAL_DIR_SIGNATURE);\n\tsetUint16(endOfdirectoryView, offset + 4, lastDiskNumber);\n\tsetUint16(endOfdirectoryView, offset + 6, diskNumber);\n\tsetUint16(endOfdirectoryView, offset + 8, filesLength);\n\tsetUint16(endOfdirectoryView, offset + 10, filesLength);\n\tsetUint32(endOfdirectoryView, offset + 12, directoryDataLength);\n\tsetUint32(endOfdirectoryView, offset + 16, directoryOffset);\n\tconst commentLength = getLength(comment);\n\tif (commentLength) {\n\t\tif (commentLength <= MAX_16_BITS) {\n\t\t\tsetUint16(endOfdirectoryView, offset + 20, commentLength);\n\t\t} else {\n\t\t\tthrow new Error(ERR_INVALID_COMMENT);\n\t\t}\n\t}\n\tawait writeData(writable, endOfdirectoryArray);\n\tif (commentLength) {\n\t\tawait writeData(writable, comment);\n\t}\n}\n\nasync function writeData(writable, array) {\n\tconst streamWriter = writable.getWriter();\n\ttry {\n\t\tawait streamWriter.ready;\n\t\twritable.size += getLength(array);\n\t\tawait streamWriter.write(array);\n\t} finally {\n\t\tstreamWriter.releaseLock();\n\t}\n}\n\nfunction getTimeNTFS(date) {\n\tif (date) {\n\t\treturn ((BigInt(date.getTime()) + BigInt(11644473600000)) * BigInt(10000));\n\t}\n}\n\nfunction getOptionValue(zipWriter, options, name, defaultValue) {\n\tconst result = options[name] === UNDEFINED_VALUE ? zipWriter.options[name] : options[name];\n\treturn result === UNDEFINED_VALUE ? defaultValue : result;\n}\n\nfunction getMaximumCompressedSize(uncompressedSize) {\n\treturn uncompressedSize + (5 * (Math.floor(uncompressedSize / 16383) + 1));\n}\n\nfunction setUint8(view, offset, value) {\n\tview.setUint8(offset, value);\n}\n\nfunction setUint16(view, offset, value) {\n\tview.setUint16(offset, value, true);\n}\n\nfunction setUint32(view, offset, value) {\n\tview.setUint32(offset, value, true);\n}\n\nfunction setBigUint64(view, offset, value) {\n\tview.setBigUint64(offset, value, true);\n}\n\nfunction arraySet(array, typedArray, offset) {\n\tarray.set(typedArray, offset);\n}\n\nfunction getDataView(array) {\n\treturn new DataView(array.buffer);\n}\n\nfunction getLength(...arrayLikes) {\n\tlet result = 0;\n\tarrayLikes.forEach(arrayLike => arrayLike && (result += arrayLike.length));\n\treturn result;\n}\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { Deflate } from \"./core/streams/codecs/deflate.js\";\nimport { Inflate } from \"./core/streams/codecs/inflate.js\";\nimport { configure } from \"./core/configuration.js\";\nimport { getMimeType } from \"./core/util/default-mime-type.js\";\nimport { terminateWorkers } from \"./core/codec-pool.js\";\n\nconfigure({ Deflate, Inflate });\n\nexport * from \"./core/io.js\";\nexport * from \"./core/zip-reader.js\";\nexport * from \"./core/zip-writer.js\";\nexport {\n\tconfigure,\n\tgetMimeType,\n\tterminateWorkers\n};","import buildModuleUrl from \"../Core/buildModuleUrl.js\";\nimport Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartographic from \"../Core/Cartographic.js\";\nimport Color from \"../Core/Color.js\";\nimport createGuid from \"../Core/createGuid.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport Iso8601 from \"../Core/Iso8601.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport ReferenceFrame from \"../Core/ReferenceFrame.js\";\nimport Resource from \"../Core/Resource.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport TimeInterval from \"../Core/TimeInterval.js\";\nimport TimeIntervalCollection from \"../Core/TimeIntervalCollection.js\";\nimport HeightReference from \"../Scene/HeightReference.js\";\nimport HorizontalOrigin from \"../Scene/HorizontalOrigin.js\";\nimport VerticalOrigin from \"../Scene/VerticalOrigin.js\";\nimport * as zip from \"@zip.js/zip.js/lib/zip-no-worker.js\";\nimport BillboardGraphics from \"./BillboardGraphics.js\";\nimport CompositePositionProperty from \"./CompositePositionProperty.js\";\nimport ModelGraphics from \"./ModelGraphics.js\";\nimport RectangleGraphics from \"./RectangleGraphics.js\";\nimport SampledPositionProperty from \"./SampledPositionProperty.js\";\nimport SampledProperty from \"./SampledProperty.js\";\nimport ScaledPositionProperty from \"./ScaledPositionProperty.js\";\n\nconst BILLBOARD_SIZE = 32;\nconst kmlNamespace = \"http://www.opengis.net/kml/2.2\";\nconst gxNamespace = \"http://www.google.com/kml/ext/2.2\";\nconst xmlnsNamespace = \"http://www.w3.org/2000/xmlns/\";\n\n//\n// Handles files external to the KML (eg. textures and models)\n//\nfunction ExternalFileHandler(modelCallback) {\n  this._files = {};\n  this._promises = [];\n  this._count = 0;\n  this._modelCallback = modelCallback;\n}\n\nconst imageTypeRegex = /^data:image\\/([^,;]+)/;\nExternalFileHandler.prototype.texture = function (texture) {\n  const that = this;\n  let filename;\n\n  if (typeof texture === \"string\" || texture instanceof Resource) {\n    texture = Resource.createIfNeeded(texture);\n    if (!texture.isDataUri) {\n      return texture.url;\n    }\n\n    // If its a data URI try and get the correct extension and then fetch the blob\n    const regexResult = texture.url.match(imageTypeRegex);\n    filename = `texture_${++this._count}`;\n    if (defined(regexResult)) {\n      filename += `.${regexResult[1]}`;\n    }\n\n    const promise = texture.fetchBlob().then(function (blob) {\n      that._files[filename] = blob;\n    });\n\n    this._promises.push(promise);\n\n    return filename;\n  }\n\n  if (texture instanceof HTMLCanvasElement) {\n    filename = `texture_${++this._count}.png`;\n    const promise = new Promise((resolve) => {\n      texture.toBlob(function (blob) {\n        that._files[filename] = blob;\n        resolve();\n      });\n    });\n    this._promises.push(promise);\n\n    return filename;\n  }\n\n  return \"\";\n};\n\nfunction getModelBlobHander(that, filename) {\n  return function (blob) {\n    that._files[filename] = blob;\n  };\n}\n\nExternalFileHandler.prototype.model = function (model, time) {\n  const modelCallback = this._modelCallback;\n  if (!defined(modelCallback)) {\n    throw new RuntimeError(\n      \"Encountered a model entity while exporting to KML, but no model callback was supplied.\"\n    );\n  }\n\n  const externalFiles = {};\n  const url = modelCallback(model, time, externalFiles);\n\n  // Iterate through external files and add them to our list once the promise resolves\n  for (const filename in externalFiles) {\n    if (externalFiles.hasOwnProperty(filename)) {\n      const promise = Promise.resolve(externalFiles[filename]);\n      this._promises.push(promise);\n\n      promise.then(getModelBlobHander(this, filename));\n    }\n  }\n\n  return url;\n};\n\nObject.defineProperties(ExternalFileHandler.prototype, {\n  promise: {\n    get: function () {\n      return Promise.all(this._promises);\n    },\n  },\n  files: {\n    get: function () {\n      return this._files;\n    },\n  },\n});\n\n//\n// Handles getting values from properties taking the desired time and default values into account\n//\nfunction ValueGetter(time) {\n  this._time = time;\n}\n\nValueGetter.prototype.get = function (property, defaultVal, result) {\n  let value;\n  if (defined(property)) {\n    value = defined(property.getValue)\n      ? property.getValue(this._time, result)\n      : property;\n  }\n\n  return defaultValue(value, defaultVal);\n};\n\nValueGetter.prototype.getColor = function (property, defaultVal) {\n  const result = this.get(property, defaultVal);\n  if (defined(result)) {\n    return colorToString(result);\n  }\n};\n\nValueGetter.prototype.getMaterialType = function (property) {\n  if (!defined(property)) {\n    return;\n  }\n\n  return property.getType(this._time);\n};\n\n//\n// Caches styles so we don't generate a ton of duplicate styles\n//\nfunction StyleCache() {\n  this._ids = {};\n  this._styles = {};\n  this._count = 0;\n}\n\nStyleCache.prototype.get = function (element) {\n  const ids = this._ids;\n  const key = element.innerHTML;\n  if (defined(ids[key])) {\n    return ids[key];\n  }\n\n  let styleId = `style-${++this._count}`;\n  element.setAttribute(\"id\", styleId);\n\n  // Store with #\n  styleId = `#${styleId}`;\n  ids[key] = styleId;\n  this._styles[key] = element;\n\n  return styleId;\n};\n\nStyleCache.prototype.save = function (parentElement) {\n  const styles = this._styles;\n\n  const firstElement = parentElement.childNodes[0];\n  for (const key in styles) {\n    if (styles.hasOwnProperty(key)) {\n      parentElement.insertBefore(styles[key], firstElement);\n    }\n  }\n};\n\n//\n// Manages the generation of IDs because an entity may have geometry and a Folder for children\n//\nfunction IdManager() {\n  this._ids = {};\n}\n\nIdManager.prototype.get = function (id) {\n  if (!defined(id)) {\n    return this.get(createGuid());\n  }\n\n  const ids = this._ids;\n  if (!defined(ids[id])) {\n    ids[id] = 0;\n    return id;\n  }\n\n  return `${id.toString()}-${++ids[id]}`;\n};\n\n/**\n * @typedef exportKmlResultKml\n * @type {object}\n * @property {string} kml The generated KML.\n * @property {Object<string, Blob>} externalFiles An object dictionary of external files\n */\n\n/**\n * @typedef exportKmlResultKmz\n * @type {object}\n * @property {Blob} kmz The generated kmz file.\n */\n\n/**\n * Exports an EntityCollection as a KML document. Only Point, Billboard, Model, Path, Polygon, Polyline geometries\n * will be exported. Note that there is not a 1 to 1 mapping of Entity properties to KML Feature properties. For\n * example, entity properties that are time dynamic but cannot be dynamic in KML are exported with their values at\n * options.time or the beginning of the EntityCollection's time interval if not specified. For time-dynamic properties\n * that are supported in KML, we use the samples if it is a {@link SampledProperty} otherwise we sample the value using\n * the options.sampleDuration. Point, Billboard, Model and Path geometries with time-dynamic positions will be exported\n * as gx:Track Features. Not all Materials are representable in KML, so for more advanced Materials just the primary\n * color is used. Canvas objects are exported as PNG images.\n *\n * @function exportKml\n *\n * @param {object} options An object with the following properties:\n * @param {EntityCollection} options.entities The EntityCollection to export as KML.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.default] The ellipsoid for the output file.\n * @param {exportKmlModelCallback} [options.modelCallback] A callback that will be called with a {@link ModelGraphics} instance and should return the URI to use in the KML. Required if a model exists in the entity collection.\n * @param {JulianDate} [options.time=entities.computeAvailability().start] The time value to use to get properties that are not time varying in KML.\n * @param {TimeInterval} [options.defaultAvailability=entities.computeAvailability()] The interval that will be sampled if an entity doesn't have an availability.\n * @param {number} [options.sampleDuration=60] The number of seconds to sample properties that are varying in KML.\n * @param {boolean} [options.kmz=false] If true KML and external files will be compressed into a kmz file.\n *\n * @returns {Promise<exportKmlResultKml|exportKmlResultKmz>} A promise that resolved to an object containing the KML string and a dictionary of external file blobs, or a kmz file as a blob if options.kmz is true.\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Export%20KML.html|Cesium Sandcastle KML Export Demo}\n * @example\n * Cesium.exportKml({\n *      entities: entityCollection\n *  })\n *   .then(function(result) {\n *     // The XML string is in result.kml\n *\n *     const externalFiles = result.externalFiles\n *     for(const file in externalFiles) {\n *       // file is the name of the file used in the KML document as the href\n *       // externalFiles[file] is a blob with the contents of the file\n *     }\n *   });\n *\n */\nfunction exportKml(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const entities = options.entities;\n  const kmz = defaultValue(options.kmz, false);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(entities)) {\n    throw new DeveloperError(\"entities is required.\");\n  }\n  //>>includeEnd('debug');\n\n  // Get the state that is passed around during the recursion\n  // This is separated out for testing.\n  const state = exportKml._createState(options);\n\n  // Filter EntityCollection so we only have top level entities\n  const rootEntities = entities.values.filter(function (entity) {\n    return !defined(entity.parent);\n  });\n\n  // Add the <Document>\n  const kmlDoc = state.kmlDoc;\n  const kmlElement = kmlDoc.documentElement;\n  kmlElement.setAttributeNS(xmlnsNamespace, \"xmlns:gx\", gxNamespace);\n  const kmlDocumentElement = kmlDoc.createElement(\"Document\");\n  kmlElement.appendChild(kmlDocumentElement);\n\n  // Create the KML Hierarchy\n  recurseEntities(state, kmlDocumentElement, rootEntities);\n\n  // Write out the <Style> elements\n  state.styleCache.save(kmlDocumentElement);\n\n  // Once all the blobs have resolved return the KML string along with the blob collection\n  const externalFileHandler = state.externalFileHandler;\n  return externalFileHandler.promise.then(function () {\n    const serializer = new XMLSerializer();\n    const kmlString = serializer.serializeToString(state.kmlDoc);\n    if (kmz) {\n      return createKmz(kmlString, externalFileHandler.files);\n    }\n\n    return {\n      kml: kmlString,\n      externalFiles: externalFileHandler.files,\n    };\n  });\n}\n\nfunction createKmz(kmlString, externalFiles) {\n  const zWorkerUrl = buildModuleUrl(\"ThirdParty/Workers/z-worker-pako.js\");\n  zip.configure({\n    workerScripts: {\n      deflate: [zWorkerUrl, \"./pako_deflate.min.js\"],\n      inflate: [zWorkerUrl, \"./pako_inflate.min.js\"],\n    },\n  });\n  const blobWriter = new zip.BlobWriter();\n  const writer = new zip.ZipWriter(blobWriter);\n  // We need to only write one file at a time so the zip doesn't get corrupted\n  return writer\n    .add(\"doc.kml\", new zip.TextReader(kmlString))\n    .then(function () {\n      const keys = Object.keys(externalFiles);\n      return addExternalFilesToZip(writer, keys, externalFiles, 0);\n    })\n    .then(function () {\n      return writer.close();\n    })\n    .then(function (blob) {\n      return {\n        kmz: blob,\n      };\n    });\n}\n\nfunction addExternalFilesToZip(writer, keys, externalFiles, index) {\n  if (keys.length === index) {\n    return;\n  }\n  const filename = keys[index];\n  return writer\n    .add(filename, new zip.BlobReader(externalFiles[filename]))\n    .then(function () {\n      return addExternalFilesToZip(writer, keys, externalFiles, index + 1);\n    });\n}\n\nexportKml._createState = function (options) {\n  const entities = options.entities;\n\n  const styleCache = new StyleCache();\n\n  // Use the start time as the default because just in case they define\n  //  properties with an interval even if they don't change.\n  const entityAvailability = entities.computeAvailability();\n  const time = defined(options.time) ? options.time : entityAvailability.start;\n\n  // Figure out how we will sample dynamic position properties\n  let defaultAvailability = defaultValue(\n    options.defaultAvailability,\n    entityAvailability\n  );\n  const sampleDuration = defaultValue(options.sampleDuration, 60);\n\n  // Make sure we don't have infinite availability if we need to sample\n  if (defaultAvailability.start === Iso8601.MINIMUM_VALUE) {\n    if (defaultAvailability.stop === Iso8601.MAXIMUM_VALUE) {\n      // Infinite, so just use the default\n      defaultAvailability = new TimeInterval();\n    } else {\n      // No start time, so just sample 10 times before the stop\n      JulianDate.addSeconds(\n        defaultAvailability.stop,\n        -10 * sampleDuration,\n        defaultAvailability.start\n      );\n    }\n  } else if (defaultAvailability.stop === Iso8601.MAXIMUM_VALUE) {\n    // No stop time, so just sample 10 times after the start\n    JulianDate.addSeconds(\n      defaultAvailability.start,\n      10 * sampleDuration,\n      defaultAvailability.stop\n    );\n  }\n\n  const externalFileHandler = new ExternalFileHandler(options.modelCallback);\n\n  const kmlDoc = document.implementation.createDocument(kmlNamespace, \"kml\");\n  return {\n    kmlDoc: kmlDoc,\n    ellipsoid: defaultValue(options.ellipsoid, Ellipsoid.default),\n    idManager: new IdManager(),\n    styleCache: styleCache,\n    externalFileHandler: externalFileHandler,\n    time: time,\n    valueGetter: new ValueGetter(time),\n    sampleDuration: sampleDuration,\n    // Wrap it in a TimeIntervalCollection because that is what entity.availability is\n    defaultAvailability: new TimeIntervalCollection([defaultAvailability]),\n  };\n};\n\nfunction recurseEntities(state, parentNode, entities) {\n  const kmlDoc = state.kmlDoc;\n  const styleCache = state.styleCache;\n  const valueGetter = state.valueGetter;\n  const idManager = state.idManager;\n\n  const count = entities.length;\n  let overlays;\n  let geometries;\n  let styles;\n  for (let i = 0; i < count; ++i) {\n    const entity = entities[i];\n    overlays = [];\n    geometries = [];\n    styles = [];\n\n    createPoint(state, entity, geometries, styles);\n    createLineString(state, entity.polyline, geometries, styles);\n    createPolygon(state, entity.rectangle, geometries, styles, overlays);\n    createPolygon(state, entity.polygon, geometries, styles, overlays);\n    createModel(state, entity, entity.model, geometries, styles);\n\n    let timeSpan;\n    const availability = entity.availability;\n    if (defined(availability)) {\n      timeSpan = kmlDoc.createElement(\"TimeSpan\");\n\n      if (!JulianDate.equals(availability.start, Iso8601.MINIMUM_VALUE)) {\n        timeSpan.appendChild(\n          createBasicElementWithText(\n            kmlDoc,\n            \"begin\",\n            JulianDate.toIso8601(availability.start)\n          )\n        );\n      }\n\n      if (!JulianDate.equals(availability.stop, Iso8601.MAXIMUM_VALUE)) {\n        timeSpan.appendChild(\n          createBasicElementWithText(\n            kmlDoc,\n            \"end\",\n            JulianDate.toIso8601(availability.stop)\n          )\n        );\n      }\n    }\n\n    for (let overlayIndex = 0; overlayIndex < overlays.length; ++overlayIndex) {\n      const overlay = overlays[overlayIndex];\n\n      overlay.setAttribute(\"id\", idManager.get(entity.id));\n      overlay.appendChild(\n        createBasicElementWithText(kmlDoc, \"name\", entity.name)\n      );\n      overlay.appendChild(\n        createBasicElementWithText(kmlDoc, \"visibility\", entity.show)\n      );\n      overlay.appendChild(\n        createBasicElementWithText(kmlDoc, \"description\", entity.description)\n      );\n\n      if (defined(timeSpan)) {\n        overlay.appendChild(timeSpan);\n      }\n\n      parentNode.appendChild(overlay);\n    }\n\n    const geometryCount = geometries.length;\n    if (geometryCount > 0) {\n      const placemark = kmlDoc.createElement(\"Placemark\");\n      placemark.setAttribute(\"id\", idManager.get(entity.id));\n\n      let name = entity.name;\n      const labelGraphics = entity.label;\n      if (defined(labelGraphics)) {\n        const labelStyle = kmlDoc.createElement(\"LabelStyle\");\n\n        // KML only shows the name as a label, so just change the name if we need to show a label\n        const text = valueGetter.get(labelGraphics.text);\n        name = defined(text) && text.length > 0 ? text : name;\n\n        const color = valueGetter.getColor(labelGraphics.fillColor);\n        if (defined(color)) {\n          labelStyle.appendChild(\n            createBasicElementWithText(kmlDoc, \"color\", color)\n          );\n          labelStyle.appendChild(\n            createBasicElementWithText(kmlDoc, \"colorMode\", \"normal\")\n          );\n        }\n\n        const scale = valueGetter.get(labelGraphics.scale);\n        if (defined(scale)) {\n          labelStyle.appendChild(\n            createBasicElementWithText(kmlDoc, \"scale\", scale)\n          );\n        }\n\n        styles.push(labelStyle);\n      }\n\n      placemark.appendChild(createBasicElementWithText(kmlDoc, \"name\", name));\n      placemark.appendChild(\n        createBasicElementWithText(kmlDoc, \"visibility\", entity.show)\n      );\n      placemark.appendChild(\n        createBasicElementWithText(kmlDoc, \"description\", entity.description)\n      );\n\n      if (defined(timeSpan)) {\n        placemark.appendChild(timeSpan);\n      }\n\n      parentNode.appendChild(placemark);\n\n      const styleCount = styles.length;\n      if (styleCount > 0) {\n        const style = kmlDoc.createElement(\"Style\");\n        for (let styleIndex = 0; styleIndex < styleCount; ++styleIndex) {\n          style.appendChild(styles[styleIndex]);\n        }\n\n        placemark.appendChild(\n          createBasicElementWithText(kmlDoc, \"styleUrl\", styleCache.get(style))\n        );\n      }\n\n      if (geometries.length === 1) {\n        placemark.appendChild(geometries[0]);\n      } else if (geometries.length > 1) {\n        const multigeometry = kmlDoc.createElement(\"MultiGeometry\");\n        for (\n          let geometryIndex = 0;\n          geometryIndex < geometryCount;\n          ++geometryIndex\n        ) {\n          multigeometry.appendChild(geometries[geometryIndex]);\n        }\n        placemark.appendChild(multigeometry);\n      }\n    }\n\n    const children = entity._children;\n    if (children.length > 0) {\n      const folderNode = kmlDoc.createElement(\"Folder\");\n      folderNode.setAttribute(\"id\", idManager.get(entity.id));\n      folderNode.appendChild(\n        createBasicElementWithText(kmlDoc, \"name\", entity.name)\n      );\n      folderNode.appendChild(\n        createBasicElementWithText(kmlDoc, \"visibility\", entity.show)\n      );\n      folderNode.appendChild(\n        createBasicElementWithText(kmlDoc, \"description\", entity.description)\n      );\n\n      parentNode.appendChild(folderNode);\n\n      recurseEntities(state, folderNode, children);\n    }\n  }\n}\n\nconst scratchCartesian3 = new Cartesian3();\nconst scratchCartographic = new Cartographic();\nconst scratchJulianDate = new JulianDate();\n\nfunction createPoint(state, entity, geometries, styles) {\n  const kmlDoc = state.kmlDoc;\n  const ellipsoid = state.ellipsoid;\n  const valueGetter = state.valueGetter;\n\n  const pointGraphics = defaultValue(entity.billboard, entity.point);\n  if (!defined(pointGraphics) && !defined(entity.path)) {\n    return;\n  }\n\n  // If the point isn't constant then create gx:Track or gx:MultiTrack\n  const entityPositionProperty = entity.position;\n  if (!entityPositionProperty.isConstant) {\n    createTracks(state, entity, pointGraphics, geometries, styles);\n    return;\n  }\n\n  valueGetter.get(entityPositionProperty, undefined, scratchCartesian3);\n  const coordinates = createBasicElementWithText(\n    kmlDoc,\n    \"coordinates\",\n    getCoordinates(scratchCartesian3, ellipsoid)\n  );\n\n  const pointGeometry = kmlDoc.createElement(\"Point\");\n\n  // Set altitude mode\n  const altitudeMode = kmlDoc.createElement(\"altitudeMode\");\n  altitudeMode.appendChild(\n    getAltitudeMode(state, pointGraphics.heightReference)\n  );\n  pointGeometry.appendChild(altitudeMode);\n\n  pointGeometry.appendChild(coordinates);\n  geometries.push(pointGeometry);\n\n  // Create style\n  const iconStyle =\n    pointGraphics instanceof BillboardGraphics\n      ? createIconStyleFromBillboard(state, pointGraphics)\n      : createIconStyleFromPoint(state, pointGraphics);\n  styles.push(iconStyle);\n}\n\nfunction createTracks(state, entity, pointGraphics, geometries, styles) {\n  const kmlDoc = state.kmlDoc;\n  const ellipsoid = state.ellipsoid;\n  const valueGetter = state.valueGetter;\n\n  let intervals;\n  const entityPositionProperty = entity.position;\n  let useEntityPositionProperty = true;\n  if (entityPositionProperty instanceof CompositePositionProperty) {\n    intervals = entityPositionProperty.intervals;\n    useEntityPositionProperty = false;\n  } else {\n    intervals = defaultValue(entity.availability, state.defaultAvailability);\n  }\n\n  const isModel = pointGraphics instanceof ModelGraphics;\n\n  let i, j, times;\n  const tracks = [];\n  for (i = 0; i < intervals.length; ++i) {\n    const interval = intervals.get(i);\n    let positionProperty = useEntityPositionProperty\n      ? entityPositionProperty\n      : interval.data;\n\n    const trackAltitudeMode = kmlDoc.createElement(\"altitudeMode\");\n    // This is something that KML importing uses to handle clampToGround,\n    //  so just extract the internal property and set the altitudeMode.\n    if (positionProperty instanceof ScaledPositionProperty) {\n      positionProperty = positionProperty._value;\n      trackAltitudeMode.appendChild(\n        getAltitudeMode(state, HeightReference.CLAMP_TO_GROUND)\n      );\n    } else if (defined(pointGraphics)) {\n      trackAltitudeMode.appendChild(\n        getAltitudeMode(state, pointGraphics.heightReference)\n      );\n    } else {\n      // Path graphics only, which has no height reference\n      trackAltitudeMode.appendChild(\n        getAltitudeMode(state, HeightReference.NONE)\n      );\n    }\n\n    const positionTimes = [];\n    const positionValues = [];\n\n    if (positionProperty.isConstant) {\n      valueGetter.get(positionProperty, undefined, scratchCartesian3);\n      const constCoordinates = createBasicElementWithText(\n        kmlDoc,\n        \"coordinates\",\n        getCoordinates(scratchCartesian3, ellipsoid)\n      );\n\n      // This interval is constant so add a track with the same position\n      positionTimes.push(JulianDate.toIso8601(interval.start));\n      positionValues.push(constCoordinates);\n      positionTimes.push(JulianDate.toIso8601(interval.stop));\n      positionValues.push(constCoordinates);\n    } else if (positionProperty instanceof SampledPositionProperty) {\n      times = positionProperty._property._times;\n\n      for (j = 0; j < times.length; ++j) {\n        positionTimes.push(JulianDate.toIso8601(times[j]));\n        positionProperty.getValueInReferenceFrame(\n          times[j],\n          ReferenceFrame.FIXED,\n          scratchCartesian3\n        );\n        positionValues.push(getCoordinates(scratchCartesian3, ellipsoid));\n      }\n    } else if (positionProperty instanceof SampledProperty) {\n      times = positionProperty._times;\n      const values = positionProperty._values;\n\n      for (j = 0; j < times.length; ++j) {\n        positionTimes.push(JulianDate.toIso8601(times[j]));\n        Cartesian3.fromArray(values, j * 3, scratchCartesian3);\n        positionValues.push(getCoordinates(scratchCartesian3, ellipsoid));\n      }\n    } else {\n      const duration = state.sampleDuration;\n      interval.start.clone(scratchJulianDate);\n      if (!interval.isStartIncluded) {\n        JulianDate.addSeconds(scratchJulianDate, duration, scratchJulianDate);\n      }\n\n      const stopDate = interval.stop;\n      while (JulianDate.lessThan(scratchJulianDate, stopDate)) {\n        positionProperty.getValue(scratchJulianDate, scratchCartesian3);\n\n        positionTimes.push(JulianDate.toIso8601(scratchJulianDate));\n        positionValues.push(getCoordinates(scratchCartesian3, ellipsoid));\n\n        JulianDate.addSeconds(scratchJulianDate, duration, scratchJulianDate);\n      }\n\n      if (\n        interval.isStopIncluded &&\n        JulianDate.equals(scratchJulianDate, stopDate)\n      ) {\n        positionProperty.getValue(scratchJulianDate, scratchCartesian3);\n\n        positionTimes.push(JulianDate.toIso8601(scratchJulianDate));\n        positionValues.push(getCoordinates(scratchCartesian3, ellipsoid));\n      }\n    }\n\n    const trackGeometry = kmlDoc.createElementNS(gxNamespace, \"Track\");\n    trackGeometry.appendChild(trackAltitudeMode);\n\n    for (let k = 0; k < positionTimes.length; ++k) {\n      const when = createBasicElementWithText(kmlDoc, \"when\", positionTimes[k]);\n      const coord = createBasicElementWithText(\n        kmlDoc,\n        \"coord\",\n        positionValues[k],\n        gxNamespace\n      );\n\n      trackGeometry.appendChild(when);\n      trackGeometry.appendChild(coord);\n    }\n\n    if (isModel) {\n      trackGeometry.appendChild(createModelGeometry(state, pointGraphics));\n    }\n\n    tracks.push(trackGeometry);\n  }\n\n  // If one track, then use it otherwise combine into a multitrack\n  if (tracks.length === 1) {\n    geometries.push(tracks[0]);\n  } else if (tracks.length > 1) {\n    const multiTrackGeometry = kmlDoc.createElementNS(\n      gxNamespace,\n      \"MultiTrack\"\n    );\n\n    for (i = 0; i < tracks.length; ++i) {\n      multiTrackGeometry.appendChild(tracks[i]);\n    }\n\n    geometries.push(multiTrackGeometry);\n  }\n\n  // Create style\n  if (defined(pointGraphics) && !isModel) {\n    const iconStyle =\n      pointGraphics instanceof BillboardGraphics\n        ? createIconStyleFromBillboard(state, pointGraphics)\n        : createIconStyleFromPoint(state, pointGraphics);\n    styles.push(iconStyle);\n  }\n\n  // See if we have a line that needs to be drawn\n  const path = entity.path;\n  if (defined(path)) {\n    const width = valueGetter.get(path.width);\n    const material = path.material;\n    if (defined(material) || defined(width)) {\n      const lineStyle = kmlDoc.createElement(\"LineStyle\");\n      if (defined(width)) {\n        lineStyle.appendChild(\n          createBasicElementWithText(kmlDoc, \"width\", width)\n        );\n      }\n\n      processMaterial(state, material, lineStyle);\n      styles.push(lineStyle);\n    }\n  }\n}\n\nfunction createIconStyleFromPoint(state, pointGraphics) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n\n  const iconStyle = kmlDoc.createElement(\"IconStyle\");\n\n  const color = valueGetter.getColor(pointGraphics.color);\n  if (defined(color)) {\n    iconStyle.appendChild(createBasicElementWithText(kmlDoc, \"color\", color));\n    iconStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"colorMode\", \"normal\")\n    );\n  }\n\n  const pixelSize = valueGetter.get(pointGraphics.pixelSize);\n  if (defined(pixelSize)) {\n    iconStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"scale\", pixelSize / BILLBOARD_SIZE)\n    );\n  }\n\n  return iconStyle;\n}\n\nfunction createIconStyleFromBillboard(state, billboardGraphics) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n  const externalFileHandler = state.externalFileHandler;\n\n  const iconStyle = kmlDoc.createElement(\"IconStyle\");\n\n  let image = valueGetter.get(billboardGraphics.image);\n  if (defined(image)) {\n    image = externalFileHandler.texture(image);\n\n    const icon = kmlDoc.createElement(\"Icon\");\n    icon.appendChild(createBasicElementWithText(kmlDoc, \"href\", image));\n\n    const imageSubRegion = valueGetter.get(billboardGraphics.imageSubRegion);\n    if (defined(imageSubRegion)) {\n      icon.appendChild(\n        createBasicElementWithText(kmlDoc, \"x\", imageSubRegion.x, gxNamespace)\n      );\n      icon.appendChild(\n        createBasicElementWithText(kmlDoc, \"y\", imageSubRegion.y, gxNamespace)\n      );\n      icon.appendChild(\n        createBasicElementWithText(\n          kmlDoc,\n          \"w\",\n          imageSubRegion.width,\n          gxNamespace\n        )\n      );\n      icon.appendChild(\n        createBasicElementWithText(\n          kmlDoc,\n          \"h\",\n          imageSubRegion.height,\n          gxNamespace\n        )\n      );\n    }\n\n    iconStyle.appendChild(icon);\n  }\n\n  const color = valueGetter.getColor(billboardGraphics.color);\n  if (defined(color)) {\n    iconStyle.appendChild(createBasicElementWithText(kmlDoc, \"color\", color));\n    iconStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"colorMode\", \"normal\")\n    );\n  }\n\n  let scale = valueGetter.get(billboardGraphics.scale);\n  if (defined(scale)) {\n    iconStyle.appendChild(createBasicElementWithText(kmlDoc, \"scale\", scale));\n  }\n\n  const pixelOffset = valueGetter.get(billboardGraphics.pixelOffset);\n  if (defined(pixelOffset)) {\n    scale = defaultValue(scale, 1.0);\n\n    Cartesian2.divideByScalar(pixelOffset, scale, pixelOffset);\n\n    const width = valueGetter.get(billboardGraphics.width, BILLBOARD_SIZE);\n    const height = valueGetter.get(billboardGraphics.height, BILLBOARD_SIZE);\n\n    // KML Hotspots are from the bottom left, but we work from the top left\n\n    // Move to left\n    const horizontalOrigin = valueGetter.get(\n      billboardGraphics.horizontalOrigin,\n      HorizontalOrigin.CENTER\n    );\n    if (horizontalOrigin === HorizontalOrigin.CENTER) {\n      pixelOffset.x -= width * 0.5;\n    } else if (horizontalOrigin === HorizontalOrigin.RIGHT) {\n      pixelOffset.x -= width;\n    }\n\n    // Move to bottom\n    const verticalOrigin = valueGetter.get(\n      billboardGraphics.verticalOrigin,\n      VerticalOrigin.CENTER\n    );\n    if (verticalOrigin === VerticalOrigin.TOP) {\n      pixelOffset.y += height;\n    } else if (verticalOrigin === VerticalOrigin.CENTER) {\n      pixelOffset.y += height * 0.5;\n    }\n\n    const hotSpot = kmlDoc.createElement(\"hotSpot\");\n    hotSpot.setAttribute(\"x\", -pixelOffset.x);\n    hotSpot.setAttribute(\"y\", pixelOffset.y);\n    hotSpot.setAttribute(\"xunits\", \"pixels\");\n    hotSpot.setAttribute(\"yunits\", \"pixels\");\n\n    iconStyle.appendChild(hotSpot);\n  }\n\n  // We can only specify heading so if axis isn't Z, then we skip the rotation\n  // GE treats a heading of zero as no heading but can still point north using a 360 degree angle\n  let rotation = valueGetter.get(billboardGraphics.rotation);\n  const alignedAxis = valueGetter.get(billboardGraphics.alignedAxis);\n  if (defined(rotation) && Cartesian3.equals(Cartesian3.UNIT_Z, alignedAxis)) {\n    rotation = CesiumMath.toDegrees(-rotation);\n    if (rotation === 0) {\n      rotation = 360;\n    }\n\n    iconStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"heading\", rotation)\n    );\n  }\n\n  return iconStyle;\n}\n\nfunction createLineString(state, polylineGraphics, geometries, styles) {\n  const kmlDoc = state.kmlDoc;\n  const ellipsoid = state.ellipsoid;\n  const valueGetter = state.valueGetter;\n\n  if (!defined(polylineGraphics)) {\n    return;\n  }\n\n  const lineStringGeometry = kmlDoc.createElement(\"LineString\");\n\n  // Set altitude mode\n  const altitudeMode = kmlDoc.createElement(\"altitudeMode\");\n  const clampToGround = valueGetter.get(polylineGraphics.clampToGround, false);\n  let altitudeModeText;\n  if (clampToGround) {\n    lineStringGeometry.appendChild(\n      createBasicElementWithText(kmlDoc, \"tessellate\", true)\n    );\n    altitudeModeText = kmlDoc.createTextNode(\"clampToGround\");\n  } else {\n    altitudeModeText = kmlDoc.createTextNode(\"absolute\");\n  }\n  altitudeMode.appendChild(altitudeModeText);\n  lineStringGeometry.appendChild(altitudeMode);\n\n  // Set coordinates\n  const positionsProperty = polylineGraphics.positions;\n  const cartesians = valueGetter.get(positionsProperty);\n  const coordinates = createBasicElementWithText(\n    kmlDoc,\n    \"coordinates\",\n    getCoordinates(cartesians, ellipsoid)\n  );\n  lineStringGeometry.appendChild(coordinates);\n\n  // Set draw order\n  const zIndex = valueGetter.get(polylineGraphics.zIndex);\n  if (clampToGround && defined(zIndex)) {\n    lineStringGeometry.appendChild(\n      createBasicElementWithText(kmlDoc, \"drawOrder\", zIndex, gxNamespace)\n    );\n  }\n\n  geometries.push(lineStringGeometry);\n\n  // Create style\n  const lineStyle = kmlDoc.createElement(\"LineStyle\");\n\n  const width = valueGetter.get(polylineGraphics.width);\n  if (defined(width)) {\n    lineStyle.appendChild(createBasicElementWithText(kmlDoc, \"width\", width));\n  }\n\n  processMaterial(state, polylineGraphics.material, lineStyle);\n\n  styles.push(lineStyle);\n}\n\nfunction getRectangleBoundaries(state, rectangleGraphics, extrudedHeight) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n\n  let height = valueGetter.get(rectangleGraphics.height, 0.0);\n\n  if (extrudedHeight > 0) {\n    // We extrude up and KML extrudes down, so if we extrude, set the polygon height to\n    // the extruded height so KML will look similar to Cesium\n    height = extrudedHeight;\n  }\n\n  const coordinatesProperty = rectangleGraphics.coordinates;\n  const rectangle = valueGetter.get(coordinatesProperty);\n\n  const coordinateStrings = [];\n  const cornerFunction = [\n    Rectangle.northeast,\n    Rectangle.southeast,\n    Rectangle.southwest,\n    Rectangle.northwest,\n  ];\n\n  for (let i = 0; i < 4; ++i) {\n    cornerFunction[i](rectangle, scratchCartographic);\n    coordinateStrings.push(\n      `${CesiumMath.toDegrees(\n        scratchCartographic.longitude\n      )},${CesiumMath.toDegrees(scratchCartographic.latitude)},${height}`\n    );\n  }\n\n  const coordinates = createBasicElementWithText(\n    kmlDoc,\n    \"coordinates\",\n    coordinateStrings.join(\" \")\n  );\n\n  const outerBoundaryIs = kmlDoc.createElement(\"outerBoundaryIs\");\n  const linearRing = kmlDoc.createElement(\"LinearRing\");\n  linearRing.appendChild(coordinates);\n  outerBoundaryIs.appendChild(linearRing);\n\n  return [outerBoundaryIs];\n}\n\nfunction getLinearRing(state, positions, height, perPositionHeight) {\n  const kmlDoc = state.kmlDoc;\n  const ellipsoid = state.ellipsoid;\n\n  const coordinateStrings = [];\n  const positionCount = positions.length;\n  for (let i = 0; i < positionCount; ++i) {\n    Cartographic.fromCartesian(positions[i], ellipsoid, scratchCartographic);\n    coordinateStrings.push(\n      `${CesiumMath.toDegrees(\n        scratchCartographic.longitude\n      )},${CesiumMath.toDegrees(scratchCartographic.latitude)},${\n        perPositionHeight ? scratchCartographic.height : height\n      }`\n    );\n  }\n\n  const coordinates = createBasicElementWithText(\n    kmlDoc,\n    \"coordinates\",\n    coordinateStrings.join(\" \")\n  );\n  const linearRing = kmlDoc.createElement(\"LinearRing\");\n  linearRing.appendChild(coordinates);\n\n  return linearRing;\n}\n\nfunction getPolygonBoundaries(state, polygonGraphics, extrudedHeight) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n\n  let height = valueGetter.get(polygonGraphics.height, 0.0);\n  const perPositionHeight = valueGetter.get(\n    polygonGraphics.perPositionHeight,\n    false\n  );\n\n  if (!perPositionHeight && extrudedHeight > 0) {\n    // We extrude up and KML extrudes down, so if we extrude, set the polygon height to\n    // the extruded height so KML will look similar to Cesium\n    height = extrudedHeight;\n  }\n\n  const boundaries = [];\n  const hierarchyProperty = polygonGraphics.hierarchy;\n  const hierarchy = valueGetter.get(hierarchyProperty);\n\n  // Polygon hierarchy can sometimes just be an array of positions\n  const positions = Array.isArray(hierarchy) ? hierarchy : hierarchy.positions;\n\n  // Polygon boundaries\n  const outerBoundaryIs = kmlDoc.createElement(\"outerBoundaryIs\");\n  outerBoundaryIs.appendChild(\n    getLinearRing(state, positions, height, perPositionHeight)\n  );\n  boundaries.push(outerBoundaryIs);\n\n  // Hole boundaries\n  const holes = hierarchy.holes;\n  if (defined(holes)) {\n    const holeCount = holes.length;\n    for (let i = 0; i < holeCount; ++i) {\n      const innerBoundaryIs = kmlDoc.createElement(\"innerBoundaryIs\");\n      innerBoundaryIs.appendChild(\n        getLinearRing(state, holes[i].positions, height, perPositionHeight)\n      );\n      boundaries.push(innerBoundaryIs);\n    }\n  }\n\n  return boundaries;\n}\n\nfunction createPolygon(state, geometry, geometries, styles, overlays) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n\n  if (!defined(geometry)) {\n    return;\n  }\n\n  // Detect textured quads and use ground overlays instead\n  const isRectangle = geometry instanceof RectangleGraphics;\n  if (\n    isRectangle &&\n    valueGetter.getMaterialType(geometry.material) === \"Image\"\n  ) {\n    createGroundOverlay(state, geometry, overlays);\n    return;\n  }\n\n  const polygonGeometry = kmlDoc.createElement(\"Polygon\");\n\n  const extrudedHeight = valueGetter.get(geometry.extrudedHeight, 0.0);\n  if (extrudedHeight > 0) {\n    polygonGeometry.appendChild(\n      createBasicElementWithText(kmlDoc, \"extrude\", true)\n    );\n  }\n\n  // Set boundaries\n  const boundaries = isRectangle\n    ? getRectangleBoundaries(state, geometry, extrudedHeight)\n    : getPolygonBoundaries(state, geometry, extrudedHeight);\n\n  const boundaryCount = boundaries.length;\n  for (let i = 0; i < boundaryCount; ++i) {\n    polygonGeometry.appendChild(boundaries[i]);\n  }\n\n  // Set altitude mode\n  const altitudeMode = kmlDoc.createElement(\"altitudeMode\");\n  altitudeMode.appendChild(getAltitudeMode(state, geometry.heightReference));\n  polygonGeometry.appendChild(altitudeMode);\n\n  geometries.push(polygonGeometry);\n\n  // Create style\n  const polyStyle = kmlDoc.createElement(\"PolyStyle\");\n\n  const fill = valueGetter.get(geometry.fill, false);\n  if (fill) {\n    polyStyle.appendChild(createBasicElementWithText(kmlDoc, \"fill\", fill));\n  }\n\n  processMaterial(state, geometry.material, polyStyle);\n\n  const outline = valueGetter.get(geometry.outline, false);\n  if (outline) {\n    polyStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"outline\", outline)\n    );\n\n    // Outline uses LineStyle\n    const lineStyle = kmlDoc.createElement(\"LineStyle\");\n\n    const outlineWidth = valueGetter.get(geometry.outlineWidth, 1.0);\n    lineStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"width\", outlineWidth)\n    );\n\n    const outlineColor = valueGetter.getColor(\n      geometry.outlineColor,\n      Color.BLACK\n    );\n    lineStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"color\", outlineColor)\n    );\n    lineStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"colorMode\", \"normal\")\n    );\n\n    styles.push(lineStyle);\n  }\n\n  styles.push(polyStyle);\n}\n\nfunction createGroundOverlay(state, rectangleGraphics, overlays) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n  const externalFileHandler = state.externalFileHandler;\n\n  const groundOverlay = kmlDoc.createElement(\"GroundOverlay\");\n\n  // Set altitude mode\n  const altitudeMode = kmlDoc.createElement(\"altitudeMode\");\n  altitudeMode.appendChild(\n    getAltitudeMode(state, rectangleGraphics.heightReference)\n  );\n  groundOverlay.appendChild(altitudeMode);\n\n  const height = valueGetter.get(rectangleGraphics.height);\n  if (defined(height)) {\n    groundOverlay.appendChild(\n      createBasicElementWithText(kmlDoc, \"altitude\", height)\n    );\n  }\n\n  const rectangle = valueGetter.get(rectangleGraphics.coordinates);\n  const latLonBox = kmlDoc.createElement(\"LatLonBox\");\n  latLonBox.appendChild(\n    createBasicElementWithText(\n      kmlDoc,\n      \"north\",\n      CesiumMath.toDegrees(rectangle.north)\n    )\n  );\n  latLonBox.appendChild(\n    createBasicElementWithText(\n      kmlDoc,\n      \"south\",\n      CesiumMath.toDegrees(rectangle.south)\n    )\n  );\n  latLonBox.appendChild(\n    createBasicElementWithText(\n      kmlDoc,\n      \"east\",\n      CesiumMath.toDegrees(rectangle.east)\n    )\n  );\n  latLonBox.appendChild(\n    createBasicElementWithText(\n      kmlDoc,\n      \"west\",\n      CesiumMath.toDegrees(rectangle.west)\n    )\n  );\n  groundOverlay.appendChild(latLonBox);\n\n  // We should only end up here if we have an ImageMaterialProperty\n  const material = valueGetter.get(rectangleGraphics.material);\n  const href = externalFileHandler.texture(material.image);\n  const icon = kmlDoc.createElement(\"Icon\");\n  icon.appendChild(createBasicElementWithText(kmlDoc, \"href\", href));\n  groundOverlay.appendChild(icon);\n\n  const color = material.color;\n  if (defined(color)) {\n    groundOverlay.appendChild(\n      createBasicElementWithText(kmlDoc, \"color\", colorToString(material.color))\n    );\n  }\n\n  overlays.push(groundOverlay);\n}\n\nfunction createModelGeometry(state, modelGraphics) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n  const externalFileHandler = state.externalFileHandler;\n\n  const modelGeometry = kmlDoc.createElement(\"Model\");\n\n  const scale = valueGetter.get(modelGraphics.scale);\n  if (defined(scale)) {\n    const scaleElement = kmlDoc.createElement(\"scale\");\n    scaleElement.appendChild(createBasicElementWithText(kmlDoc, \"x\", scale));\n    scaleElement.appendChild(createBasicElementWithText(kmlDoc, \"y\", scale));\n    scaleElement.appendChild(createBasicElementWithText(kmlDoc, \"z\", scale));\n    modelGeometry.appendChild(scaleElement);\n  }\n\n  const link = kmlDoc.createElement(\"Link\");\n  const uri = externalFileHandler.model(modelGraphics, state.time);\n\n  link.appendChild(createBasicElementWithText(kmlDoc, \"href\", uri));\n  modelGeometry.appendChild(link);\n\n  return modelGeometry;\n}\n\nfunction createModel(state, entity, modelGraphics, geometries, styles) {\n  const kmlDoc = state.kmlDoc;\n  const ellipsoid = state.ellipsoid;\n  const valueGetter = state.valueGetter;\n\n  if (!defined(modelGraphics)) {\n    return;\n  }\n\n  // If the point isn't constant then create gx:Track or gx:MultiTrack\n  const entityPositionProperty = entity.position;\n  if (!entityPositionProperty.isConstant) {\n    createTracks(state, entity, modelGraphics, geometries, styles);\n    return;\n  }\n\n  const modelGeometry = createModelGeometry(state, modelGraphics);\n\n  // Set altitude mode\n  const altitudeMode = kmlDoc.createElement(\"altitudeMode\");\n  altitudeMode.appendChild(\n    getAltitudeMode(state, modelGraphics.heightReference)\n  );\n  modelGeometry.appendChild(altitudeMode);\n\n  valueGetter.get(entityPositionProperty, undefined, scratchCartesian3);\n  Cartographic.fromCartesian(scratchCartesian3, ellipsoid, scratchCartographic);\n  const location = kmlDoc.createElement(\"Location\");\n  location.appendChild(\n    createBasicElementWithText(\n      kmlDoc,\n      \"longitude\",\n      CesiumMath.toDegrees(scratchCartographic.longitude)\n    )\n  );\n  location.appendChild(\n    createBasicElementWithText(\n      kmlDoc,\n      \"latitude\",\n      CesiumMath.toDegrees(scratchCartographic.latitude)\n    )\n  );\n  location.appendChild(\n    createBasicElementWithText(kmlDoc, \"altitude\", scratchCartographic.height)\n  );\n  modelGeometry.appendChild(location);\n\n  geometries.push(modelGeometry);\n}\n\nfunction processMaterial(state, materialProperty, style) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n\n  if (!defined(materialProperty)) {\n    return;\n  }\n\n  const material = valueGetter.get(materialProperty);\n  if (!defined(material)) {\n    return;\n  }\n\n  let color;\n  const type = valueGetter.getMaterialType(materialProperty);\n  let outlineColor;\n  let outlineWidth;\n  switch (type) {\n    case \"Image\":\n      // Image materials are only able to be represented on rectangles, so if we make it\n      //  here we can't texture a generic polygon or polyline in KML, so just use white.\n      color = colorToString(Color.WHITE);\n      break;\n    case \"Color\":\n    case \"Grid\":\n    case \"PolylineGlow\":\n    case \"PolylineArrow\":\n    case \"PolylineDash\":\n      color = colorToString(material.color);\n      break;\n    case \"PolylineOutline\":\n      color = colorToString(material.color);\n\n      outlineColor = colorToString(material.outlineColor);\n      outlineWidth = material.outlineWidth;\n      style.appendChild(\n        createBasicElementWithText(\n          kmlDoc,\n          \"outerColor\",\n          outlineColor,\n          gxNamespace\n        )\n      );\n      style.appendChild(\n        createBasicElementWithText(\n          kmlDoc,\n          \"outerWidth\",\n          outlineWidth,\n          gxNamespace\n        )\n      );\n      break;\n    case \"Stripe\":\n      color = colorToString(material.oddColor);\n      break;\n  }\n\n  if (defined(color)) {\n    style.appendChild(createBasicElementWithText(kmlDoc, \"color\", color));\n    style.appendChild(\n      createBasicElementWithText(kmlDoc, \"colorMode\", \"normal\")\n    );\n  }\n}\n\nfunction getAltitudeMode(state, heightReferenceProperty) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n\n  const heightReference = valueGetter.get(\n    heightReferenceProperty,\n    HeightReference.NONE\n  );\n  let altitudeModeText;\n  switch (heightReference) {\n    case HeightReference.NONE:\n      altitudeModeText = kmlDoc.createTextNode(\"absolute\");\n      break;\n    case HeightReference.CLAMP_TO_GROUND:\n      altitudeModeText = kmlDoc.createTextNode(\"clampToGround\");\n      break;\n    case HeightReference.RELATIVE_TO_GROUND:\n      altitudeModeText = kmlDoc.createTextNode(\"relativeToGround\");\n      break;\n  }\n\n  return altitudeModeText;\n}\n\nfunction getCoordinates(coordinates, ellipsoid) {\n  if (!Array.isArray(coordinates)) {\n    coordinates = [coordinates];\n  }\n\n  const count = coordinates.length;\n  const coordinateStrings = [];\n  for (let i = 0; i < count; ++i) {\n    Cartographic.fromCartesian(coordinates[i], ellipsoid, scratchCartographic);\n    coordinateStrings.push(\n      `${CesiumMath.toDegrees(\n        scratchCartographic.longitude\n      )},${CesiumMath.toDegrees(scratchCartographic.latitude)},${\n        scratchCartographic.height\n      }`\n    );\n  }\n\n  return coordinateStrings.join(\" \");\n}\n\nfunction createBasicElementWithText(\n  kmlDoc,\n  elementName,\n  elementValue,\n  namespace\n) {\n  elementValue = defaultValue(elementValue, \"\");\n\n  if (typeof elementValue === \"boolean\") {\n    elementValue = elementValue ? \"1\" : \"0\";\n  }\n\n  // Create element with optional namespace\n  const element = defined(namespace)\n    ? kmlDoc.createElementNS(namespace, elementName)\n    : kmlDoc.createElement(elementName);\n\n  // Wrap value in CDATA section if it contains HTML\n  const text =\n    elementValue === \"string\" && elementValue.indexOf(\"<\") !== -1\n      ? kmlDoc.createCDATASection(elementValue)\n      : kmlDoc.createTextNode(elementValue);\n\n  element.appendChild(text);\n\n  return element;\n}\n\nfunction colorToString(color) {\n  let result = \"\";\n  const bytes = color.toBytes();\n  for (let i = 3; i >= 0; --i) {\n    result +=\n      bytes[i] < 16 ? `0${bytes[i].toString(16)}` : bytes[i].toString(16);\n  }\n\n  return result;\n}\n\n/**\n * Since KML does not support glTF models, this callback is required to specify what URL to use for the model in the KML document.\n * It can also be used to add additional files to the <code>externalFiles</code> object, which is the list of files embedded in the exported KMZ,\n * or otherwise returned with the KML string when exporting.\n *\n * @callback exportKmlModelCallback\n *\n * @param {ModelGraphics} model The ModelGraphics instance for an Entity.\n * @param {JulianDate} time The time that any properties should use to get the value.\n * @param {object} externalFiles An object that maps a filename to a Blob or a Promise that resolves to a Blob.\n * @returns {string} The URL to use for the href in the KML document.\n */\nexport default exportKml;\n","/**\n * This enumerated type is for representing keyboard modifiers. These are keys\n * that are held down in addition to other event types.\n *\n * @enum {number}\n */\nconst KeyboardEventModifier = {\n  /**\n   * Represents the shift key being held down.\n   *\n   * @type {number}\n   * @constant\n   */\n  SHIFT: 0,\n\n  /**\n   * Represents the control key being held down.\n   *\n   * @type {number}\n   * @constant\n   */\n  CTRL: 1,\n\n  /**\n   * Represents the alt key being held down.\n   *\n   * @type {number}\n   * @constant\n   */\n  ALT: 2,\n};\nexport default Object.freeze(KeyboardEventModifier);\n","/**\n * This enumerated type is for classifying mouse events: down, up, click, double click, move and move while a button is held down.\n *\n * @enum {number}\n */\nconst ScreenSpaceEventType = {\n  /**\n   * Represents a mouse left button down event.\n   *\n   * @type {number}\n   * @constant\n   */\n  LEFT_DOWN: 0,\n\n  /**\n   * Represents a mouse left button up event.\n   *\n   * @type {number}\n   * @constant\n   */\n  LEFT_UP: 1,\n\n  /**\n   * Represents a mouse left click event.\n   *\n   * @type {number}\n   * @constant\n   */\n  LEFT_CLICK: 2,\n\n  /**\n   * Represents a mouse left double click event.\n   *\n   * @type {number}\n   * @constant\n   */\n  LEFT_DOUBLE_CLICK: 3,\n\n  /**\n   * Represents a mouse left button down event.\n   *\n   * @type {number}\n   * @constant\n   */\n  RIGHT_DOWN: 5,\n\n  /**\n   * Represents a mouse right button up event.\n   *\n   * @type {number}\n   * @constant\n   */\n  RIGHT_UP: 6,\n\n  /**\n   * Represents a mouse right click event.\n   *\n   * @type {number}\n   * @constant\n   */\n  RIGHT_CLICK: 7,\n\n  /**\n   * Represents a mouse middle button down event.\n   *\n   * @type {number}\n   * @constant\n   */\n  MIDDLE_DOWN: 10,\n\n  /**\n   * Represents a mouse middle button up event.\n   *\n   * @type {number}\n   * @constant\n   */\n  MIDDLE_UP: 11,\n\n  /**\n   * Represents a mouse middle click event.\n   *\n   * @type {number}\n   * @constant\n   */\n  MIDDLE_CLICK: 12,\n\n  /**\n   * Represents a mouse move event.\n   *\n   * @type {number}\n   * @constant\n   */\n  MOUSE_MOVE: 15,\n\n  /**\n   * Represents a mouse wheel event.\n   *\n   * @type {number}\n   * @constant\n   */\n  WHEEL: 16,\n\n  /**\n   * Represents the start of a two-finger event on a touch surface.\n   *\n   * @type {number}\n   * @constant\n   */\n  PINCH_START: 17,\n\n  /**\n   * Represents the end of a two-finger event on a touch surface.\n   *\n   * @type {number}\n   * @constant\n   */\n  PINCH_END: 18,\n\n  /**\n   * Represents a change of a two-finger event on a touch surface.\n   *\n   * @type {number}\n   * @constant\n   */\n  PINCH_MOVE: 19,\n};\nexport default Object.freeze(ScreenSpaceEventType);\n","import AssociativeArray from \"./AssociativeArray.js\";\nimport Cartesian2 from \"./Cartesian2.js\";\nimport defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport destroyObject from \"./destroyObject.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nimport FeatureDetection from \"./FeatureDetection.js\";\nimport getTimestamp from \"./getTimestamp.js\";\nimport KeyboardEventModifier from \"./KeyboardEventModifier.js\";\nimport ScreenSpaceEventType from \"./ScreenSpaceEventType.js\";\n\nfunction getPosition(screenSpaceEventHandler, event, result) {\n  const element = screenSpaceEventHandler._element;\n  if (element === document) {\n    result.x = event.clientX;\n    result.y = event.clientY;\n    return result;\n  }\n\n  const rect = element.getBoundingClientRect();\n  result.x = event.clientX - rect.left;\n  result.y = event.clientY - rect.top;\n  return result;\n}\n\nfunction getInputEventKey(type, modifier) {\n  let key = type;\n  if (defined(modifier)) {\n    key += `+${modifier}`;\n  }\n  return key;\n}\n\nfunction getModifier(event) {\n  if (event.shiftKey) {\n    return KeyboardEventModifier.SHIFT;\n  } else if (event.ctrlKey) {\n    return KeyboardEventModifier.CTRL;\n  } else if (event.altKey) {\n    return KeyboardEventModifier.ALT;\n  }\n\n  return undefined;\n}\n\nconst MouseButton = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2,\n};\n\nfunction registerListener(screenSpaceEventHandler, domType, element, callback) {\n  function listener(e) {\n    callback(screenSpaceEventHandler, e);\n  }\n\n  if (FeatureDetection.isInternetExplorer()) {\n    element.addEventListener(domType, listener, false);\n  } else {\n    element.addEventListener(domType, listener, {\n      capture: false,\n      passive: false,\n    });\n  }\n\n  screenSpaceEventHandler._removalFunctions.push(function () {\n    element.removeEventListener(domType, listener, false);\n  });\n}\n\nfunction registerListeners(screenSpaceEventHandler) {\n  const element = screenSpaceEventHandler._element;\n\n  // some listeners may be registered on the document, so we still get events even after\n  // leaving the bounds of element.\n  // this is affected by the existence of an undocumented disableRootEvents property on element.\n  const alternateElement = !defined(element.disableRootEvents)\n    ? document\n    : element;\n\n  if (FeatureDetection.supportsPointerEvents()) {\n    registerListener(\n      screenSpaceEventHandler,\n      \"pointerdown\",\n      element,\n      handlePointerDown\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      \"pointerup\",\n      element,\n      handlePointerUp\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      \"pointermove\",\n      element,\n      handlePointerMove\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      \"pointercancel\",\n      element,\n      handlePointerUp\n    );\n  } else {\n    registerListener(\n      screenSpaceEventHandler,\n      \"mousedown\",\n      element,\n      handleMouseDown\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      \"mouseup\",\n      alternateElement,\n      handleMouseUp\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      \"mousemove\",\n      alternateElement,\n      handleMouseMove\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      \"touchstart\",\n      element,\n      handleTouchStart\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      \"touchend\",\n      alternateElement,\n      handleTouchEnd\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      \"touchmove\",\n      alternateElement,\n      handleTouchMove\n    );\n    registerListener(\n      screenSpaceEventHandler,\n      \"touchcancel\",\n      alternateElement,\n      handleTouchEnd\n    );\n  }\n\n  registerListener(\n    screenSpaceEventHandler,\n    \"dblclick\",\n    element,\n    handleDblClick\n  );\n\n  // detect available wheel event\n  let wheelEvent;\n  if (\"onwheel\" in element) {\n    // spec event type\n    wheelEvent = \"wheel\";\n  } else if (document.onmousewheel !== undefined) {\n    // legacy event type\n    wheelEvent = \"mousewheel\";\n  } else {\n    // older Firefox\n    wheelEvent = \"DOMMouseScroll\";\n  }\n\n  registerListener(screenSpaceEventHandler, wheelEvent, element, handleWheel);\n}\n\nfunction unregisterListeners(screenSpaceEventHandler) {\n  const removalFunctions = screenSpaceEventHandler._removalFunctions;\n  for (let i = 0; i < removalFunctions.length; ++i) {\n    removalFunctions[i]();\n  }\n}\n\nconst mouseDownEvent = {\n  position: new Cartesian2(),\n};\n\nfunction gotTouchEvent(screenSpaceEventHandler) {\n  screenSpaceEventHandler._lastSeenTouchEvent = getTimestamp();\n}\n\nfunction canProcessMouseEvent(screenSpaceEventHandler) {\n  return (\n    getTimestamp() - screenSpaceEventHandler._lastSeenTouchEvent >\n    ScreenSpaceEventHandler.mouseEmulationIgnoreMilliseconds\n  );\n}\n\nfunction checkPixelTolerance(startPosition, endPosition, pixelTolerance) {\n  const xDiff = startPosition.x - endPosition.x;\n  const yDiff = startPosition.y - endPosition.y;\n  const totalPixels = Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n\n  return totalPixels < pixelTolerance;\n}\n\nfunction handleMouseDown(screenSpaceEventHandler, event) {\n  if (!canProcessMouseEvent(screenSpaceEventHandler)) {\n    return;\n  }\n\n  const button = event.button;\n  screenSpaceEventHandler._buttonDown[button] = true;\n\n  let screenSpaceEventType;\n  if (button === MouseButton.LEFT) {\n    screenSpaceEventType = ScreenSpaceEventType.LEFT_DOWN;\n  } else if (button === MouseButton.MIDDLE) {\n    screenSpaceEventType = ScreenSpaceEventType.MIDDLE_DOWN;\n  } else if (button === MouseButton.RIGHT) {\n    screenSpaceEventType = ScreenSpaceEventType.RIGHT_DOWN;\n  } else {\n    return;\n  }\n\n  const position = getPosition(\n    screenSpaceEventHandler,\n    event,\n    screenSpaceEventHandler._primaryPosition\n  );\n  Cartesian2.clone(position, screenSpaceEventHandler._primaryStartPosition);\n  Cartesian2.clone(position, screenSpaceEventHandler._primaryPreviousPosition);\n\n  const modifier = getModifier(event);\n\n  const action = screenSpaceEventHandler.getInputAction(\n    screenSpaceEventType,\n    modifier\n  );\n\n  if (defined(action)) {\n    Cartesian2.clone(position, mouseDownEvent.position);\n\n    action(mouseDownEvent);\n\n    event.preventDefault();\n  }\n}\n\nconst mouseUpEvent = {\n  position: new Cartesian2(),\n};\nconst mouseClickEvent = {\n  position: new Cartesian2(),\n};\n\nfunction cancelMouseEvent(\n  screenSpaceEventHandler,\n  screenSpaceEventType,\n  clickScreenSpaceEventType,\n  event\n) {\n  const modifier = getModifier(event);\n\n  const action = screenSpaceEventHandler.getInputAction(\n    screenSpaceEventType,\n    modifier\n  );\n  const clickAction = screenSpaceEventHandler.getInputAction(\n    clickScreenSpaceEventType,\n    modifier\n  );\n\n  if (defined(action) || defined(clickAction)) {\n    const position = getPosition(\n      screenSpaceEventHandler,\n      event,\n      screenSpaceEventHandler._primaryPosition\n    );\n\n    if (defined(action)) {\n      Cartesian2.clone(position, mouseUpEvent.position);\n\n      action(mouseUpEvent);\n    }\n\n    if (defined(clickAction)) {\n      const startPosition = screenSpaceEventHandler._primaryStartPosition;\n      if (\n        checkPixelTolerance(\n          startPosition,\n          position,\n          screenSpaceEventHandler._clickPixelTolerance\n        )\n      ) {\n        Cartesian2.clone(position, mouseClickEvent.position);\n\n        clickAction(mouseClickEvent);\n      }\n    }\n  }\n}\n\nfunction handleMouseUp(screenSpaceEventHandler, event) {\n  if (!canProcessMouseEvent(screenSpaceEventHandler)) {\n    return;\n  }\n\n  const button = event.button;\n\n  if (\n    button !== MouseButton.LEFT &&\n    button !== MouseButton.MIDDLE &&\n    button !== MouseButton.RIGHT\n  ) {\n    return;\n  }\n\n  if (screenSpaceEventHandler._buttonDown[MouseButton.LEFT]) {\n    cancelMouseEvent(\n      screenSpaceEventHandler,\n      ScreenSpaceEventType.LEFT_UP,\n      ScreenSpaceEventType.LEFT_CLICK,\n      event\n    );\n    screenSpaceEventHandler._buttonDown[MouseButton.LEFT] = false;\n  }\n  if (screenSpaceEventHandler._buttonDown[MouseButton.MIDDLE]) {\n    cancelMouseEvent(\n      screenSpaceEventHandler,\n      ScreenSpaceEventType.MIDDLE_UP,\n      ScreenSpaceEventType.MIDDLE_CLICK,\n      event\n    );\n    screenSpaceEventHandler._buttonDown[MouseButton.MIDDLE] = false;\n  }\n  if (screenSpaceEventHandler._buttonDown[MouseButton.RIGHT]) {\n    cancelMouseEvent(\n      screenSpaceEventHandler,\n      ScreenSpaceEventType.RIGHT_UP,\n      ScreenSpaceEventType.RIGHT_CLICK,\n      event\n    );\n    screenSpaceEventHandler._buttonDown[MouseButton.RIGHT] = false;\n  }\n}\n\nconst mouseMoveEvent = {\n  startPosition: new Cartesian2(),\n  endPosition: new Cartesian2(),\n};\n\nfunction handleMouseMove(screenSpaceEventHandler, event) {\n  if (!canProcessMouseEvent(screenSpaceEventHandler)) {\n    return;\n  }\n\n  const modifier = getModifier(event);\n\n  const position = getPosition(\n    screenSpaceEventHandler,\n    event,\n    screenSpaceEventHandler._primaryPosition\n  );\n  const previousPosition = screenSpaceEventHandler._primaryPreviousPosition;\n\n  const action = screenSpaceEventHandler.getInputAction(\n    ScreenSpaceEventType.MOUSE_MOVE,\n    modifier\n  );\n\n  if (defined(action)) {\n    Cartesian2.clone(previousPosition, mouseMoveEvent.startPosition);\n    Cartesian2.clone(position, mouseMoveEvent.endPosition);\n\n    action(mouseMoveEvent);\n  }\n\n  Cartesian2.clone(position, previousPosition);\n\n  if (\n    screenSpaceEventHandler._buttonDown[MouseButton.LEFT] ||\n    screenSpaceEventHandler._buttonDown[MouseButton.MIDDLE] ||\n    screenSpaceEventHandler._buttonDown[MouseButton.RIGHT]\n  ) {\n    event.preventDefault();\n  }\n}\n\nconst mouseDblClickEvent = {\n  position: new Cartesian2(),\n};\n\nfunction handleDblClick(screenSpaceEventHandler, event) {\n  const button = event.button;\n\n  let screenSpaceEventType;\n  if (button === MouseButton.LEFT) {\n    screenSpaceEventType = ScreenSpaceEventType.LEFT_DOUBLE_CLICK;\n  } else {\n    return;\n  }\n\n  const modifier = getModifier(event);\n\n  const action = screenSpaceEventHandler.getInputAction(\n    screenSpaceEventType,\n    modifier\n  );\n\n  if (defined(action)) {\n    getPosition(screenSpaceEventHandler, event, mouseDblClickEvent.position);\n\n    action(mouseDblClickEvent);\n  }\n}\n\nfunction handleWheel(screenSpaceEventHandler, event) {\n  // currently this event exposes the delta value in terms of\n  // the obsolete mousewheel event type.  so, for now, we adapt the other\n  // values to that scheme.\n  let delta;\n\n  // standard wheel event uses deltaY.  sign is opposite wheelDelta.\n  // deltaMode indicates what unit it is in.\n  if (defined(event.deltaY)) {\n    const deltaMode = event.deltaMode;\n    if (deltaMode === event.DOM_DELTA_PIXEL) {\n      delta = -event.deltaY;\n    } else if (deltaMode === event.DOM_DELTA_LINE) {\n      delta = -event.deltaY * 40;\n    } else {\n      // DOM_DELTA_PAGE\n      delta = -event.deltaY * 120;\n    }\n  } else if (event.detail > 0) {\n    // old Firefox versions use event.detail to count the number of clicks. The sign\n    // of the integer is the direction the wheel is scrolled.\n    delta = event.detail * -120;\n  } else {\n    delta = event.wheelDelta;\n  }\n\n  if (!defined(delta)) {\n    return;\n  }\n\n  const modifier = getModifier(event);\n  const action = screenSpaceEventHandler.getInputAction(\n    ScreenSpaceEventType.WHEEL,\n    modifier\n  );\n\n  if (defined(action)) {\n    action(delta);\n\n    event.preventDefault();\n  }\n}\n\nfunction handleTouchStart(screenSpaceEventHandler, event) {\n  gotTouchEvent(screenSpaceEventHandler);\n\n  const changedTouches = event.changedTouches;\n\n  let i;\n  const length = changedTouches.length;\n  let touch;\n  let identifier;\n  const positions = screenSpaceEventHandler._positions;\n\n  for (i = 0; i < length; ++i) {\n    touch = changedTouches[i];\n    identifier = touch.identifier;\n    positions.set(\n      identifier,\n      getPosition(screenSpaceEventHandler, touch, new Cartesian2())\n    );\n  }\n\n  fireTouchEvents(screenSpaceEventHandler, event);\n\n  const previousPositions = screenSpaceEventHandler._previousPositions;\n\n  for (i = 0; i < length; ++i) {\n    touch = changedTouches[i];\n    identifier = touch.identifier;\n    previousPositions.set(\n      identifier,\n      Cartesian2.clone(positions.get(identifier))\n    );\n  }\n}\n\nfunction handleTouchEnd(screenSpaceEventHandler, event) {\n  gotTouchEvent(screenSpaceEventHandler);\n\n  const changedTouches = event.changedTouches;\n\n  let i;\n  const length = changedTouches.length;\n  let touch;\n  let identifier;\n  const positions = screenSpaceEventHandler._positions;\n\n  for (i = 0; i < length; ++i) {\n    touch = changedTouches[i];\n    identifier = touch.identifier;\n    positions.remove(identifier);\n  }\n\n  fireTouchEvents(screenSpaceEventHandler, event);\n\n  const previousPositions = screenSpaceEventHandler._previousPositions;\n\n  for (i = 0; i < length; ++i) {\n    touch = changedTouches[i];\n    identifier = touch.identifier;\n    previousPositions.remove(identifier);\n  }\n}\n\nconst touchStartEvent = {\n  position: new Cartesian2(),\n};\nconst touch2StartEvent = {\n  position1: new Cartesian2(),\n  position2: new Cartesian2(),\n};\nconst touchEndEvent = {\n  position: new Cartesian2(),\n};\nconst touchClickEvent = {\n  position: new Cartesian2(),\n};\nconst touchHoldEvent = {\n  position: new Cartesian2(),\n};\n\nfunction fireTouchEvents(screenSpaceEventHandler, event) {\n  const modifier = getModifier(event);\n  const positions = screenSpaceEventHandler._positions;\n  const numberOfTouches = positions.length;\n  let action;\n  let clickAction;\n  const pinching = screenSpaceEventHandler._isPinching;\n\n  if (\n    numberOfTouches !== 1 &&\n    screenSpaceEventHandler._buttonDown[MouseButton.LEFT]\n  ) {\n    // transitioning from single touch, trigger UP and might trigger CLICK\n    screenSpaceEventHandler._buttonDown[MouseButton.LEFT] = false;\n\n    if (defined(screenSpaceEventHandler._touchHoldTimer)) {\n      clearTimeout(screenSpaceEventHandler._touchHoldTimer);\n      screenSpaceEventHandler._touchHoldTimer = undefined;\n    }\n\n    action = screenSpaceEventHandler.getInputAction(\n      ScreenSpaceEventType.LEFT_UP,\n      modifier\n    );\n\n    if (defined(action)) {\n      Cartesian2.clone(\n        screenSpaceEventHandler._primaryPosition,\n        touchEndEvent.position\n      );\n\n      action(touchEndEvent);\n    }\n\n    if (numberOfTouches === 0 && !screenSpaceEventHandler._isTouchHolding) {\n      // releasing single touch, check for CLICK\n      clickAction = screenSpaceEventHandler.getInputAction(\n        ScreenSpaceEventType.LEFT_CLICK,\n        modifier\n      );\n\n      if (defined(clickAction)) {\n        const startPosition = screenSpaceEventHandler._primaryStartPosition;\n        const endPosition =\n          screenSpaceEventHandler._previousPositions.values[0];\n        if (\n          checkPixelTolerance(\n            startPosition,\n            endPosition,\n            screenSpaceEventHandler._clickPixelTolerance\n          )\n        ) {\n          Cartesian2.clone(\n            screenSpaceEventHandler._primaryPosition,\n            touchClickEvent.position\n          );\n\n          clickAction(touchClickEvent);\n        }\n      }\n    }\n\n    screenSpaceEventHandler._isTouchHolding = false;\n\n    // Otherwise don't trigger CLICK, because we are adding more touches.\n  }\n\n  if (numberOfTouches === 0 && pinching) {\n    // transitioning from pinch, trigger PINCH_END\n    screenSpaceEventHandler._isPinching = false;\n\n    action = screenSpaceEventHandler.getInputAction(\n      ScreenSpaceEventType.PINCH_END,\n      modifier\n    );\n\n    if (defined(action)) {\n      action();\n    }\n  }\n\n  if (numberOfTouches === 1 && !pinching) {\n    // transitioning to single touch, trigger DOWN\n    const position = positions.values[0];\n    Cartesian2.clone(position, screenSpaceEventHandler._primaryPosition);\n    Cartesian2.clone(position, screenSpaceEventHandler._primaryStartPosition);\n    Cartesian2.clone(\n      position,\n      screenSpaceEventHandler._primaryPreviousPosition\n    );\n\n    screenSpaceEventHandler._buttonDown[MouseButton.LEFT] = true;\n\n    action = screenSpaceEventHandler.getInputAction(\n      ScreenSpaceEventType.LEFT_DOWN,\n      modifier\n    );\n\n    if (defined(action)) {\n      Cartesian2.clone(position, touchStartEvent.position);\n\n      action(touchStartEvent);\n    }\n\n    screenSpaceEventHandler._touchHoldTimer = setTimeout(function () {\n      if (!screenSpaceEventHandler.isDestroyed()) {\n        screenSpaceEventHandler._touchHoldTimer = undefined;\n        screenSpaceEventHandler._isTouchHolding = true;\n\n        clickAction = screenSpaceEventHandler.getInputAction(\n          ScreenSpaceEventType.RIGHT_CLICK,\n          modifier\n        );\n\n        if (defined(clickAction)) {\n          const startPosition = screenSpaceEventHandler._primaryStartPosition;\n          const endPosition =\n            screenSpaceEventHandler._previousPositions.values[0];\n          if (\n            checkPixelTolerance(\n              startPosition,\n              endPosition,\n              screenSpaceEventHandler._holdPixelTolerance\n            )\n          ) {\n            Cartesian2.clone(\n              screenSpaceEventHandler._primaryPosition,\n              touchHoldEvent.position\n            );\n\n            clickAction(touchHoldEvent);\n          }\n        }\n      }\n    }, ScreenSpaceEventHandler.touchHoldDelayMilliseconds);\n\n    event.preventDefault();\n  }\n\n  if (numberOfTouches === 2 && !pinching) {\n    // transitioning to pinch, trigger PINCH_START\n    screenSpaceEventHandler._isPinching = true;\n\n    action = screenSpaceEventHandler.getInputAction(\n      ScreenSpaceEventType.PINCH_START,\n      modifier\n    );\n\n    if (defined(action)) {\n      Cartesian2.clone(positions.values[0], touch2StartEvent.position1);\n      Cartesian2.clone(positions.values[1], touch2StartEvent.position2);\n\n      action(touch2StartEvent);\n\n      // Touch-enabled devices, in particular iOS can have many default behaviours for\n      // \"pinch\" events, which can still be executed unless we prevent them here.\n      event.preventDefault();\n    }\n  }\n}\n\nfunction handleTouchMove(screenSpaceEventHandler, event) {\n  gotTouchEvent(screenSpaceEventHandler);\n\n  const changedTouches = event.changedTouches;\n\n  let i;\n  const length = changedTouches.length;\n  let touch;\n  let identifier;\n  const positions = screenSpaceEventHandler._positions;\n\n  for (i = 0; i < length; ++i) {\n    touch = changedTouches[i];\n    identifier = touch.identifier;\n    const position = positions.get(identifier);\n    if (defined(position)) {\n      getPosition(screenSpaceEventHandler, touch, position);\n    }\n  }\n\n  fireTouchMoveEvents(screenSpaceEventHandler, event);\n\n  const previousPositions = screenSpaceEventHandler._previousPositions;\n\n  for (i = 0; i < length; ++i) {\n    touch = changedTouches[i];\n    identifier = touch.identifier;\n    Cartesian2.clone(\n      positions.get(identifier),\n      previousPositions.get(identifier)\n    );\n  }\n}\n\nconst touchMoveEvent = {\n  startPosition: new Cartesian2(),\n  endPosition: new Cartesian2(),\n};\nconst touchPinchMovementEvent = {\n  distance: {\n    startPosition: new Cartesian2(),\n    endPosition: new Cartesian2(),\n  },\n  angleAndHeight: {\n    startPosition: new Cartesian2(),\n    endPosition: new Cartesian2(),\n  },\n};\n\nfunction fireTouchMoveEvents(screenSpaceEventHandler, event) {\n  const modifier = getModifier(event);\n  const positions = screenSpaceEventHandler._positions;\n  const previousPositions = screenSpaceEventHandler._previousPositions;\n  const numberOfTouches = positions.length;\n  let action;\n\n  if (\n    numberOfTouches === 1 &&\n    screenSpaceEventHandler._buttonDown[MouseButton.LEFT]\n  ) {\n    // moving single touch\n    const position = positions.values[0];\n    Cartesian2.clone(position, screenSpaceEventHandler._primaryPosition);\n\n    const previousPosition = screenSpaceEventHandler._primaryPreviousPosition;\n\n    action = screenSpaceEventHandler.getInputAction(\n      ScreenSpaceEventType.MOUSE_MOVE,\n      modifier\n    );\n\n    if (defined(action)) {\n      Cartesian2.clone(previousPosition, touchMoveEvent.startPosition);\n      Cartesian2.clone(position, touchMoveEvent.endPosition);\n\n      action(touchMoveEvent);\n    }\n\n    Cartesian2.clone(position, previousPosition);\n\n    event.preventDefault();\n  } else if (numberOfTouches === 2 && screenSpaceEventHandler._isPinching) {\n    // moving pinch\n\n    action = screenSpaceEventHandler.getInputAction(\n      ScreenSpaceEventType.PINCH_MOVE,\n      modifier\n    );\n    if (defined(action)) {\n      const position1 = positions.values[0];\n      const position2 = positions.values[1];\n      const previousPosition1 = previousPositions.values[0];\n      const previousPosition2 = previousPositions.values[1];\n\n      const dX = position2.x - position1.x;\n      const dY = position2.y - position1.y;\n      const dist = Math.sqrt(dX * dX + dY * dY) * 0.25;\n\n      const prevDX = previousPosition2.x - previousPosition1.x;\n      const prevDY = previousPosition2.y - previousPosition1.y;\n      const prevDist = Math.sqrt(prevDX * prevDX + prevDY * prevDY) * 0.25;\n\n      const cY = (position2.y + position1.y) * 0.125;\n      const prevCY = (previousPosition2.y + previousPosition1.y) * 0.125;\n      const angle = Math.atan2(dY, dX);\n      const prevAngle = Math.atan2(prevDY, prevDX);\n\n      Cartesian2.fromElements(\n        0.0,\n        prevDist,\n        touchPinchMovementEvent.distance.startPosition\n      );\n      Cartesian2.fromElements(\n        0.0,\n        dist,\n        touchPinchMovementEvent.distance.endPosition\n      );\n\n      Cartesian2.fromElements(\n        prevAngle,\n        prevCY,\n        touchPinchMovementEvent.angleAndHeight.startPosition\n      );\n      Cartesian2.fromElements(\n        angle,\n        cY,\n        touchPinchMovementEvent.angleAndHeight.endPosition\n      );\n\n      action(touchPinchMovementEvent);\n    }\n  }\n}\n\nfunction handlePointerDown(screenSpaceEventHandler, event) {\n  event.target.setPointerCapture(event.pointerId);\n\n  if (event.pointerType === \"touch\") {\n    const positions = screenSpaceEventHandler._positions;\n\n    const identifier = event.pointerId;\n    positions.set(\n      identifier,\n      getPosition(screenSpaceEventHandler, event, new Cartesian2())\n    );\n\n    fireTouchEvents(screenSpaceEventHandler, event);\n\n    const previousPositions = screenSpaceEventHandler._previousPositions;\n    previousPositions.set(\n      identifier,\n      Cartesian2.clone(positions.get(identifier))\n    );\n  } else {\n    handleMouseDown(screenSpaceEventHandler, event);\n  }\n}\n\nfunction handlePointerUp(screenSpaceEventHandler, event) {\n  if (event.pointerType === \"touch\") {\n    const positions = screenSpaceEventHandler._positions;\n\n    const identifier = event.pointerId;\n    positions.remove(identifier);\n\n    fireTouchEvents(screenSpaceEventHandler, event);\n\n    const previousPositions = screenSpaceEventHandler._previousPositions;\n    previousPositions.remove(identifier);\n  } else {\n    handleMouseUp(screenSpaceEventHandler, event);\n  }\n}\n\nfunction handlePointerMove(screenSpaceEventHandler, event) {\n  if (event.pointerType === \"touch\") {\n    const positions = screenSpaceEventHandler._positions;\n\n    const identifier = event.pointerId;\n    const position = positions.get(identifier);\n    if (!defined(position)) {\n      return;\n    }\n\n    getPosition(screenSpaceEventHandler, event, position);\n    fireTouchMoveEvents(screenSpaceEventHandler, event);\n\n    const previousPositions = screenSpaceEventHandler._previousPositions;\n    Cartesian2.clone(\n      positions.get(identifier),\n      previousPositions.get(identifier)\n    );\n  } else {\n    handleMouseMove(screenSpaceEventHandler, event);\n  }\n}\n\n/**\n * @typedef {object} ScreenSpaceEventHandler.PositionedEvent\n *\n * An Event that occurs at a single position on screen.\n *\n * @property {Cartesian2} position\n */\n\n/**\n * @callback ScreenSpaceEventHandler.PositionedEventCallback\n *\n * The callback invoked when a positioned event triggers an event listener.\n *\n * @param {ScreenSpaceEventHandler.PositionedEvent} event The event which triggered the listener\n */\n\n/**\n * @typedef {object} ScreenSpaceEventHandler.MotionEvent\n *\n * An Event that starts at one position and ends at another.\n *\n * @property {Cartesian2} startPosition\n * @property {Cartesian2} endPosition\n */\n\n/**\n * @callback ScreenSpaceEventHandler.MotionEventCallback\n *\n * The callback invoked when a motion event triggers an event listener.\n *\n * @param {ScreenSpaceEventHandler.MotionEvent} event The event which triggered the listener\n */\n\n/**\n * @typedef {object} ScreenSpaceEventHandler.TwoPointEvent\n *\n * An Event that occurs at a two positions on screen.\n *\n * @property {Cartesian2} position1\n * @property {Cartesian2} position2\n */\n\n/**\n * @callback ScreenSpaceEventHandler.TwoPointEventCallback\n *\n * The callback invoked when a two-point event triggers an event listener.\n *\n * @param {ScreenSpaceEventHandler.TwoPointEvent} event The event which triggered the listener\n */\n\n/**\n * @typedef {object} ScreenSpaceEventHandler.TwoPointMotionEvent\n *\n * An Event that starts at a two positions on screen and moves to two other positions.\n *\n * @property {Cartesian2} position1\n * @property {Cartesian2} position2\n * @property {Cartesian2} previousPosition1\n * @property {Cartesian2} previousPosition2\n */\n\n/**\n * @callback ScreenSpaceEventHandler.TwoPointMotionEventCallback\n *\n * The callback invoked when a two-point motion event triggers an event listener.\n *\n * @param {ScreenSpaceEventHandler.TwoPointMotionEvent} event The event which triggered the listener\n */\n\n/**\n * @callback ScreenSpaceEventHandler.WheelEventCallback\n *\n * The callback invoked when a mouse-wheel event triggers an event listener.\n *\n * @param {number} delta The amount that the mouse wheel moved\n */\n\n/**\n * Handles user input events. Custom functions can be added to be executed on\n * when the user enters input.\n *\n * @alias ScreenSpaceEventHandler\n *\n * @param {HTMLCanvasElement} [element=document] The element to add events to.\n *\n * @constructor\n */\nfunction ScreenSpaceEventHandler(element) {\n  this._inputEvents = {};\n  this._buttonDown = {\n    LEFT: false,\n    MIDDLE: false,\n    RIGHT: false,\n  };\n  this._isPinching = false;\n  this._isTouchHolding = false;\n  this._lastSeenTouchEvent = -ScreenSpaceEventHandler.mouseEmulationIgnoreMilliseconds;\n\n  this._primaryStartPosition = new Cartesian2();\n  this._primaryPosition = new Cartesian2();\n  this._primaryPreviousPosition = new Cartesian2();\n\n  this._positions = new AssociativeArray();\n  this._previousPositions = new AssociativeArray();\n\n  this._removalFunctions = [];\n\n  this._touchHoldTimer = undefined;\n\n  // TODO: Revisit when doing mobile development. May need to be configurable\n  // or determined based on the platform?\n  this._clickPixelTolerance = 5;\n  this._holdPixelTolerance = 25;\n\n  this._element = defaultValue(element, document);\n\n  registerListeners(this);\n}\n\n/**\n * Set a function to be executed on an input event.\n *\n * @param {ScreenSpaceEventHandler.PositionedEventCallback|ScreenSpaceEventHandler.MotionEventCallback|ScreenSpaceEventHandler.WheelEventCallback|ScreenSpaceEventHandler.TwoPointEventCallback|ScreenSpaceEventHandler.TwoPointMotionEventCallback} action Function to be executed when the input event occurs.\n * @param {ScreenSpaceEventType} type The ScreenSpaceEventType of input event.\n * @param {KeyboardEventModifier} [modifier] A KeyboardEventModifier key that is held when a <code>type</code>\n * event occurs.\n *\n * @see ScreenSpaceEventHandler#getInputAction\n * @see ScreenSpaceEventHandler#removeInputAction\n */\nScreenSpaceEventHandler.prototype.setInputAction = function (\n  action,\n  type,\n  modifier\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(action)) {\n    throw new DeveloperError(\"action is required.\");\n  }\n  if (!defined(type)) {\n    throw new DeveloperError(\"type is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const key = getInputEventKey(type, modifier);\n  this._inputEvents[key] = action;\n};\n\n/**\n * Returns the function to be executed on an input event.\n *\n * @param {ScreenSpaceEventType} type The ScreenSpaceEventType of input event.\n * @param {KeyboardEventModifier} [modifier] A KeyboardEventModifier key that is held when a <code>type</code>\n * event occurs.\n *\n * @returns {ScreenSpaceEventHandler.PositionedEventCallback|ScreenSpaceEventHandler.MotionEventCallback|ScreenSpaceEventHandler.WheelEventCallback|ScreenSpaceEventHandler.TwoPointEventCallback|ScreenSpaceEventHandler.TwoPointMotionEventCallback} The function to be executed on an input event.\n *\n * @see ScreenSpaceEventHandler#setInputAction\n * @see ScreenSpaceEventHandler#removeInputAction\n */\nScreenSpaceEventHandler.prototype.getInputAction = function (type, modifier) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(type)) {\n    throw new DeveloperError(\"type is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const key = getInputEventKey(type, modifier);\n  return this._inputEvents[key];\n};\n\n/**\n * Removes the function to be executed on an input event.\n *\n * @param {ScreenSpaceEventType} type The ScreenSpaceEventType of input event.\n * @param {KeyboardEventModifier} [modifier] A KeyboardEventModifier key that is held when a <code>type</code>\n * event occurs.\n *\n * @see ScreenSpaceEventHandler#getInputAction\n * @see ScreenSpaceEventHandler#setInputAction\n */\nScreenSpaceEventHandler.prototype.removeInputAction = function (\n  type,\n  modifier\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(type)) {\n    throw new DeveloperError(\"type is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const key = getInputEventKey(type, modifier);\n  delete this._inputEvents[key];\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see ScreenSpaceEventHandler#destroy\n */\nScreenSpaceEventHandler.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Removes listeners held by this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * handler = handler && handler.destroy();\n *\n * @see ScreenSpaceEventHandler#isDestroyed\n */\nScreenSpaceEventHandler.prototype.destroy = function () {\n  unregisterListeners(this);\n\n  return destroyObject(this);\n};\n\n/**\n * The amount of time, in milliseconds, that mouse events will be disabled after\n * receiving any touch events, such that any emulated mouse events will be ignored.\n * @type {number}\n * @default 800\n */\nScreenSpaceEventHandler.mouseEmulationIgnoreMilliseconds = 800;\n\n/**\n * The amount of time, in milliseconds, before a touch on the screen becomes a\n * touch and hold.\n * @type {number}\n * @default 1500\n */\nScreenSpaceEventHandler.touchHoldDelayMilliseconds = 1500;\nexport default ScreenSpaceEventHandler;\n"],"names":["ConstantProperty","value","Event","time","result","oldValue","isDefined","defined","hasClone","hasEquals","other","createProperty","name","privateName","subscriptionName","configurable","createPropertyCallback","subscription","createConstantProperty","createPropertyDescriptor","defaultValue","BillboardGraphics","options","source","DeveloperError","Property","left","right","length","i","property","valueDefault","TimeInterval","JulianDate","stopComparedToStart","scratchInterval","Check","dates","start","stop","isStartIncluded","isStopIncluded","data","timeInterval","precision","dataComparer","epsilon","mergeCallback","leftStart","leftStop","rightStart","rightStop","intersectsStartRight","intersectsStartLeft","leftIsStartIncluded","leftIsStopIncluded","rightIsStartIncluded","rightIsStopIncluded","leftLessThanRight","julianDate","startComparedToDate","dateComparedToStop","MINIMUM_VALUE","MAXIMUM_VALUE","MAXIMUM_INTERVAL","Iso8601","Iso8601$1","ColorMaterialProperty","color","Color","ShadowVolumeAppearanceVS","GeometryInstanceAttribute","ShadowVolumeAppearanceFS","ShadowVolumeAppearance","extentsCulling","planarExtents","appearance","colorShaderDependencies","ShaderDependencies","pickShaderDependencies","PerInstanceColorAppearance","materialShaderSource","columbusView2D","dependencies","defines","materialSource","ShaderSource","vertexShaderSource","mapProjection","createShadowVolumeAppearanceVS","longitudeExtentsCartesianScratch","Cartesian3","longitudeExtentsCartographicScratch","Cartographic","longitudeExtentsEncodeScratch","shaderDependencies","projectionExtentDefines","allDefines","eastMostCartographic","CesiumMath","eastMostCartesian","encoded","EncodedCartesian3","westMostCartographic","westMostCartesian","pointLineDistance","point1","point2","point","Cartesian2","points2DScratch","addTextureCoordinateRotationAttributes","attributes","textureCoordinateRotationPoints","points2D","minXYCorner","maxYCorner","maxXCorner","ComponentDatatype","inverseExtentX","inverseExtentY","cartographicScratch","cornerScratch","northWestScratch","southEastScratch","highLowScratch","add2DTextureCoordinateAttributes","rectangle","projection","carto","southWestCorner","northWest","southEast","valuesHigh","valuesLow","enuMatrixScratch","Matrix4","inverseEnuScratch","rectanglePointCartesianScratch","rectangleCenterScratch","pointsCartographicScratch","computeRectangleBounds","ellipsoid","height","southWestCornerResult","eastVectorResult","northVectorResult","centerCartographic","Rectangle","centerCartesian","enuMatrix","Transforms","inverseEnu","west","east","north","south","cartographics","longitudeCenter","latitudeCenter","minX","maxX","minY","maxY","pointCartesian","southEastCorner","northWestCorner","eastwardScratch","northwardScratch","encodeScratch","boundingRectangle","corner","eastward","northward","spherePointScratch","latLongToSpherical","latitude","longitude","cartographic","spherePoint","magXY","sphereLatitude","sphereLongitude","sphericalScratch","southWestExtents","northEastExtents","rotationRadians","longitudeRangeInverse","latitudeRangeInverse","shouldUseSpherical","ClassificationPrimitive","geometryInstances","ClassificationType","scene","getStencilDepthRenderState","enableStencil","mask3DTiles","stencilFunction","StencilFunction","StencilOperation","StencilConstants","DepthFunction","getColorRenderState","BlendingState","pickRenderState","createRenderStates","classificationPrimitive","context","twoPasses","stencilEnabled","RenderState","modifyForEncodedNormals","primitive","attributeName","attributeDecl","globalDecl","decode","modifiedVS","compressedMain","createShaderProgram","frameState","vs","Primitive","cullFragmentsUsingExtents","extrudedDefine","vsSource","fsSource","ShadowVolumeFS","attributeLocations","shadowVolumeAppearance","ShaderProgram","vsPick","pickFS3D","pickVS3D","pickProgram2D","pickFS2D","pickVS2D","fsColorSource","vsColorSource","colorProgram2D","fsColorSource2D","vsColorSource2D","createColorCommands","colorCommands","command","derivedCommand","vaIndex","uniformMap","needs2DShader","vertexArray","DrawCommand","Pass","material","combine","derived2DCommand","commandsIgnoreShow","spStencil","commandIndex","j","commandIgnoreShow","createPickCommands","pickCommands","usePickOffsets","pickOffsets","pickIndex","pickOffset","createCommands","translucent","boundingVolumeIndex","updateAndQueueRenderCommand","modelMatrix","cull","boundingVolume","debugShowBoundingVolume","updateAndQueuePickCommand","updateAndQueueCommands","boundingVolumes","SceneMode","classificationType","queueTerrainCommands","queue3DTilesCommands","passes","colorLength","ignoreShowCommands","ignoreShowCommandsLength","pickLength","that","primitiveOptions","instances","instance","hasPerColorAttribute","allColorsSame","firstColor","hasSphericalExtentsAttribute","hasPlanarExtentsAttributes","ColorGeometryInstanceAttribute","GeometryInstance","geometry","id","destroyObject","GroundPrimitiveUniformMap","GroundPrimitive","geometryInstancesArray","geometryInstanceCount","ApproximateTerrainHeights","getComputeMaximumHeightFunction","granularity","r","delta","getComputeMinimumHeightFunction","scratchBVCartesianHigh","scratchBVCartesianLow","scratchBVCartesian","scratchBVCartographic","scratchBVRectangle","getRectangle","highPositions","lowPositions","minLat","minLon","maxLat","maxLon","highPosition","lowPosition","position","setMinMaxTerrainHeights","createBoundingVolume","groundPrimitive","obb","OrientedBoundingBox","BoundingSphere","instanceType","groundInstances","instanceRectangle","boundingSphere","exaggeration","exaggerationRelativeHeight","VerticalExaggeration","useFragmentCulling","usePlanarExtents","instanceAttributes","attributeKey","index","PROJECTIONS","GeographicProjection","WebMercatorProjection","PROJECTION_COUNT","MITER_BREAK_SMALL","MITER_BREAK_LARGE","WALL_INITIAL_MIN_HEIGHT","WALL_INITIAL_MAX_HEIGHT","GroundPolylineGeometry","positions","ArcType","Ellipsoid","groundPolylineGeometry","projectionIndex","cart3Scratch1","cart3Scratch2","cart3Scratch3","computeRightNormal","end","maxHeight","startBottom","getPosition","startTop","endBottom","up","direction","forward","interpolatedCartographicScratch","interpolatedBottomScratch","interpolatedTopScratch","interpolatedNormalScratch","interpolateSegment","minHeight","arcType","normalsArray","bottomPositionsArray","topPositionsArray","cartographicsArray","ellipsoidLine","EllipsoidGeodesic","EllipsoidRhumbLine","surfaceDistance","interpolatedNormal","segments","interpointDistance","distanceFromStart","pointsToAdd","packIndex","interpolatedCartographic","interpolatedBottom","interpolatedTop","heightlessCartographicScratch","array","startingIndex","positionsLength","cartesian","loop","scene3DOnly","target","origin","tangentDirection","toPreviousScratch","toNextScratch","forwardScratch","vertexUpScratch","cosine90","cosine180","computeVertexMiterNormal","previousBottom","vertexBottom","vertexTop","nextBottom","toPrevious","toNext","XZ_PLANE","Plane","previousBottomScratch","vertexBottomScratch","vertexTopScratch","nextBottomScratch","vertexNormalScratch","intersectionScratch","cartographicScratch0","cartographicScratch1","cartographicIntersectionScratch","compute2dAttributes","p0","p1","c0","c1","rhumbLine","intersection","intersectionCartographic","intersectionLongitude","splitPositions","IntersectionTests","cartographicsLength","arrayRemoveDuplicates","vertexNormal","startCartographic","nextCartographic","prestartCartographic","vertexCartographic","endCartographic","preEndCartographic","postEndCartographic","generateGeometryAttributes","lineDirectionScratch","matrix3Scratch","Matrix3","quaternionScratch","Quaternion","breakMiter","endGeometryNormal","endTop","lineDirection","dot","vertexUp","angle","quaternion","rotationMatrix","endPosCartographicScratch","normalStartpointScratch","normalEndpointScratch","projectNormal","normal","projectedPosition","normalEndpoint","flipNormal","normalEndpointCartographic","normalEndpointProjected","adjustHeightNormalScratch","adjustHeightOffsetScratch","adjustHeights","bottom","top","adjustHeightBottom","adjustHeightTop","adjustHeightNormal","distanceForBottom","adjustHeightOffset","distanceForTop","nudgeDirectionScratch","nudgeXZ","startToXZdistance","endToXZdistance","offset","nudgeCartographic","absStartLon","absEndLon","endSign","startSign","startCartographicScratch","endCartographicScratch","segmentStartTopScratch","segmentEndTopScratch","segmentStartBottomScratch","segmentEndBottomScratch","segmentStartNormalScratch","segmentEndNormalScratch","getHeightCartographics","getHeightRectangleScratch","adjustHeightStartTopScratch","adjustHeightEndTopScratch","adjustHeightStartBottomScratch","adjustHeightEndBottomScratch","segmentStart2DScratch","segmentEnd2DScratch","segmentStartNormal2DScratch","segmentEndNormal2DScratch","offsetScratch","startUpScratch","endUpScratch","rightScratch","startPlaneNormalScratch","endPlaneNormalScratch","encodeScratch2D","forwardOffset2DScratch","right2DScratch","normalNudgeScratch","scratchBoundingSpheres","REFERENCE_INDICES","REFERENCE_INDICES_LENGTH","segmentCount","vertexCount","arraySizeVec4","indexCount","indices","positionsArray","startHiAndForwardOffsetX","startLoAndForwardOffsetY","startNormalAndForwardOffsetZ","endNormalAndTextureCoordinateNormalizationX","rightNormalAndTextureCoordinateNormalizationY","startHiLo2D","offsetAndRight2D","startEndNormals2D","texcoordNormalization2D","length2D","segmentStartCartesian","segmentEndCartesian","length3D","cartographicsIndex","vec2sWriteIndex","vec3sWriteIndex","vec4sWriteIndex","miterBroken","preEndBottom","lengthSoFar3D","lengthSoFar2D","sumHeights","startGeometryNormal","start2D","end2D","startGeometryNormal2D","endGeometryNormal2D","nudgeResult","direction2D","segmentLength3D","encodedStart","forwardOffset","startUp","rightNormal","startPlaneNormal","endUp","endPlaneNormal","texcoordNormalization3DX","texcoordNormalization3DY","segmentLength2D","encodedStart2D","forwardOffset2D","right2D","texcoordNormalization2DX","texcoordNormalization2DY","swap","vec4Index","vec2Index","wIndex","rightPlaneSide","topBottomSide","texcoordNormalization","adjustHeightStartBottom","adjustHeightEndBottom","adjustHeightStartTop","adjustHeightEndTop","getHeightsRectangle","minMaxHeights","normalNudge","indexOffset","boundingSpheres","GeometryAttribute","getVec4GeometryAttribute","Geometry","typedArray","PolylineShadowVolumeFS","PolylineShadowVolumeMorphFS","PolylineShadowVolumeMorphVS","PolylineShadowVolumeVS","PolylineColorAppearanceVS","defaultVertexShaderSource","PolylineCommon","defaultFragmentShaderSource","PerInstanceFlatColorAppearanceFS","FeatureDetection","PolylineColorAppearance","closed","vertexFormat","Appearance","VertexFormat","PolylineMaterialAppearanceVS","PolylineFS","PolylineMaterialAppearance","Material","GroundPolylinePrimitive","getRenderState","CullFace","groundPolylinePrimitive","vsMorph","fs","vsDefines","colorDefine","fsDefines","vsColor3D","fsColor3D","vsColor2D","colorProgramMorph","vsColorMorph","fsColorMorph","materialUniforms","derivedTilesetCommand","derived2DTilesetCommand","derivedMorphCommand","updateAndQueueCommand","morphing","geometryInstancesLength","geometryInstance","defaultRepeat","defaultTransparent","defaultColor","ImageMaterialProperty","createMaterialProperty","Resource","createMaterialPropertyDescriptor","BoxGraphics","ReferenceFrame","ReferenceFrame$1","PositionProperty","scratchMatrix3","inputFrame","outputFrame","icrfToFixed","ConstantPositionProperty","referenceFrame","definitionChanged","CorridorGraphics","createRawProperty","createRawPropertyDescriptor","CylinderGraphics","EllipseGraphics","EllipsoidGraphics","LabelGraphics","defaultNodeTransformation","TranslationRotationScale","NodeTransformationProperty","PropertyBag","propertyNames","len","propertyName","sourcePropertyNames","targetProperty","sourceProperty","propertiesEqual","a","b","aPropertyNames","bPropertyNames","aIndex","createNodeTransformationProperty","createNodeTransformationPropertyBag","createArticulationStagePropertyBag","ModelGraphics","sourceNodeTransformations","targetNodeTransformations","sourceArticulations","targetArticulations","Cesium3DTilesetGraphics","PathGraphics","PlaneGraphics","PointGraphics","createPolygonHierarchyProperty","PolygonHierarchy","PolygonGraphics","PolylineGraphics","PolylineVolumeGraphics","RectangleGraphics","WallGraphics","cartoScratch","ExtraPropertyNames","createConstantPositionProperty","createPositionPropertyDescriptor","createPropertyTypeDescriptor","Type","Entity","createGuid","updateShow","entity","children","isShowing","child","childShow","wasShowing","availability","propertyNamesLength","positionScratch","orientationScratch","orientation","heightReferenceProperty","heightOffset","heightReference","HeightReference","isHeightReferenceClamp","CallbackProperty","callback","isConstant","changed","entityOptionsScratch","fireChangedEvent","collection","added","removed","addedArray","removedArray","changedArray","EntityCollection","owner","AssociativeArray","oldShows","entities","entitiesLength","oldShow","startTime","stopTime","addedEntities","existingItem","existingItemId","addedItem","EventHelper","event","listener","scope","removalFunction","removalFunctions","compareIntervalStartTimes","TimeIntervalCollection","intervals","rightIntervals","date","indexOfScratch","binarySearch","interval","comparison","otherIntervals","leftInterval","rightInterval","julianDates","dataCallback","leadingInterval","trailingInterval","startIndex","startDate","endDate","scratchGregorianDate","GregorianDate","monthLengths","addToDate","duration","millisecond","second","minute","hour","day","month","year","isLeapYear","scratchJulianDate","durationRegex","parseDuration","iso8601","matches","seconds","scratchDuration","epoch","iso8601Durations","relativeToPrevious","previousDate","subscribeAll","eventHelper","items","CompositeProperty","innerProperty","CompositePositionProperty","ExtrapolationType","ExtrapolationType$1","LinearApproximation","degree","x","xTable","yTable","yStride","y0","y1","x0","x1","LinearApproximation$1","getTimestamp","getTimestamp$1","PackableNumber","arrayInsert","arrayLength","itemsLength","newLength","q","convertDate","timesSpliceArgs","valuesSpliceArgs","mergeNewSamples","times","values","newData","packedLength","newDataIndex","prevItem","timesInsertionPoint","valuesInsertionPoint","currentTime","nextTime","timesSpliceArgsCount","valuesSpliceArgsCount","SampledProperty","type","derivativeTypes","innerType","packedInterpolationLength","inputOrder","innerDerivativeTypes","derivativeType","derivativePackedLength","timesLength","timeout","endTime","interpolationAlgorithm","numberOfPoints","firstIndex","lastIndex","computedFirstIndex","computedLastIndex","destinationIndex","sourceIndex","interpolationResult","valuesChanged","interpolationDegree","derivatives","hasDerivatives","derivativesLength","derivativeValues","packedSamples","removeSamples","numberToRemove","stopIndex","otherDerivativeTypes","otherHasDerivatives","otherTimes","otherValues","SampledPositionProperty","numberOfDerivatives","ScaledPositionProperty","MAX_BITS","D_CODES","BL_CODES","LENGTH_CODES","LITERALS","L_CODES","HEAP_SIZE","END_BLOCK","MAX_BL_BITS","REP_3_6","REPZ_3_10","REPZ_11_138","Buf_size","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_DEFAULT_STRATEGY","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","extractArray","flatArray","_dist_code","Tree","gen_bitlen","s","tree","stree","extra","base","max_length","h","n","bits","xbits","f","overflow","bi_reverse","code","res","gen_codes","max_code","bl_count","next_code","elems","m","node","dist","StaticTree","static_tree","extra_bits","extra_base","static_ltree2_first_part","static_ltree2_second_part","static_dtree_first_part","static_dtree_second_part","MAX_MEM_LEVEL","DEF_MEM_LEVEL","Config","good_length","max_lazy","nice_length","max_chain","func","STORED","FAST","SLOW","config_table","z_errmsg","NeedMore","BlockDone","FinishStarted","FinishDone","PRESET_DICT","INIT_STATE","BUSY_STATE","FINISH_STATE","Z_DEFLATED","STORED_BLOCK","STATIC_TREES","DYN_TREES","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","smaller","depth","tn2","tm2","Deflate","strm","status","pending_buf_size","last_flush","w_size","w_bits","w_mask","win","window_size","prev","head","ins_h","hash_size","hash_bits","hash_mask","hash_shift","block_start","match_length","prev_match","match_available","strstart","match_start","lookahead","prev_length","max_chain_length","max_lazy_match","level","strategy","good_match","nice_match","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","lit_bufsize","last_lit","last_eob_len","bi_buf","bi_valid","lm_init","init_block","tr_init","k","heap","v","scan_tree","prevlen","curlen","nextlen","count","max_count","min_count","build_bl_tree","max_blindex","put_byte","p","put_short","w","putShortMSB","send_bits","val","send_code","c","c2","send_tree","send_all_trees","lcodes","dcodes","blcodes","rank","bi_flush","_tr_align","_tr_tally","lc","out_length","in_length","dcode","compress_block","ltree","dtree","lx","bi_windup","copy_block","buf","header","_tr_stored_block","stored_len","eof","_tr_flush_block","opt_lenb","static_lenb","flush_block_only","fill_window","more","deflate_stored","flush","max_block_size","max_start","longest_match","cur_match","chain_length","scan","match","best_len","limit","_nice_match","wmask","strend","scan_end1","scan_end","deflate_fast","hash_head","bflush","deflate_slow","max_insert","deflateReset","_level","_method","memLevel","_strategy","err","_strm","dictionary","dictLength","level_flags","old_flush","bstate","ZStream","ret","size","ZipDeflate","z","bufsize","getMaximumCompressedSize","onprogress","bufferIndex","bufferSize","buffers","chunk","uncompressedSize","Z_MEM_ERROR","inflate_mask","MANY","fixed_bl","fixed_bd","fixed_tl","fixed_td","cplens","cplext","cpdist","cpdext","BMAX","InfTree","hn","u","huft_build","bindex","d","e","t","hp","g","l","mask","xp","y","initWorkArea","vsize","bb","tb","nl","nd","bl","bd","tl","td","START","LEN","LENEXT","DIST","DISTEXT","COPY","LIT","WASH","END","BADCODE","InfCodes","mode","tree_index","need","lit","get","lbits","dbits","ltree_index","dtree_index","inflate_fast","tl_index","td_index","tp","tp_index","ml","md","tp_index_t_3","tindex","border","TYPE","LENS","TABLE","BTREE","DTREE","CODES","DRY","DONELOCKS","BADBLOCKS","InfBlocks","table","blens","codes","last","hufts","check","inftree","bl_","bd_","tl_","td_","METHOD","FLAG","DICT4","DICT3","DICT2","DICT1","DICT0","BLOCKS","DONE","BAD","mark","Inflate","inflateReset","istate","ZipInflate","nomoreinput","MAX_32_BITS","MAX_16_BITS","COMPRESSION_METHOD_DEFLATE","COMPRESSION_METHOD_STORE","COMPRESSION_METHOD_AES","LOCAL_FILE_HEADER_SIGNATURE","SPLIT_ZIP_FILE_SIGNATURE","DATA_DESCRIPTOR_RECORD_SIGNATURE","CENTRAL_FILE_HEADER_SIGNATURE","END_OF_CENTRAL_DIR_SIGNATURE","ZIP64_END_OF_CENTRAL_DIR_SIGNATURE","ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE","END_OF_CENTRAL_DIR_LENGTH","ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH","ZIP64_END_OF_CENTRAL_DIR_LENGTH","ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH","EXTRAFIELD_TYPE_ZIP64","EXTRAFIELD_TYPE_AES","EXTRAFIELD_TYPE_NTFS","EXTRAFIELD_TYPE_NTFS_TAG1","EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP","EXTRAFIELD_TYPE_UNICODE_PATH","EXTRAFIELD_TYPE_UNICODE_COMMENT","EXTRAFIELD_TYPE_USDZ","BITFLAG_ENCRYPTED","BITFLAG_LEVEL","BITFLAG_DATA_DESCRIPTOR","BITFLAG_LANG_ENCODING_FLAG","FILE_ATTR_MSDOS_DIR_MASK","VERSION_DEFLATE","VERSION_ZIP64","VERSION_AES","DIRECTORY_SIGNATURE","MAX_DATE","MIN_DATE","UNDEFINED_VALUE","UNDEFINED_TYPE","FUNCTION_TYPE","StreamAdapter","Codec","_format","codec","controller","MINIMUM_CHUNK_SIZE","maxWorkers","DEFAULT_CONFIGURATION","config","getConfiguration","getChunkSize","configure","configuration","baseURL","chunkSize","terminateWorkerTimeout","useCompressionStream","useWebWorkers","CompressionStream","DecompressionStream","workerScripts","setIfDefined","deflate","inflate","propertyValue","Crc32","crc","Crc32Stream","stream","crc32","encodeText","bitArray","a1","a2","shift","_end","carry","out","last2","shift2","arr","byteLength","tmp","bytes","hash","sha1","ol","words","cipher","key","aes","sbox","decTable","keyLen","encKey","decKey","rcon","encTable","sboxInv","th","xInv","x2","x4","x8","tDec","tEnc","input","dir","nInnerRounds","t0","t1","t2","t3","kIndex","b2","random","m_w","m_z","rcache","_r","prf","iv","word","b1","b3","counter","misc","password","salt","ui","arrayBuffer","outLength","hmac","Hash","exKey","bs","GET_RANDOM_VALUES_SUPPORTED","ERR_INVALID_PASSWORD","ERR_INVALID_SIGNATURE","ERR_ABORT_CHECK_PASSWORD","getRandomValues","BLOCK_LENGTH","RAW_FORMAT","PBKDF2_ALGORITHM","HASH_ALGORITHM","HASH_FUNCTION","BASE_KEY_ALGORITHM","DERIVED_BITS_ALGORITHM","DERIVED_BITS_USAGE","SALT_LENGTH","KEY_LENGTH","SIGNATURE_LENGTH","COUNTER_DEFAULT_VALUE","CRYPTO_API_SUPPORTED","subtle","SUBTLE_API_SUPPORTED","codecBytes","Aes","CtrGladman","HmacSha1","IMPORT_KEY_SUPPORTED","DERIVE_BITS_SUPPORTED","AESDecryptionStream","rawPassword","signed","encryptionStrength","checkPasswordOnly","resolve","encodePassword","aesCrypto","strength","resolveReady","ready","createDecryptionKeys","subarray","output","append","ctr","pending","chunkToDecrypt","originalSignature","decryptedChunkArray","encryptedChunk","toBits","decryptedChunk","fromBits","signature","indexSignature","AESEncryptionStream","preamble","createEncryptionKeys","encryptedChunkArray","concat","paddingStart","paddingEnd","verifySignature","inputLength","expand","inputChunk","outputChunk","decrypt","passwordVerificationKey","createKeys","passwordVerification","encrypt","baseKey","importKey","derivedBits","deriveBits","compositeKey","authentication","format","algorithm","extractable","keyUsages","leftArray","rightArray","inputArray","begin","HEADER_LENGTH","ZipCryptoDecryptionStream","zipCrypto","decryptedHeader","ZipCryptoEncryptionStream","getByte","updateKeys","keys","byte","key0","key1","key2","getInt32","getInt8","temp","number","COMPRESSION_FORMAT","DeflateStream","CompressionStreamNative","compressed","encrypted","crc32Stream","encryptionStream","readable","filterEmptyChunks","pipeThrough","pipeThroughCommpressionStream","setReadable","InflateStream","DecompressionStreamNative","decryptionStream","dataViewSignature","CodecStreamNative","CodecStream","transformStream","MESSAGE_EVENT_TYPE","MESSAGE_START","MESSAGE_PULL","MESSAGE_DATA","MESSAGE_ACK_DATA","MESSAGE_CLOSE","CODEC_DEFLATE","CODEC_INFLATE","codecType","Stream","outputSize","inputSize","inputSizeStream","outputSizeStream","ChunkStream","pendingChunk","transform","newChunk","WEB_WORKERS_SUPPORTED","CodecWorker","workerData","writable","streamOptions","transferStreams","scripts","onTaskFinished","signal","ProgressWatcherStream","worker","busy","resolveTerminated","createWebWorkerInterface","createWorkerInterface","readableSource","onstart","onend","chunkOffset","callHandler","handler","parameters","runWorker","getWebWorker","runWebWorker","codecStream","resolveResult","rejectResult","reject","watchClosedStream","streamsTransferred","sendMessage","resultValue","writableSource","resolveStreamClosed","writer","reason","classicWorkersSupported","transferStreamsSupported","url","workerOptions","scriptUrl","onMessage","message","transferables","error","messageId","reader","stack","responseError","close","done","pool","pendingRequests","indexWorker","streamCopy","getWorker","clearTerminateTimeout","terminateWorker","terminateTimeout","ERR_ITERATOR_COMPLETED_TOO_SOON","CONTENT_TYPE_TEXT_PLAIN","HTTP_HEADER_CONTENT_TYPE","DEFAULT_CHUNK_SIZE","PROPERTY_NAME_WRITABLE","Reader","diskNumberStart","readUint8Array","Writer","Data64URIWriter","contentType","indexArray","dataString","BlobReader","blob","offsetEnd","BlobWriter","headers","TextReader","text","TextWriter","encoding","utf8","SplitDataReader","readers","diskReader","indexDiskReader","diskNumber","currentDiskNumber","currentReaderOffset","currentReader","currentReaderSize","chunkLength","SplitDataWriter","writerGenerator","maxSize","diskSourceWriter","diskWritable","diskWriter","availableSize","writeChunk","closeDisk","initStream","initSize","initReader","initWriter","CP437","VALID_CP437","decodeCP437","stringValue","indexCharacter","PROPERTY_NAME_FILENAME","PROPERTY_NAME_RAW_FILENAME","PROPERTY_NAME_COMMENT","PROPERTY_NAME_RAW_COMMENT","PROPERTY_NAME_UNCOMPPRESSED_SIZE","PROPERTY_NAME_COMPPRESSED_SIZE","PROPERTY_NAME_OFFSET","PROPERTY_NAME_DISK_NUMBER_START","PROPERTY_NAME_LAST_MODIFICATION_DATE","PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE","PROPERTY_NAME_LAST_ACCESS_DATE","PROPERTY_NAME_RAW_LAST_ACCESS_DATE","PROPERTY_NAME_CREATION_DATE","PROPERTY_NAME_RAW_CREATION_DATE","PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE","PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE","PROPERTY_NAME_MS_DOS_COMPATIBLE","PROPERTY_NAME_ZIP64","PROPERTY_NAMES","Entry","ERR_DUPLICATED_NAME","ERR_INVALID_COMMENT","ERR_INVALID_ENTRY_COMMENT","ERR_INVALID_ENTRY_NAME","ERR_INVALID_VERSION","ERR_INVALID_ENCRYPTION_STRENGTH","ERR_INVALID_EXTRAFIELD_TYPE","ERR_INVALID_EXTRAFIELD_DATA","ERR_UNSUPPORTED_FORMAT","EXTRAFIELD_DATA_AES","workers","pendingEntries","ZipWriter","addSplitZipSignature","zipWriter","pendingAddFileCalls","promiseAddFile","addFile","pendingEntry","comment","closeFile","getOptionValue","encode","rawFilename","getLength","rawComment","version","versionMadeBy","lastModDate","lastAccessDate","creationDate","msDosCompatible","internalFileAttribute","externalFileAttribute","extendedTimestamp","keepOrder","bufferedWrite","dataDescriptorSignature","dataDescriptor","zip64","rawExtraField","extraField","extraFieldSize","arraySet","maximumCompressedSize","maximumEntrySize","zip64Enabled","diskOffset","zip64UncompressedSize","zip64CompressedSize","zip64Offset","zip64DiskNumberStart","headerInfo","getHeaderInfo","dataDescriptorInfo","getDataDescriptorInfo","metadataSize","fileEntry","getFileEntry","entryInfo","files","usdz","previousFileEntry","releaseLockWriter","releaseLockCurrentFileEntry","writingBufferedEntryData","writingEntryData","fileWriter","blobPromise","lockPreviousFileEntry","requestLockCurrentFileEntry","requestLockWriter","signatureArray","signatureArrayView","getDataView","setUint32","writeData","appendExtraFieldUSDZ","skipDiskIfNeeded","createFileEntry","writeExtraHeaderInfo","setZip64ExtraInfo","lockWriter","lock","localHeaderArray","headerArray","rawLastModDate","compressionMethod","rawExtraFieldExtendedTimestamp","extraFieldExtendedTimestampFlag","rawExtraFieldNTFS","rawExtraFieldAES","dataDescriptorArray","directory","compressedSize","rawExtraFieldZip64","rawExtraFieldZip64Length","setEntryInfo","extraFieldAESView","setUint16","setUint8","extraFieldExtendedTimestampView","extraFieldNTFSView","lastModTimeNTFS","getTimeNTFS","setBigUint64","bitFlag","headerView","dateArray","dateView","lastModDateMsDos","extraFieldLength","localHeaderView","zipWriterOffset","localHeaderArrayView","extraBytesLength","rawExtraFieldUSDZ","extraFieldUSDZView","previousLocalHeaderArray","dataDescriptorView","dataDescriptorOffset","rawExtraFieldZip64View","rawExtraFieldZip64Offset","entryData","arrayBufferView","directoryDataLength","directoryOffset","filesLength","rawExtraFieldTimestamp","directoryArray","directoryView","directoryDiskOffset","indexFileEntry","fileEntryOffset","rawExtraFieldCDExtendedTimestamp","directoryEntryLength","lastDiskNumber","endOfdirectoryArray","endOfdirectoryView","commentLength","streamWriter","view","arrayLikes","arrayLike","BILLBOARD_SIZE","kmlNamespace","gxNamespace","xmlnsNamespace","ExternalFileHandler","modelCallback","imageTypeRegex","texture","filename","regexResult","promise","getModelBlobHander","model","RuntimeError","externalFiles","ValueGetter","defaultVal","colorToString","StyleCache","element","ids","styleId","parentElement","styles","firstElement","IdManager","exportKml","kmz","state","rootEntities","kmlDoc","kmlElement","kmlDocumentElement","recurseEntities","externalFileHandler","kmlString","createKmz","zWorkerUrl","buildModuleUrl","zip.configure","blobWriter","zip.BlobWriter","zip.ZipWriter","zip.TextReader","addExternalFilesToZip","zip.BlobReader","styleCache","entityAvailability","defaultAvailability","sampleDuration","parentNode","valueGetter","idManager","overlays","geometries","createPoint","createLineString","createPolygon","createModel","timeSpan","createBasicElementWithText","overlayIndex","overlay","geometryCount","placemark","labelGraphics","labelStyle","scale","styleCount","style","styleIndex","multigeometry","geometryIndex","folderNode","scratchCartesian3","scratchCartographic","pointGraphics","entityPositionProperty","createTracks","coordinates","getCoordinates","pointGeometry","altitudeMode","getAltitudeMode","iconStyle","createIconStyleFromBillboard","createIconStyleFromPoint","useEntityPositionProperty","isModel","tracks","positionProperty","trackAltitudeMode","positionTimes","positionValues","constCoordinates","stopDate","trackGeometry","when","coord","createModelGeometry","multiTrackGeometry","path","width","lineStyle","processMaterial","pixelSize","billboardGraphics","image","icon","imageSubRegion","pixelOffset","horizontalOrigin","HorizontalOrigin","verticalOrigin","VerticalOrigin","hotSpot","rotation","alignedAxis","polylineGraphics","lineStringGeometry","clampToGround","altitudeModeText","positionsProperty","cartesians","zIndex","getRectangleBoundaries","rectangleGraphics","extrudedHeight","coordinatesProperty","coordinateStrings","cornerFunction","outerBoundaryIs","linearRing","getLinearRing","perPositionHeight","positionCount","getPolygonBoundaries","polygonGraphics","boundaries","hierarchyProperty","hierarchy","holes","holeCount","innerBoundaryIs","isRectangle","createGroundOverlay","polygonGeometry","boundaryCount","polyStyle","fill","outline","outlineWidth","outlineColor","groundOverlay","latLonBox","href","modelGraphics","modelGeometry","scaleElement","link","uri","location","materialProperty","elementName","elementValue","namespace","KeyboardEventModifier","KeyboardEventModifier$1","ScreenSpaceEventType","ScreenSpaceEventType$1","screenSpaceEventHandler","rect","getInputEventKey","modifier","getModifier","MouseButton","registerListener","domType","registerListeners","alternateElement","handlePointerDown","handlePointerUp","handlePointerMove","handleMouseDown","handleMouseUp","handleMouseMove","handleTouchStart","handleTouchEnd","handleTouchMove","handleDblClick","wheelEvent","handleWheel","unregisterListeners","mouseDownEvent","gotTouchEvent","canProcessMouseEvent","ScreenSpaceEventHandler","checkPixelTolerance","startPosition","endPosition","pixelTolerance","xDiff","yDiff","button","screenSpaceEventType","action","mouseUpEvent","mouseClickEvent","cancelMouseEvent","clickScreenSpaceEventType","clickAction","mouseMoveEvent","previousPosition","mouseDblClickEvent","deltaMode","changedTouches","touch","identifier","fireTouchEvents","previousPositions","touchStartEvent","touch2StartEvent","touchEndEvent","touchClickEvent","touchHoldEvent","numberOfTouches","pinching","fireTouchMoveEvents","touchMoveEvent","touchPinchMovementEvent","position1","position2","previousPosition1","previousPosition2","dX","dY","prevDX","prevDY","prevDist","cY","prevCY","prevAngle"],"mappings":"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AAG,EAAG,GAC9I,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAC9I,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAC9I,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAC/I,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAC/I,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EACjJ,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAC/I,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAC7I,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAC/I,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAC7I,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAChJ,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAC/I,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAC/I,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAC/I,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAC9I,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAC9I,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAC/I,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAChJ,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EACjJ,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EACjJ,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAChJ,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EACjJ,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EACjJ,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAC/I,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EACjJ,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EACjJ,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EACjJ,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EACjJ,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EACjJ,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84]}